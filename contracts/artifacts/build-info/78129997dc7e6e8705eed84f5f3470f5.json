{
	"id": "78129997dc7e6e8705eed84f5f3470f5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/FlameBornToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport { AccessControl } from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nerror InvalidMultisigAddress();\nerror MintingDisabled();\n\ncontract FlamebornToken is ERC20, AccessControl {\n    bytes32 public constant MULTISIG_ROLE = keccak256(\"MULTISIG_ROLE\");\n    uint256 public constant INITIAL_SUPPLY = 100 * 10 ** 18;\n    bool public initialMintComplete;\n\n    constructor(address multisigWallet) ERC20(\"Flameborn\", \"FLB\") {\n        if (multisigWallet == address(0)) revert InvalidMultisigAddress();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, multisigWallet);\n        _grantRole(MULTISIG_ROLE, multisigWallet);\n\n        _mint(multisigWallet, INITIAL_SUPPLY);\n        initialMintComplete = true;\n    }\n\n    /// @notice Allows multisig to burn tokens from an address\n    function burn(address from, uint256 amount) external onlyRole(MULTISIG_ROLE) {\n        _burn(from, amount);\n    }\n\n    /// @notice Optional: Controlled mint interface, if future minting allowed\n    function controlledMint(address to, uint256 amount) external onlyRole(MULTISIG_ROLE) {\n        if (initialMintComplete) revert MintingDisabled();\n        _mint(to, amount);\n        initialMintComplete = true; // Prevent future mints\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.24;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.24;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.24;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.24;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.24;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.24;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.24;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8c7d0d3ac7052d0f8f8d9d7fe006cde620b76107a0d911b23d85419416dc02ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb27991ae3a692e616486604cbc5dc745d10a7c57e08b54d98694d608c6674e5\",\"dweb:/ipfs/QmbgFvuuQQzat3C82dtkoNwZKZSHBijbzCpdKQXM7AHdZJ\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6d5202b198d9a3451ee70f06e579ffa5197ef3984f13f67676c64bc52730a977\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51701f325b75748e73e1c24f3961960b80f7dfc59abc7d5aa463bd01b7776450\",\"dweb:/ipfs/QmectxGDbsEfD8uCnSW4oHH2YEiRetvZPxepXQrJyT12JN\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x94b4f2ccfa80409154abeac7511daa9e229cfa3cf4e8f1b3331be1290e45d0c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e641814fb7ecedead8f59862d6336f259828fb452e1decfdd769aab60aeacf\",\"dweb:/ipfs/Qmae4ec2jLdCe94bkSxU8RhRducPyQAHcmB3GjsHjKF1Zg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x20de92b74687fac553a39e6f3677c42494533dd5548ad53118c76c92cad6d24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893d3d0226218c89e1974f4011cf034f080a6186951b1c6f9976a33568debc59\",\"dweb:/ipfs/QmcAB7UuZjcTMVrUbdTTniQX9FbJ1ubCa4QjoWbAZQc6KP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x20de92b74687fac553a39e6f3677c42494533dd5548ad53118c76c92cad6d24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893d3d0226218c89e1974f4011cf034f080a6186951b1c6f9976a33568debc59\",\"dweb:/ipfs/QmcAB7UuZjcTMVrUbdTTniQX9FbJ1ubCa4QjoWbAZQc6KP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x20de92b74687fac553a39e6f3677c42494533dd5548ad53118c76c92cad6d24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893d3d0226218c89e1974f4011cf034f080a6186951b1c6f9976a33568debc59\",\"dweb:/ipfs/QmcAB7UuZjcTMVrUbdTTniQX9FbJ1ubCa4QjoWbAZQc6KP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x20de92b74687fac553a39e6f3677c42494533dd5548ad53118c76c92cad6d24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893d3d0226218c89e1974f4011cf034f080a6186951b1c6f9976a33568debc59\",\"dweb:/ipfs/QmcAB7UuZjcTMVrUbdTTniQX9FbJ1ubCa4QjoWbAZQc6KP\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1424722fbd4bec7f831f329de06ba81a4cf5247986bc42abce8d7c94a6f1e797\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbe24fd7e0e9dcbe73b3afb695d9eb0aa6ba3b8952c2548cbbd6714836218772\",\"dweb:/ipfs/QmP8G5nwGBfW4yLavqqt97AMnUG1vFzsbPCQJ2HZ8jGB4A\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x201000a1a5d73b5b76feb8918817f48c664f3300da80571c31e660db048de400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a82db9b877afa567314c93e2cf7079fadd6b4e9c7ec65b894ee3f373dbebf13\",\"dweb:/ipfs/Qmf7LCgbN1PzFdpdhyv5AGfzAWg9h12RKv2mD52YvTTsQu\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xbb0875e8edc5f44bdb7ce34bd395ac5cbeffbcf784afebdfe80e090c2a1b01e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb869b59e18649df21fc11961d3adbe27ed0507d0cc0f15bc0000300833c274c\",\"dweb:/ipfs/QmSUASB1iw59KuXjqbGHw89Q7Yrg33BQ2pZVTYra1FDTgG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8c7d0d3ac7052d0f8f8d9d7fe006cde620b76107a0d911b23d85419416dc02ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb27991ae3a692e616486604cbc5dc745d10a7c57e08b54d98694d608c6674e5\",\"dweb:/ipfs/QmbgFvuuQQzat3C82dtkoNwZKZSHBijbzCpdKQXM7AHdZJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x201000a1a5d73b5b76feb8918817f48c664f3300da80571c31e660db048de400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a82db9b877afa567314c93e2cf7079fadd6b4e9c7ec65b894ee3f373dbebf13\",\"dweb:/ipfs/Qmf7LCgbN1PzFdpdhyv5AGfzAWg9h12RKv2mD52YvTTsQu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x201000a1a5d73b5b76feb8918817f48c664f3300da80571c31e660db048de400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a82db9b877afa567314c93e2cf7079fadd6b4e9c7ec65b894ee3f373dbebf13\",\"dweb:/ipfs/Qmf7LCgbN1PzFdpdhyv5AGfzAWg9h12RKv2mD52YvTTsQu\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xbb0875e8edc5f44bdb7ce34bd395ac5cbeffbcf784afebdfe80e090c2a1b01e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb869b59e18649df21fc11961d3adbe27ed0507d0cc0f15bc0000300833c274c\",\"dweb:/ipfs/QmSUASB1iw59KuXjqbGHw89Q7Yrg33BQ2pZVTYra1FDTgG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8c7d0d3ac7052d0f8f8d9d7fe006cde620b76107a0d911b23d85419416dc02ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb27991ae3a692e616486604cbc5dc745d10a7c57e08b54d98694d608c6674e5\",\"dweb:/ipfs/QmbgFvuuQQzat3C82dtkoNwZKZSHBijbzCpdKQXM7AHdZJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6d5202b198d9a3451ee70f06e579ffa5197ef3984f13f67676c64bc52730a977\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51701f325b75748e73e1c24f3961960b80f7dfc59abc7d5aa463bd01b7776450\",\"dweb:/ipfs/QmectxGDbsEfD8uCnSW4oHH2YEiRetvZPxepXQrJyT12JN\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x94b4f2ccfa80409154abeac7511daa9e229cfa3cf4e8f1b3331be1290e45d0c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e641814fb7ecedead8f59862d6336f259828fb452e1decfdd769aab60aeacf\",\"dweb:/ipfs/Qmae4ec2jLdCe94bkSxU8RhRducPyQAHcmB3GjsHjKF1Zg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x94b4f2ccfa80409154abeac7511daa9e229cfa3cf4e8f1b3331be1290e45d0c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e641814fb7ecedead8f59862d6336f259828fb452e1decfdd769aab60aeacf\",\"dweb:/ipfs/Qmae4ec2jLdCe94bkSxU8RhRducPyQAHcmB3GjsHjKF1Zg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FlameBornToken.sol": {
				"FlamebornToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "multisigWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidMultisigAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintingDisabled",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MULTISIG_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "controlledMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialMintComplete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FlameBornToken.sol\":270:1338  contract FlamebornToken is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FlameBornToken.sol\":495:831  constructor(address multisigWallet) ERC20(\"Flameborn\", \"FLB\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x233630b6b2b137b937)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe9, 0x232621)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/FlameBornToken.sol\":571:599  multisigWallet == address(0) */\n  dup2\n  and\n    /* \"contracts/FlameBornToken.sol\":567:632  if (multisigWallet == address(0)) revert InvalidMultisigAddress() */\n  tag_11\n  jumpi\n    /* \"contracts/FlameBornToken.sol\":608:632  InvalidMultisigAddress() */\n  mload(0x40)\n  shl(0xe0, 0xc2bd5707)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/FlameBornToken.sol\":567:632  if (multisigWallet == address(0)) revert InvalidMultisigAddress() */\ntag_11:\n    /* \"contracts/FlameBornToken.sol\":643:689  _grantRole(DEFAULT_ADMIN_ROLE, multisigWallet) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/FlameBornToken.sol\":674:688  multisigWallet */\n  dup3\n    /* \"contracts/FlameBornToken.sol\":643:653  _grantRole */\n  tag_13\n    /* \"contracts/FlameBornToken.sol\":643:689  _grantRole(DEFAULT_ADMIN_ROLE, multisigWallet) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/FlameBornToken.sol\":699:740  _grantRole(MULTISIG_ROLE, multisigWallet) */\n  tag_14\n    /* \"contracts/FlameBornToken.sol\":364:390  keccak256(\"MULTISIG_ROLE\") */\n  0xa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab\n    /* \"contracts/FlameBornToken.sol\":725:739  multisigWallet */\n  dup3\n    /* \"contracts/FlameBornToken.sol\":699:709  _grantRole */\n  tag_13\n    /* \"contracts/FlameBornToken.sol\":699:740  _grantRole(MULTISIG_ROLE, multisigWallet) */\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/FlameBornToken.sol\":751:788  _mint(multisigWallet, INITIAL_SUPPLY) */\n  tag_15\n    /* \"contracts/FlameBornToken.sol\":757:771  multisigWallet */\n  dup2\n    /* \"contracts/FlameBornToken.sol\":437:451  100 * 10 ** 18 */\n  0x056bc75e2d63100000\n    /* \"contracts/FlameBornToken.sol\":751:756  _mint */\n  tag_16\n    /* \"contracts/FlameBornToken.sol\":751:788  _mint(multisigWallet, INITIAL_SUPPLY) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/FlameBornToken.sol\":798:817  initialMintComplete */\n  0x06\n    /* \"contracts/FlameBornToken.sol\":798:824  initialMintComplete = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/FlameBornToken.sol\":820:824  true */\n  0x01\n    /* \"contracts/FlameBornToken.sol\":798:824  initialMintComplete = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/FlameBornToken.sol\":270:1338  contract FlamebornToken is ERC20, AccessControl {... */\n  jump(tag_50)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n  dup4\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_22\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_21:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3142:3193   */\n  mstore\n    /* \"#utility.yul\":3115:3133   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_29\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_37\n  swap1\n  pop\n  jump\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3651:3683   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3633:3684   */\n  mstore\n    /* \"#utility.yul\":3700:3718   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3693:3727   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3743:3761   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3736:3770   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3606:3624   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_27\n    /* \"#utility.yul\":3431:3776   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_42)\ntag_41:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_43\n  swap2\n    /* \"#utility.yul\":3927:3952   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3915:3917   */\n  0x20\n    /* \"#utility.yul\":3900:3918   */\n  add\n  swap1\n    /* \"#utility.yul\":3781:3958   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_52:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_53:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_45:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_46:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_56:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_57:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_48:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_61\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_61:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_62:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_60:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2991   */\ntag_8:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_68\n  tag_45\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1850:1947   */\n  tag_69\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_70\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_46\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_48\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2002:2006   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2059:2061   */\n  0x1f\n    /* \"#utility.yul\":2048:2062   */\n  dup4\n  gt\n    /* \"#utility.yul\":2076:2077   */\n  0x01\n    /* \"#utility.yul\":2071:2734   */\n  dup2\n  eq\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2795:2801   */\n  dup5\n    /* \"#utility.yul\":2792:2881   */\n  iszero\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":2847:2866   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2841:2867   */\n  mload\n    /* \"#utility.yul\":2792:2881   */\ntag_73:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2894:2975   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2041:2985   */\n  jump(tag_71)\n    /* \"#utility.yul\":2071:2734   */\ntag_72:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2107:2127   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2225:2461   */\ntag_76:\n    /* \"#utility.yul\":2239:2246   */\n  dup3\n    /* \"#utility.yul\":2236:2237   */\n  dup2\n    /* \"#utility.yul\":2233:2247   */\n  lt\n    /* \"#utility.yul\":2225:2461   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2328:2347   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2322:2348   */\n  mload\n    /* \"#utility.yul\":2307:2349   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2420:2447   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2388:2389   */\n  0x01\n    /* \"#utility.yul\":2376:2390   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2255:2274   */\n  dup5\n  add\n    /* \"#utility.yul\":2225:2461   */\n  jump(tag_76)\ntag_78:\n    /* \"#utility.yul\":2229:2232   */\n  pop\n    /* \"#utility.yul\":2489:2495   */\n  dup6\n    /* \"#utility.yul\":2480:2487   */\n  dup3\n    /* \"#utility.yul\":2477:2496   */\n  lt\n    /* \"#utility.yul\":2474:2675   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2550:2569   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2544:2570   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2633:2634   */\n  0x03\n    /* \"#utility.yul\":2629:2643   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2645:2648   */\n  0xf8\n    /* \"#utility.yul\":2625:2649   */\n  and\n    /* \"#utility.yul\":2621:2658   */\n  shr\n    /* \"#utility.yul\":2617:2659   */\n  not\n    /* \"#utility.yul\":2602:2660   */\n  and\n    /* \"#utility.yul\":2587:2661   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2474:2675   */\ntag_79:\n  pop\n  pop\n    /* \"#utility.yul\":2721:2722   */\n  0x01\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2709:2710   */\n  0x01\n    /* \"#utility.yul\":2705:2719   */\n  shl\n    /* \"#utility.yul\":2701:2723   */\n  add\n    /* \"#utility.yul\":2695:2699   */\n  dup6\n    /* \"#utility.yul\":2688:2724   */\n  sstore\n    /* \"#utility.yul\":2041:2985   */\ntag_71:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1646:2991   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3204:3426   */\ntag_36:\n    /* \"#utility.yul\":3269:3278   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3290:3300   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3287:3420   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":3342:3352   */\n  0x4e487b71\n    /* \"#utility.yul\":3337:3340   */\n  0xe0\n    /* \"#utility.yul\":3333:3353   */\n  shl\n    /* \"#utility.yul\":3330:3331   */\n  0x00\n    /* \"#utility.yul\":3323:3354   */\n  mstore\n    /* \"#utility.yul\":3377:3381   */\n  0x11\n    /* \"#utility.yul\":3374:3375   */\n  0x04\n    /* \"#utility.yul\":3367:3382   */\n  mstore\n    /* \"#utility.yul\":3405:3409   */\n  0x24\n    /* \"#utility.yul\":3402:3403   */\n  0x00\n    /* \"#utility.yul\":3395:3410   */\n  revert\n    /* \"#utility.yul\":3781:3958   */\ntag_50:\n    /* \"contracts/FlameBornToken.sol\":270:1338  contract FlamebornToken is ERC20, AccessControl {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FlameBornToken.sol\":270:1338  contract FlamebornToken is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe328400c\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x18160ddd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x04a7137e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0db79417\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FlameBornToken.sol\":1098:1336  function controlledMint(address to, uint256 amount) external onlyRole(MULTISIG_ROLE) {... */\n    tag_4:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_27\n      tag_42\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"contracts/FlameBornToken.sol\":457:488  bool public initialMintComplete */\n    tag_7:\n      sload(0x06)\n      tag_27\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1633:1658   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1621:1623   */\n      0x20\n        /* \"#utility.yul\":1606:1624   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_31\n        /* \"#utility.yul\":1487:1664   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_27\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_10:\n      tag_48\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_33\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/FlameBornToken.sol\":396:451  uint256 public constant INITIAL_SUPPLY = 100 * 10 ** 18 */\n    tag_12:\n      tag_48\n        /* \"contracts/FlameBornToken.sol\":437:451  100 * 10 ** 18 */\n      0x056bc75e2d63100000\n        /* \"contracts/FlameBornToken.sol\":396:451  uint256 public constant INITIAL_SUPPLY = 100 * 10 ** 18 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2770:2806   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2758:2760   */\n      0x20\n        /* \"#utility.yul\":2743:2761   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_31\n        /* \"#utility.yul\":2628:2812   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_14:\n      tag_33\n      tag_75\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_48\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_16:\n      tag_27\n      tag_83\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_37\n      tag_87\n      jump\t// in\n        /* \"contracts/FlameBornToken.sol\":900:1013  function burn(address from, uint256 amount) external onlyRole(MULTISIG_ROLE) {... */\n    tag_18:\n      tag_33\n      tag_90\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_19:\n      tag_48\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_27\n      tag_96\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      tag_33\n      tag_100\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_48\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/FlameBornToken.sol\":324:390  bytes32 public constant MULTISIG_ROLE = keccak256(\"MULTISIG_ROLE\") */\n    tag_23:\n      tag_48\n        /* \"contracts/FlameBornToken.sol\":364:390  keccak256(\"MULTISIG_ROLE\") */\n      0xa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab\n        /* \"contracts/FlameBornToken.sol\":324:390  bytes32 public constant MULTISIG_ROLE = keccak256(\"MULTISIG_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_112\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FlameBornToken.sol\":1098:1336  function controlledMint(address to, uint256 amount) external onlyRole(MULTISIG_ROLE) {... */\n    tag_36:\n        /* \"contracts/FlameBornToken.sol\":364:390  keccak256(\"MULTISIG_ROLE\") */\n      0xa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/FlameBornToken.sol\":1197:1216  initialMintComplete */\n      and(0xff, sload(0x06))\n        /* \"contracts/FlameBornToken.sol\":1193:1242  if (initialMintComplete) revert MintingDisabled() */\n      iszero\n      tag_118\n      jumpi\n        /* \"contracts/FlameBornToken.sol\":1225:1242  MintingDisabled() */\n      mload(0x40)\n      shl(0xe0, 0xaf79b437)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FlameBornToken.sol\":1193:1242  if (initialMintComplete) revert MintingDisabled() */\n    tag_118:\n        /* \"contracts/FlameBornToken.sol\":1252:1269  _mint(to, amount) */\n      tag_119\n        /* \"contracts/FlameBornToken.sol\":1258:1260  to */\n      dup4\n        /* \"contracts/FlameBornToken.sol\":1262:1268  amount */\n      dup4\n        /* \"contracts/FlameBornToken.sol\":1252:1257  _mint */\n      tag_120\n        /* \"contracts/FlameBornToken.sol\":1252:1269  _mint(to, amount) */\n      jump\t// in\n    tag_119:\n      pop\n      pop\n        /* \"contracts/FlameBornToken.sol\":1279:1298  initialMintComplete */\n      0x06\n        /* \"contracts/FlameBornToken.sol\":1279:1305  initialMintComplete = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/FlameBornToken.sol\":1301:1305  true */\n      0x01\n        /* \"contracts/FlameBornToken.sol\":1279:1305  initialMintComplete = true */\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FlameBornToken.sol\":1098:1336  function controlledMint(address to, uint256 amount) external onlyRole(MULTISIG_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_123\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_131:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_138:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_151:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n        /* \"contracts/FlameBornToken.sol\":900:1013  function burn(address from, uint256 amount) external onlyRole(MULTISIG_ROLE) {... */\n    tag_91:\n        /* \"contracts/FlameBornToken.sol\":364:390  keccak256(\"MULTISIG_ROLE\") */\n      0xa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/FlameBornToken.sol\":987:1006  _burn(from, amount) */\n      tag_151\n        /* \"contracts/FlameBornToken.sol\":993:997  from */\n      dup4\n        /* \"contracts/FlameBornToken.sol\":999:1005  amount */\n      dup4\n        /* \"contracts/FlameBornToken.sol\":987:992  _burn */\n      tag_165\n        /* \"contracts/FlameBornToken.sol\":987:1006  _burn(from, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3804:3855   */\n      mstore\n        /* \"#utility.yul\":3777:3795   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4086:4118   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4068:4119   */\n      mstore\n        /* \"#utility.yul\":4135:4153   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4128:4162   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4178:4196   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4171:4205   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4041:4059   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_182\n        /* \"#utility.yul\":3866:4211   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3804:3855   */\n      mstore\n        /* \"#utility.yul\":3777:3795   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_182\n        /* \"#utility.yul\":3658:3861   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3804:3855   */\n      mstore\n        /* \"#utility.yul\":3777:3795   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_182\n        /* \"#utility.yul\":3658:3861   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_112)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_205:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_112)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      jump(tag_112)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3804:3855   */\n      mstore\n        /* \"#utility.yul\":3777:3795   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      tag_182\n        /* \"#utility.yul\":3658:3861   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_218\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4408:4440   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4390:4441   */\n      mstore\n        /* \"#utility.yul\":4457:4475   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4450:4484   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4363:4381   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_182\n        /* \"#utility.yul\":4216:4490   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_226\n      swap1\n      pop\n      jump\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4086:4118   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4068:4119   */\n      mstore\n        /* \"#utility.yul\":4135:4153   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4128:4162   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4178:4196   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4171:4205   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4041:4059   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_182\n        /* \"#utility.yul\":3866:4211   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_230)\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_231\n      swap2\n        /* \"#utility.yul\":1633:1658   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1621:1623   */\n      0x20\n        /* \"#utility.yul\":1606:1624   */\n      add\n      swap1\n        /* \"#utility.yul\":1487:1664   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3804:3855   */\n      mstore\n        /* \"#utility.yul\":3777:3795   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_182\n        /* \"#utility.yul\":3658:3861   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3804:3855   */\n      mstore\n        /* \"#utility.yul\":3777:3795   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_182\n        /* \"#utility.yul\":3658:3861   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_238\n      swap2\n        /* \"#utility.yul\":1633:1658   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1621:1623   */\n      0x20\n        /* \"#utility.yul\":1606:1624   */\n      add\n      swap1\n        /* \"#utility.yul\":1487:1664   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_29:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_242:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_243:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_239:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_246:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:929   */\n    tag_35:\n        /* \"#utility.yul\":743:749   */\n      0x00\n        /* \"#utility.yul\":751:757   */\n      dup1\n        /* \"#utility.yul\":804:806   */\n      0x40\n        /* \"#utility.yul\":792:801   */\n      dup4\n        /* \"#utility.yul\":783:790   */\n      dup6\n        /* \"#utility.yul\":779:802   */\n      sub\n        /* \"#utility.yul\":775:807   */\n      slt\n        /* \"#utility.yul\":772:824   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":820:821   */\n      0x00\n        /* \"#utility.yul\":817:818   */\n      dup1\n        /* \"#utility.yul\":810:822   */\n      revert\n        /* \"#utility.yul\":772:824   */\n    tag_248:\n        /* \"#utility.yul\":843:872   */\n      tag_249\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":843:872   */\n      tag_239\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":833:872   */\n      swap5\n        /* \"#utility.yul\":919:921   */\n      0x20\n        /* \"#utility.yul\":904:922   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":891:923   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":675:929   */\n      jump\t// out\n        /* \"#utility.yul\":934:1482   */\n    tag_40:\n        /* \"#utility.yul\":1046:1050   */\n      0x00\n        /* \"#utility.yul\":1075:1077   */\n      0x20\n        /* \"#utility.yul\":1104:1106   */\n      dup1\n        /* \"#utility.yul\":1093:1102   */\n      dup4\n        /* \"#utility.yul\":1086:1107   */\n      mstore\n        /* \"#utility.yul\":1136:1142   */\n      dup4\n        /* \"#utility.yul\":1130:1143   */\n      mload\n        /* \"#utility.yul\":1179:1185   */\n      dup1\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1163:1172   */\n      dup6\n        /* \"#utility.yul\":1159:1177   */\n      add\n        /* \"#utility.yul\":1152:1186   */\n      mstore\n        /* \"#utility.yul\":1204:1205   */\n      0x00\n        /* \"#utility.yul\":1214:1354   */\n    tag_251:\n        /* \"#utility.yul\":1228:1234   */\n      dup2\n        /* \"#utility.yul\":1225:1226   */\n      dup2\n        /* \"#utility.yul\":1222:1235   */\n      lt\n        /* \"#utility.yul\":1214:1354   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":1323:1337   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1319:1342   */\n      dup4\n      add\n        /* \"#utility.yul\":1313:1343   */\n      mload\n        /* \"#utility.yul\":1289:1306   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1285:1311   */\n      add\n        /* \"#utility.yul\":1278:1344   */\n      mstore\n        /* \"#utility.yul\":1243:1253   */\n      dup3\n      add\n        /* \"#utility.yul\":1214:1354   */\n      jump(tag_251)\n    tag_253:\n        /* \"#utility.yul\":1218:1221   */\n      pop\n        /* \"#utility.yul\":1403:1404   */\n      0x00\n        /* \"#utility.yul\":1398:1400   */\n      0x40\n        /* \"#utility.yul\":1389:1395   */\n      dup3\n        /* \"#utility.yul\":1378:1387   */\n      dup7\n        /* \"#utility.yul\":1374:1396   */\n      add\n        /* \"#utility.yul\":1370:1401   */\n      add\n        /* \"#utility.yul\":1363:1405   */\n      mstore\n        /* \"#utility.yul\":1473:1475   */\n      0x40\n        /* \"#utility.yul\":1466:1468   */\n      0x1f\n        /* \"#utility.yul\":1462:1469   */\n      not\n        /* \"#utility.yul\":1457:1459   */\n      0x1f\n        /* \"#utility.yul\":1449:1455   */\n      dup4\n        /* \"#utility.yul\":1445:1460   */\n      add\n        /* \"#utility.yul\":1441:1470   */\n      and\n        /* \"#utility.yul\":1430:1439   */\n      dup6\n        /* \"#utility.yul\":1426:1471   */\n      add\n        /* \"#utility.yul\":1422:1476   */\n      add\n        /* \"#utility.yul\":1414:1476   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":934:1482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1669:1997   */\n    tag_54:\n        /* \"#utility.yul\":1746:1752   */\n      0x00\n        /* \"#utility.yul\":1754:1760   */\n      dup1\n        /* \"#utility.yul\":1762:1768   */\n      0x00\n        /* \"#utility.yul\":1815:1817   */\n      0x60\n        /* \"#utility.yul\":1803:1812   */\n      dup5\n        /* \"#utility.yul\":1794:1801   */\n      dup7\n        /* \"#utility.yul\":1790:1813   */\n      sub\n        /* \"#utility.yul\":1786:1818   */\n      slt\n        /* \"#utility.yul\":1783:1835   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1831:1832   */\n      0x00\n        /* \"#utility.yul\":1828:1829   */\n      dup1\n        /* \"#utility.yul\":1821:1833   */\n      revert\n        /* \"#utility.yul\":1783:1835   */\n    tag_256:\n        /* \"#utility.yul\":1854:1883   */\n      tag_257\n        /* \"#utility.yul\":1873:1882   */\n      dup5\n        /* \"#utility.yul\":1854:1883   */\n      tag_239\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1844:1883   */\n      swap3\n      pop\n        /* \"#utility.yul\":1902:1940   */\n      tag_258\n        /* \"#utility.yul\":1936:1938   */\n      0x20\n        /* \"#utility.yul\":1925:1934   */\n      dup6\n        /* \"#utility.yul\":1921:1939   */\n      add\n        /* \"#utility.yul\":1902:1940   */\n      tag_239\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1892:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1987:1989   */\n      0x40\n        /* \"#utility.yul\":1976:1985   */\n      dup5\n        /* \"#utility.yul\":1972:1990   */\n      add\n        /* \"#utility.yul\":1959:1991   */\n      calldataload\n        /* \"#utility.yul\":1949:1991   */\n      swap1\n      pop\n        /* \"#utility.yul\":1669:1997   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2002:2182   */\n    tag_59:\n        /* \"#utility.yul\":2061:2067   */\n      0x00\n        /* \"#utility.yul\":2114:2116   */\n      0x20\n        /* \"#utility.yul\":2102:2111   */\n      dup3\n        /* \"#utility.yul\":2093:2100   */\n      dup5\n        /* \"#utility.yul\":2089:2112   */\n      sub\n        /* \"#utility.yul\":2085:2117   */\n      slt\n        /* \"#utility.yul\":2082:2134   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2127:2128   */\n      dup1\n        /* \"#utility.yul\":2120:2132   */\n      revert\n        /* \"#utility.yul\":2082:2134   */\n    tag_260:\n      pop\n        /* \"#utility.yul\":2153:2176   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2002:2182   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2369:2623   */\n    tag_65:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2498:2500   */\n      0x40\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2477:2484   */\n      dup6\n        /* \"#utility.yul\":2473:2496   */\n      sub\n        /* \"#utility.yul\":2469:2501   */\n      slt\n        /* \"#utility.yul\":2466:2518   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":2514:2515   */\n      0x00\n        /* \"#utility.yul\":2511:2512   */\n      dup1\n        /* \"#utility.yul\":2504:2516   */\n      revert\n        /* \"#utility.yul\":2466:2518   */\n    tag_263:\n        /* \"#utility.yul\":2550:2559   */\n      dup3\n        /* \"#utility.yul\":2537:2560   */\n      calldataload\n        /* \"#utility.yul\":2527:2560   */\n      swap2\n      pop\n        /* \"#utility.yul\":2579:2617   */\n      tag_264\n        /* \"#utility.yul\":2613:2615   */\n      0x20\n        /* \"#utility.yul\":2602:2611   */\n      dup5\n        /* \"#utility.yul\":2598:2616   */\n      add\n        /* \"#utility.yul\":2579:2617   */\n      tag_239\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2569:2617   */\n      swap1\n      pop\n        /* \"#utility.yul\":2369:2623   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2817:3003   */\n    tag_79:\n        /* \"#utility.yul\":2876:2882   */\n      0x00\n        /* \"#utility.yul\":2929:2931   */\n      0x20\n        /* \"#utility.yul\":2917:2926   */\n      dup3\n        /* \"#utility.yul\":2908:2915   */\n      dup5\n        /* \"#utility.yul\":2904:2927   */\n      sub\n        /* \"#utility.yul\":2900:2932   */\n      slt\n        /* \"#utility.yul\":2897:2949   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2942:2943   */\n      dup1\n        /* \"#utility.yul\":2935:2947   */\n      revert\n        /* \"#utility.yul\":2897:2949   */\n    tag_267:\n        /* \"#utility.yul\":2968:2997   */\n      tag_243\n        /* \"#utility.yul\":2987:2996   */\n      dup3\n        /* \"#utility.yul\":2968:2997   */\n      tag_239\n      jump\t// in\n        /* \"#utility.yul\":3008:3268   */\n    tag_104:\n        /* \"#utility.yul\":3076:3082   */\n      0x00\n        /* \"#utility.yul\":3084:3090   */\n      dup1\n        /* \"#utility.yul\":3137:3139   */\n      0x40\n        /* \"#utility.yul\":3125:3134   */\n      dup4\n        /* \"#utility.yul\":3116:3123   */\n      dup6\n        /* \"#utility.yul\":3112:3135   */\n      sub\n        /* \"#utility.yul\":3108:3140   */\n      slt\n        /* \"#utility.yul\":3105:3157   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3153:3154   */\n      0x00\n        /* \"#utility.yul\":3150:3151   */\n      dup1\n        /* \"#utility.yul\":3143:3155   */\n      revert\n        /* \"#utility.yul\":3105:3157   */\n    tag_270:\n        /* \"#utility.yul\":3176:3205   */\n      tag_271\n        /* \"#utility.yul\":3195:3204   */\n      dup4\n        /* \"#utility.yul\":3176:3205   */\n      tag_239\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3166:3205   */\n      swap2\n      pop\n        /* \"#utility.yul\":3224:3262   */\n      tag_264\n        /* \"#utility.yul\":3258:3260   */\n      0x20\n        /* \"#utility.yul\":3247:3256   */\n      dup5\n        /* \"#utility.yul\":3243:3261   */\n      add\n        /* \"#utility.yul\":3224:3262   */\n      tag_239\n      jump\t// in\n        /* \"#utility.yul\":3273:3653   */\n    tag_123:\n        /* \"#utility.yul\":3352:3353   */\n      0x01\n        /* \"#utility.yul\":3348:3360   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3395:3407   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3416:3477   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3470:3474   */\n      0x7f\n        /* \"#utility.yul\":3462:3468   */\n      dup3\n        /* \"#utility.yul\":3458:3475   */\n      and\n        /* \"#utility.yul\":3448:3475   */\n      swap2\n      pop\n        /* \"#utility.yul\":3416:3477   */\n    tag_274:\n        /* \"#utility.yul\":3523:3525   */\n      0x20\n        /* \"#utility.yul\":3515:3521   */\n      dup3\n        /* \"#utility.yul\":3512:3526   */\n      lt\n        /* \"#utility.yul\":3492:3510   */\n      dup2\n        /* \"#utility.yul\":3489:3527   */\n      sub\n        /* \"#utility.yul\":3486:3647   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":3569:3579   */\n      0x4e487b71\n        /* \"#utility.yul\":3564:3567   */\n      0xe0\n        /* \"#utility.yul\":3560:3580   */\n      shl\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3550:3581   */\n      mstore\n        /* \"#utility.yul\":3604:3608   */\n      0x22\n        /* \"#utility.yul\":3601:3602   */\n      0x04\n        /* \"#utility.yul\":3594:3609   */\n      mstore\n        /* \"#utility.yul\":3632:3636   */\n      0x24\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3622:3637   */\n      revert\n        /* \"#utility.yul\":3486:3647   */\n    tag_275:\n      pop\n        /* \"#utility.yul\":3273:3653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4495:4717   */\n    tag_225:\n        /* \"#utility.yul\":4560:4569   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4581:4591   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4578:4711   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":4633:4643   */\n      0x4e487b71\n        /* \"#utility.yul\":4628:4631   */\n      0xe0\n        /* \"#utility.yul\":4624:4644   */\n      shl\n        /* \"#utility.yul\":4621:4622   */\n      0x00\n        /* \"#utility.yul\":4614:4645   */\n      mstore\n        /* \"#utility.yul\":4668:4672   */\n      0x11\n        /* \"#utility.yul\":4665:4666   */\n      0x04\n        /* \"#utility.yul\":4658:4673   */\n      mstore\n        /* \"#utility.yul\":4696:4700   */\n      0x24\n        /* \"#utility.yul\":4693:4694   */\n      0x00\n        /* \"#utility.yul\":4686:4701   */\n      revert\n\n    auxdata: 0xa26469706673582212208f04a006845b496f0ddc7ad22a12dfcbbf6e09cc719af9a5fc3a73d02ed6fda064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1267": {
									"entryPoint": null,
									"id": 1267,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 287,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 463,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_837": {
									"entryPoint": 527,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3960:10",
										"nodeType": "YulBlock",
										"src": "0:3960:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:10",
													"nodeType": "YulBlock",
													"src": "95:209:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:10",
																"nodeType": "YulBlock",
																"src": "141:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:10",
																					"nodeType": "YulLiteral",
																					"src": "150:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:10",
																					"nodeType": "YulLiteral",
																					"src": "153:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:10"
																			},
																			"nativeSrc": "143:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:10"
																		},
																		"nativeSrc": "143:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:10"
																		},
																		"nativeSrc": "112:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:10"
																},
																"nativeSrc": "108:32:10",
																"nodeType": "YulFunctionCall",
																"src": "108:32:10"
															},
															"nativeSrc": "105:52:10",
															"nodeType": "YulIf",
															"src": "105:52:10"
														},
														{
															"nativeSrc": "166:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:10"
																},
																"nativeSrc": "179:16:10",
																"nodeType": "YulFunctionCall",
																"src": "179:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:10",
																	"nodeType": "YulTypedName",
																	"src": "170:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:10",
																"nodeType": "YulBlock",
																"src": "258:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:10",
																					"nodeType": "YulLiteral",
																					"src": "267:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:10",
																					"nodeType": "YulLiteral",
																					"src": "270:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:10"
																			},
																			"nativeSrc": "260:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:10"
																		},
																		"nativeSrc": "260:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:10",
																										"nodeType": "YulLiteral",
																										"src": "243:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:10",
																										"nodeType": "YulLiteral",
																										"src": "248:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:10"
																								},
																								"nativeSrc": "239:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:10",
																								"nodeType": "YulLiteral",
																								"src": "252:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:10"
																						},
																						"nativeSrc": "235:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:10"
																				},
																				"nativeSrc": "224:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:10"
																		},
																		"nativeSrc": "214:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:10"
																},
																"nativeSrc": "207:50:10",
																"nodeType": "YulFunctionCall",
																"src": "207:50:10"
															},
															"nativeSrc": "204:70:10",
															"nodeType": "YulIf",
															"src": "204:70:10"
														},
														{
															"nativeSrc": "283:15:10",
															"nodeType": "YulAssignment",
															"src": "283:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:10",
																"nodeType": "YulIdentifier",
																"src": "293:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:10",
														"nodeType": "YulTypedName",
														"src": "61:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:10",
														"nodeType": "YulTypedName",
														"src": "72:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:10",
														"nodeType": "YulTypedName",
														"src": "84:6:10",
														"type": ""
													}
												],
												"src": "14:290:10"
											},
											{
												"body": {
													"nativeSrc": "341:95:10",
													"nodeType": "YulBlock",
													"src": "341:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:10",
																		"nodeType": "YulLiteral",
																		"src": "358:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:10",
																				"nodeType": "YulLiteral",
																				"src": "365:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:10",
																				"nodeType": "YulLiteral",
																				"src": "370:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:10"
																		},
																		"nativeSrc": "361:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:10"
																},
																"nativeSrc": "351:31:10",
																"nodeType": "YulFunctionCall",
																"src": "351:31:10"
															},
															"nativeSrc": "351:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:10",
																		"nodeType": "YulLiteral",
																		"src": "398:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:10",
																		"nodeType": "YulLiteral",
																		"src": "401:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:10"
																},
																"nativeSrc": "391:15:10",
																"nodeType": "YulFunctionCall",
																"src": "391:15:10"
															},
															"nativeSrc": "391:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:10",
																		"nodeType": "YulLiteral",
																		"src": "422:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:10",
																		"nodeType": "YulLiteral",
																		"src": "425:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:10"
																},
																"nativeSrc": "415:15:10",
																"nodeType": "YulFunctionCall",
																"src": "415:15:10"
															},
															"nativeSrc": "415:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:10"
											},
											{
												"body": {
													"nativeSrc": "496:325:10",
													"nodeType": "YulBlock",
													"src": "496:325:10",
													"statements": [
														{
															"nativeSrc": "506:22:10",
															"nodeType": "YulAssignment",
															"src": "506:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:10",
																		"nodeType": "YulLiteral",
																		"src": "520:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:10"
																},
																"nativeSrc": "516:12:10",
																"nodeType": "YulFunctionCall",
																"src": "516:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:10"
																}
															]
														},
														{
															"nativeSrc": "537:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:10",
																		"nodeType": "YulLiteral",
																		"src": "573:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:10"
																},
																"nativeSrc": "563:12:10",
																"nodeType": "YulFunctionCall",
																"src": "563:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:10",
																	"nodeType": "YulTypedName",
																	"src": "541:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:10",
																"nodeType": "YulBlock",
																"src": "614:31:10",
																"statements": [
																	{
																		"nativeSrc": "616:27:10",
																		"nodeType": "YulAssignment",
																		"src": "616:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:10",
																					"nodeType": "YulLiteral",
																					"src": "638:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:10"
																			},
																			"nativeSrc": "626:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nativeSrc": "587:26:10",
																"nodeType": "YulFunctionCall",
																"src": "587:26:10"
															},
															"nativeSrc": "584:61:10",
															"nodeType": "YulIf",
															"src": "584:61:10"
														},
														{
															"body": {
																"nativeSrc": "704:111:10",
																"nodeType": "YulBlock",
																"src": "704:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:10",
																					"nodeType": "YulLiteral",
																					"src": "725:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:10",
																							"nodeType": "YulLiteral",
																							"src": "732:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:10",
																							"nodeType": "YulLiteral",
																							"src": "737:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:10"
																					},
																					"nativeSrc": "728:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:10"
																			},
																			"nativeSrc": "718:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:10"
																		},
																		"nativeSrc": "718:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:10",
																					"nodeType": "YulLiteral",
																					"src": "769:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:10",
																					"nodeType": "YulLiteral",
																					"src": "772:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:10"
																			},
																			"nativeSrc": "762:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:10"
																		},
																		"nativeSrc": "762:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:10",
																					"nodeType": "YulLiteral",
																					"src": "797:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:10",
																					"nodeType": "YulLiteral",
																					"src": "800:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:10"
																			},
																			"nativeSrc": "790:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:10"
																		},
																		"nativeSrc": "790:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:10",
																				"nodeType": "YulLiteral",
																				"src": "691:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:10"
																		},
																		"nativeSrc": "680:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:10"
																},
																"nativeSrc": "657:38:10",
																"nodeType": "YulFunctionCall",
																"src": "657:38:10"
															},
															"nativeSrc": "654:161:10",
															"nodeType": "YulIf",
															"src": "654:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:10",
														"nodeType": "YulTypedName",
														"src": "476:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:10",
														"nodeType": "YulTypedName",
														"src": "485:6:10",
														"type": ""
													}
												],
												"src": "441:380:10"
											},
											{
												"body": {
													"nativeSrc": "882:65:10",
													"nodeType": "YulBlock",
													"src": "882:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:10",
																		"nodeType": "YulLiteral",
																		"src": "899:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:10"
																},
																"nativeSrc": "892:14:10",
																"nodeType": "YulFunctionCall",
																"src": "892:14:10"
															},
															"nativeSrc": "892:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:10"
														},
														{
															"nativeSrc": "915:26:10",
															"nodeType": "YulAssignment",
															"src": "915:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:10",
																		"nodeType": "YulLiteral",
																		"src": "933:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:10",
																		"nodeType": "YulLiteral",
																		"src": "936:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:10"
																},
																"nativeSrc": "923:18:10",
																"nodeType": "YulFunctionCall",
																"src": "923:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:10",
														"nodeType": "YulTypedName",
														"src": "865:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:10",
														"nodeType": "YulTypedName",
														"src": "873:4:10",
														"type": ""
													}
												],
												"src": "826:121:10"
											},
											{
												"body": {
													"nativeSrc": "1033:437:10",
													"nodeType": "YulBlock",
													"src": "1033:437:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:10",
																"nodeType": "YulBlock",
																"src": "1066:398:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:10"
																			},
																			"nativeSrc": "1080:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:10"
																		},
																		"nativeSrc": "1080:16:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:10"
																	},
																	{
																		"nativeSrc": "1109:30:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:10"
																			},
																			"nativeSrc": "1121:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:10",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:10",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:10"
																							},
																							"nativeSrc": "1188:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:10"
																					},
																					"nativeSrc": "1181:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:10"
																			},
																			"nativeSrc": "1171:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:10",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:10",
																			"nodeType": "YulBlock",
																			"src": "1246:23:10",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:10",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:10",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:10",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:10"
																			},
																			"nativeSrc": "1225:20:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:10"
																		},
																		"nativeSrc": "1222:47:10",
																		"nodeType": "YulIf",
																		"src": "1222:47:10"
																	},
																	{
																		"nativeSrc": "1282:41:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:10",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:10"
																							},
																							"nativeSrc": "1309:12:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:10"
																					},
																					"nativeSrc": "1302:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:10"
																			},
																			"nativeSrc": "1292:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:10"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:10",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:10",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:10",
																			"nodeType": "YulBlock",
																			"src": "1434:20:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:10"
																						},
																						"nativeSrc": "1436:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:10"
																					},
																					"nativeSrc": "1436:16:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:10"
																			},
																			"nativeSrc": "1381:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:10"
																		},
																		"nativeSrc": "1373:81:10",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:10",
																			"nodeType": "YulBlock",
																			"src": "1395:26:10",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:10",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:10"
																						},
																						"nativeSrc": "1406:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:10",
																			"nodeType": "YulBlock",
																			"src": "1377:3:10",
																			"statements": []
																		},
																		"src": "1373:81:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:10"
																},
																"nativeSrc": "1046:11:10",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:10"
															},
															"nativeSrc": "1043:421:10",
															"nodeType": "YulIf",
															"src": "1043:421:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:10",
														"nodeType": "YulTypedName",
														"src": "1005:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:10",
														"nodeType": "YulTypedName",
														"src": "1012:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:10",
														"nodeType": "YulTypedName",
														"src": "1017:10:10",
														"type": ""
													}
												],
												"src": "952:518:10"
											},
											{
												"body": {
													"nativeSrc": "1560:81:10",
													"nodeType": "YulBlock",
													"src": "1560:81:10",
													"statements": [
														{
															"nativeSrc": "1570:65:10",
															"nodeType": "YulAssignment",
															"src": "1570:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:10"
																								},
																								"nativeSrc": "1599:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:10"
																								},
																								"nativeSrc": "1612:6:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:10"
																						},
																						"nativeSrc": "1595:24:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:10"
																				},
																				"nativeSrc": "1591:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:10"
																		},
																		"nativeSrc": "1581:40:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:10"
																		},
																		"nativeSrc": "1623:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:10"
																},
																"nativeSrc": "1578:57:10",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:10",
														"nodeType": "YulTypedName",
														"src": "1537:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:10",
														"nodeType": "YulTypedName",
														"src": "1543:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:10",
														"nodeType": "YulTypedName",
														"src": "1551:4:10",
														"type": ""
													}
												],
												"src": "1475:166:10"
											},
											{
												"body": {
													"nativeSrc": "1742:1249:10",
													"nodeType": "YulBlock",
													"src": "1742:1249:10",
													"statements": [
														{
															"nativeSrc": "1752:24:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:10"
																},
																"nativeSrc": "1766:10:10",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:10",
																"nodeType": "YulBlock",
																"src": "1819:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:10"
																			},
																			"nativeSrc": "1821:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:10"
																		},
																		"nativeSrc": "1821:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:10",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:10"
																				},
																				"nativeSrc": "1803:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:10"
																		},
																		"nativeSrc": "1799:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:10"
																},
																"nativeSrc": "1788:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:10"
															},
															"nativeSrc": "1785:56:10",
															"nodeType": "YulIf",
															"src": "1785:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:10"
																				},
																				"nativeSrc": "1926:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:10"
																		},
																		"nativeSrc": "1900:38:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:10"
																},
																"nativeSrc": "1850:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:10"
															},
															"nativeSrc": "1850:97:10",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:10"
														},
														{
															"nativeSrc": "1956:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:10",
																"nodeType": "YulLiteral",
																"src": "1973:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:23:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1983:23:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2002:4:10",
																"nodeType": "YulLiteral",
																"src": "2002:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1987:11:10",
																	"nodeType": "YulTypedName",
																	"src": "1987:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2015:17:10",
															"nodeType": "YulAssignment",
															"src": "2015:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2028:4:10",
																"nodeType": "YulLiteral",
																"src": "2028:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2015:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2015:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2078:656:10",
																		"nodeType": "YulBlock",
																		"src": "2078:656:10",
																		"statements": [
																			{
																				"nativeSrc": "2092:35:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2092:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2111:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2111:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2123:2:10",
																									"nodeType": "YulLiteral",
																									"src": "2123:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2119:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:10"
																							},
																							"nativeSrc": "2119:7:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2119:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2107:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2107:3:10"
																					},
																					"nativeSrc": "2107:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2107:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2096:7:10",
																						"nodeType": "YulTypedName",
																						"src": "2096:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2140:49:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2140:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2184:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2184:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2154:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "2154:29:10"
																					},
																					"nativeSrc": "2154:35:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2154:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2144:6:10",
																						"nodeType": "YulTypedName",
																						"src": "2144:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2202:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2202:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2211:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2206:1:10",
																						"nodeType": "YulTypedName",
																						"src": "2206:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2289:172:10",
																					"nodeType": "YulBlock",
																					"src": "2289:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2314:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2314:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2332:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "2332:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2337:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "2337:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2328:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "2328:3:10"
																												},
																												"nativeSrc": "2328:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "2328:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2322:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "2322:5:10"
																										},
																										"nativeSrc": "2322:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2322:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2307:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2307:6:10"
																								},
																								"nativeSrc": "2307:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2307:42:10"
																							},
																							"nativeSrc": "2307:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "2307:42:10"
																						},
																						{
																							"nativeSrc": "2366:24:10",
																							"nodeType": "YulAssignment",
																							"src": "2366:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2380:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2380:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2388:1:10",
																										"nodeType": "YulLiteral",
																										"src": "2388:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2376:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2376:3:10"
																								},
																								"nativeSrc": "2376:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2376:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2366:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2366:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2407:40:10",
																							"nodeType": "YulAssignment",
																							"src": "2407:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2424:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "2424:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2435:11:10",
																										"nodeType": "YulIdentifier",
																										"src": "2435:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2420:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2420:3:10"
																								},
																								"nativeSrc": "2420:27:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2420:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2407:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "2407:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2236:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "2236:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2239:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "2239:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2233:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2233:2:10"
																					},
																					"nativeSrc": "2233:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2233:14:10"
																				},
																				"nativeSrc": "2225:236:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2248:28:10",
																					"nodeType": "YulBlock",
																					"src": "2248:28:10",
																					"statements": [
																						{
																							"nativeSrc": "2250:24:10",
																							"nodeType": "YulAssignment",
																							"src": "2250:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2259:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "2259:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2262:11:10",
																										"nodeType": "YulIdentifier",
																										"src": "2262:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2255:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2255:3:10"
																								},
																								"nativeSrc": "2255:19:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2255:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2250:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "2250:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2229:3:10",
																					"nodeType": "YulBlock",
																					"src": "2229:3:10",
																					"statements": []
																				},
																				"src": "2225:236:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "2509:166:10",
																					"nodeType": "YulBlock",
																					"src": "2509:166:10",
																					"statements": [
																						{
																							"nativeSrc": "2527:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2527:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2554:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2554:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2559:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2559:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2550:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2550:3:10"
																										},
																										"nativeSrc": "2550:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2550:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2544:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2544:5:10"
																								},
																								"nativeSrc": "2544:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2544:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2531:9:10",
																									"nodeType": "YulTypedName",
																									"src": "2531:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2606:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2606:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2633:1:10",
																																				"nodeType": "YulLiteral",
																																				"src": "2633:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2636:6:10",
																																				"nodeType": "YulIdentifier",
																																				"src": "2636:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2629:3:10",
																																			"nodeType": "YulIdentifier",
																																			"src": "2629:3:10"
																																		},
																																		"nativeSrc": "2629:14:10",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2629:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2645:3:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2645:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2625:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2625:3:10"
																																},
																																"nativeSrc": "2625:24:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2625:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2655:1:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2655:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2651:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2651:3:10"
																																},
																																"nativeSrc": "2651:6:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2651:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2621:3:10",
																															"nodeType": "YulIdentifier",
																															"src": "2621:3:10"
																														},
																														"nativeSrc": "2621:37:10",
																														"nodeType": "YulFunctionCall",
																														"src": "2621:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2617:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "2617:3:10"
																												},
																												"nativeSrc": "2617:42:10",
																												"nodeType": "YulFunctionCall",
																												"src": "2617:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2602:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2602:3:10"
																										},
																										"nativeSrc": "2602:58:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2602:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2587:6:10"
																								},
																								"nativeSrc": "2587:74:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2587:74:10"
																							},
																							"nativeSrc": "2587:74:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "2587:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2480:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "2480:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2489:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2489:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2477:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2477:2:10"
																					},
																					"nativeSrc": "2477:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2477:19:10"
																				},
																				"nativeSrc": "2474:201:10",
																				"nodeType": "YulIf",
																				"src": "2474:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2695:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2695:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2709:1:10",
																											"nodeType": "YulLiteral",
																											"src": "2709:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2712:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "2712:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2705:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "2705:3:10"
																									},
																									"nativeSrc": "2705:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "2705:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2721:1:10",
																									"nodeType": "YulLiteral",
																									"src": "2721:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2701:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2701:3:10"
																							},
																							"nativeSrc": "2701:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2701:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2688:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2688:6:10"
																					},
																					"nativeSrc": "2688:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:36:10"
																				},
																				"nativeSrc": "2688:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2688:36:10"
																			}
																		]
																	},
																	"nativeSrc": "2071:663:10",
																	"nodeType": "YulCase",
																	"src": "2071:663:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2751:234:10",
																		"nodeType": "YulBlock",
																		"src": "2751:234:10",
																		"statements": [
																			{
																				"nativeSrc": "2765:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2765:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2778:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2769:5:10",
																						"nodeType": "YulTypedName",
																						"src": "2769:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2814:67:10",
																					"nodeType": "YulBlock",
																					"src": "2814:67:10",
																					"statements": [
																						{
																							"nativeSrc": "2832:35:10",
																							"nodeType": "YulAssignment",
																							"src": "2832:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2851:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2851:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2856:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2856:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2847:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2847:3:10"
																										},
																										"nativeSrc": "2847:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2847:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2841:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2841:5:10"
																								},
																								"nativeSrc": "2841:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2841:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2832:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2832:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2795:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2795:6:10"
																				},
																				"nativeSrc": "2792:89:10",
																				"nodeType": "YulIf",
																				"src": "2792:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2901:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2901:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2960:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2960:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2967:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2967:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2907:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "2907:52:10"
																							},
																							"nativeSrc": "2907:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2907:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2894:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2894:6:10"
																					},
																					"nativeSrc": "2894:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2894:81:10"
																				},
																				"nativeSrc": "2894:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2894:81:10"
																			}
																		]
																	},
																	"nativeSrc": "2743:242:10",
																	"nodeType": "YulCase",
																	"src": "2743:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2051:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:10"
																},
																"nativeSrc": "2048:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2048:14:10"
															},
															"nativeSrc": "2041:944:10",
															"nodeType": "YulSwitch",
															"src": "2041:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:10",
														"nodeType": "YulTypedName",
														"src": "1727:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:10",
														"nodeType": "YulTypedName",
														"src": "1733:3:10",
														"type": ""
													}
												],
												"src": "1646:1345:10"
											},
											{
												"body": {
													"nativeSrc": "3097:102:10",
													"nodeType": "YulBlock",
													"src": "3097:102:10",
													"statements": [
														{
															"nativeSrc": "3107:26:10",
															"nodeType": "YulAssignment",
															"src": "3107:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3119:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3119:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3130:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:10"
																},
																"nativeSrc": "3115:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3115:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3107:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3107:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3149:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3149:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3164:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3164:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3180:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3180:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3185:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3185:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3176:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3176:3:10"
																						},
																						"nativeSrc": "3176:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3176:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3189:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3189:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3172:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3172:3:10"
																				},
																				"nativeSrc": "3172:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3172:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3160:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3160:3:10"
																		},
																		"nativeSrc": "3160:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3160:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:10"
																},
																"nativeSrc": "3142:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3142:51:10"
															},
															"nativeSrc": "3142:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3142:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2996:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3066:9:10",
														"nodeType": "YulTypedName",
														"src": "3066:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3077:6:10",
														"nodeType": "YulTypedName",
														"src": "3077:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3088:4:10",
														"nodeType": "YulTypedName",
														"src": "3088:4:10",
														"type": ""
													}
												],
												"src": "2996:203:10"
											},
											{
												"body": {
													"nativeSrc": "3252:174:10",
													"nodeType": "YulBlock",
													"src": "3252:174:10",
													"statements": [
														{
															"nativeSrc": "3262:16:10",
															"nodeType": "YulAssignment",
															"src": "3262:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3273:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3273:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3276:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3276:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3269:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3269:3:10"
																},
																"nativeSrc": "3269:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3269:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3262:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3262:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3309:111:10",
																"nodeType": "YulBlock",
																"src": "3309:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3330:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3330:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3337:3:10",
																							"nodeType": "YulLiteral",
																							"src": "3337:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3342:10:10",
																							"nodeType": "YulLiteral",
																							"src": "3342:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3333:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3333:3:10"
																					},
																					"nativeSrc": "3333:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3333:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3323:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3323:6:10"
																			},
																			"nativeSrc": "3323:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3323:31:10"
																		},
																		"nativeSrc": "3323:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3323:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3374:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3374:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3377:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3377:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3367:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3367:6:10"
																			},
																			"nativeSrc": "3367:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3367:15:10"
																		},
																		"nativeSrc": "3367:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3367:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3402:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3402:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3405:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3405:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3395:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3395:6:10"
																			},
																			"nativeSrc": "3395:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3395:15:10"
																		},
																		"nativeSrc": "3395:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3395:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3293:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3293:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3296:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3290:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3290:2:10"
																},
																"nativeSrc": "3290:10:10",
																"nodeType": "YulFunctionCall",
																"src": "3290:10:10"
															},
															"nativeSrc": "3287:133:10",
															"nodeType": "YulIf",
															"src": "3287:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3204:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3235:1:10",
														"nodeType": "YulTypedName",
														"src": "3235:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3238:1:10",
														"nodeType": "YulTypedName",
														"src": "3238:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3244:3:10",
														"nodeType": "YulTypedName",
														"src": "3244:3:10",
														"type": ""
													}
												],
												"src": "3204:222:10"
											},
											{
												"body": {
													"nativeSrc": "3588:188:10",
													"nodeType": "YulBlock",
													"src": "3588:188:10",
													"statements": [
														{
															"nativeSrc": "3598:26:10",
															"nodeType": "YulAssignment",
															"src": "3598:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3610:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3610:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3621:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3621:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3606:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3606:3:10"
																},
																"nativeSrc": "3606:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3606:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3598:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3598:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3640:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3640:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3655:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3655:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3671:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3671:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3676:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3676:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3667:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3667:3:10"
																						},
																						"nativeSrc": "3667:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3667:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3680:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3680:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3663:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3663:3:10"
																				},
																				"nativeSrc": "3663:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3663:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3651:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3651:3:10"
																		},
																		"nativeSrc": "3651:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3651:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3633:6:10"
																},
																"nativeSrc": "3633:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3633:51:10"
															},
															"nativeSrc": "3633:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3633:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3704:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3704:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3715:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3715:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3700:3:10"
																		},
																		"nativeSrc": "3700:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3700:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3720:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3720:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3693:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:10"
																},
																"nativeSrc": "3693:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3693:34:10"
															},
															"nativeSrc": "3693:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3693:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3747:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3747:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3758:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3758:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3743:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3743:3:10"
																		},
																		"nativeSrc": "3743:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3743:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3763:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3763:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3736:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:10"
																},
																"nativeSrc": "3736:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3736:34:10"
															},
															"nativeSrc": "3736:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3736:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3431:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3541:9:10",
														"nodeType": "YulTypedName",
														"src": "3541:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3552:6:10",
														"nodeType": "YulTypedName",
														"src": "3552:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3560:6:10",
														"nodeType": "YulTypedName",
														"src": "3560:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3568:6:10",
														"nodeType": "YulTypedName",
														"src": "3568:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3579:4:10",
														"nodeType": "YulTypedName",
														"src": "3579:4:10",
														"type": ""
													}
												],
												"src": "3431:345:10"
											},
											{
												"body": {
													"nativeSrc": "3882:76:10",
													"nodeType": "YulBlock",
													"src": "3882:76:10",
													"statements": [
														{
															"nativeSrc": "3892:26:10",
															"nodeType": "YulAssignment",
															"src": "3892:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3904:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3904:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3915:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3915:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:10"
																},
																"nativeSrc": "3900:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3900:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3892:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3892:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3934:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3934:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3945:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3945:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3927:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:10"
																},
																"nativeSrc": "3927:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3927:25:10"
															},
															"nativeSrc": "3927:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3927:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3781:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3851:9:10",
														"nodeType": "YulTypedName",
														"src": "3851:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3862:6:10",
														"nodeType": "YulTypedName",
														"src": "3862:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3873:4:10",
														"nodeType": "YulTypedName",
														"src": "3873:4:10",
														"type": ""
													}
												],
												"src": "3781:177:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620011153803806200111583398101604081905262000033916200033e565b60405180604001604052806009815260200168233630b6b2b137b93760b91b8152506040518060400160405280600381526020016223262160e91b81525081600390816200008291906200040b565b5060046200009182826200040b565b5050506001600160a01b038116620000bc5760405163c2bd570760e01b815260040160405180910390fd5b620000c85f826200011f565b50620000f57fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab826200011f565b506200010b8168056bc75e2d63100000620001cf565b506006805460ff19166001179055620004f7565b5f8281526005602090815260408083206001600160a01b038516845290915281205460ff16620001c6575f8381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556200017d3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001620001c9565b505f5b92915050565b6001600160a01b038216620001fe5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6200020b5f83836200020f565b5050565b6001600160a01b0383166200023d578060025f828254620002319190620004d7565b90915550620002af9050565b6001600160a01b0383165f9081526020819052604090205481811015620002915760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620001f5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620002cd57600280548290039055620002eb565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200033191815260200190565b60405180910390a3505050565b5f602082840312156200034f575f80fd5b81516001600160a01b038116811462000366575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200039657607f821691505b602082108103620003b557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200040657805f5260205f20601f840160051c81016020851015620003e25750805b601f840160051c820191505b8181101562000403575f8155600101620003ee565b50505b505050565b81516001600160401b038111156200042757620004276200036d565b6200043f8162000438845462000381565b84620003bb565b602080601f83116001811462000475575f84156200045d5750858301515b5f19600386901b1c1916600185901b178555620004cf565b5f85815260208120601f198616915b82811015620004a55788860151825594840194600190910190840162000484565b5085821015620004c357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b80820180821115620001c957634e487b7160e01b5f52601160045260245ffd5b610c1080620005055f395ff3fe608060405234801561000f575f80fd5b5060043610610132575f3560e01c8063313ce567116100b45780639dc29fac116100795780639dc29fac14610277578063a217fddf1461028a578063a9059cbb14610291578063d547741f146102a4578063dd62ed3e146102b7578063e328400c146102ef575f80fd5b8063313ce5671461021257806336568abe1461022157806370a082311461023457806391d148541461025c57806395d89b411461026f575f80fd5b806318160ddd116100fa57806318160ddd146101a857806323b872dd146101ba578063248a9ca3146101cd5780632f2ff15d146101ef5780632ff2e9dc14610202575f80fd5b806301ffc9a71461013657806304a7137e1461015e57806306fdde0314610173578063095ea7b3146101885780630db794171461019b575b5f80fd5b610149610144366004610a0b565b610316565b60405190151581526020015b60405180910390f35b61017161016c366004610a54565b61034c565b005b61017b6103b6565b6040516101559190610a7c565b610149610196366004610a54565b610446565b6006546101499060ff1681565b6002545b604051908152602001610155565b6101496101c8366004610ac8565b61045d565b6101ac6101db366004610b01565b5f9081526005602052604090206001015490565b6101716101fd366004610b18565b610480565b6101ac68056bc75e2d6310000081565b60405160128152602001610155565b61017161022f366004610b18565b6104aa565b6101ac610242366004610b42565b6001600160a01b03165f9081526020819052604090205490565b61014961026a366004610b18565b6104e2565b61017b61050c565b610171610285366004610a54565b61051b565b6101ac5f81565b61014961029f366004610a54565b61054f565b6101716102b2366004610b18565b61055c565b6101ac6102c5366004610b5b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101ac7fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab81565b5f6001600160e01b03198216637965db0b60e01b148061034657506301ffc9a760e01b6001600160e01b03198316145b92915050565b7fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab61037681610580565b60065460ff161561039a5760405163af79b43760e01b815260040160405180910390fd5b6103a4838361058d565b50506006805460ff1916600117905550565b6060600380546103c590610b83565b80601f01602080910402602001604051908101604052809291908181526020018280546103f190610b83565b801561043c5780601f106104135761010080835404028352916020019161043c565b820191905f5260205f20905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b5f336104538185856105ca565b5060019392505050565b5f3361046a8582856105d7565b61047585858561064d565b506001949350505050565b5f8281526005602052604090206001015461049a81610580565b6104a483836106aa565b50505050565b6001600160a01b03811633146104d35760405163334bd91960e11b815260040160405180910390fd5b6104dd828261073b565b505050565b5f9182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546103c590610b83565b7fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab61054581610580565b6104dd83836107a6565b5f3361045381858561064d565b5f8281526005602052604090206001015461057681610580565b6104a4838361073b565b61058a81336107da565b50565b6001600160a01b0382166105bb5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6105c65f8383610813565b5050565b6104dd8383836001610939565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156104a4578181101561063f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105b2565b6104a484848484035f610939565b6001600160a01b03831661067657604051634b637e8f60e11b81525f60048201526024016105b2565b6001600160a01b03821661069f5760405163ec442f0560e01b81525f60048201526024016105b2565b6104dd838383610813565b5f6106b583836104e2565b610734575f8381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556106ec3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610346565b505f610346565b5f61074683836104e2565b15610734575f8381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610346565b6001600160a01b0382166107cf57604051634b637e8f60e11b81525f60048201526024016105b2565b6105c6825f83610813565b6107e482826104e2565b6105c65760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016105b2565b6001600160a01b03831661083d578060025f8282546108329190610bbb565b909155506108ad9050565b6001600160a01b0383165f908152602081905260409020548181101561088f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105b2565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108c9576002805482900390556108e7565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161092c91815260200190565b60405180910390a3505050565b6001600160a01b0384166109625760405163e602df0560e01b81525f60048201526024016105b2565b6001600160a01b03831661098b57604051634a1406b160e11b81525f60048201526024016105b2565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156104a457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109fd91815260200190565b60405180910390a350505050565b5f60208284031215610a1b575f80fd5b81356001600160e01b031981168114610a32575f80fd5b9392505050565b80356001600160a01b0381168114610a4f575f80fd5b919050565b5f8060408385031215610a65575f80fd5b610a6e83610a39565b946020939093013593505050565b5f602080835283518060208501525f5b81811015610aa857858101830151858201604001528201610a8c565b505f604082860101526040601f19601f8301168501019250505092915050565b5f805f60608486031215610ada575f80fd5b610ae384610a39565b9250610af160208501610a39565b9150604084013590509250925092565b5f60208284031215610b11575f80fd5b5035919050565b5f8060408385031215610b29575f80fd5b82359150610b3960208401610a39565b90509250929050565b5f60208284031215610b52575f80fd5b610a3282610a39565b5f8060408385031215610b6c575f80fd5b610b7583610a39565b9150610b3960208401610a39565b600181811c90821680610b9757607f821691505b602082108103610bb557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561034657634e487b7160e01b5f52601160045260245ffdfea26469706673582212208f04a006845b496f0ddc7ad22a12dfcbbf6e09cc719af9a5fc3a73d02ed6fda064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1115 CODESIZE SUB DUP1 PUSH3 0x1115 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x233630B6B2B137B937 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232621 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x82 SWAP2 SWAP1 PUSH3 0x40B JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x91 DUP3 DUP3 PUSH3 0x40B JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBC JUMPI PUSH1 0x40 MLOAD PUSH4 0xC2BD5707 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC8 PUSH0 DUP3 PUSH3 0x11F JUMP JUMPDEST POP PUSH3 0xF5 PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP3 PUSH3 0x11F JUMP JUMPDEST POP PUSH3 0x10B DUP2 PUSH9 0x56BC75E2D63100000 PUSH3 0x1CF JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x4F7 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x1C6 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x17D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x1C9 JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x20B PUSH0 DUP4 DUP4 PUSH3 0x20F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x23D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x231 SWAP2 SWAP1 PUSH3 0x4D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x2AF SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x291 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2CD JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x2EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x331 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x366 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x396 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x406 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3E2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x403 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3EE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x427 JUMPI PUSH3 0x427 PUSH3 0x36D JUMP JUMPDEST PUSH3 0x43F DUP2 PUSH3 0x438 DUP5 SLOAD PUSH3 0x381 JUMP JUMPDEST DUP5 PUSH3 0x3BB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x475 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x45D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4CF JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4A5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x484 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4C3 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x1C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC10 DUP1 PUSH3 0x505 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xE328400C EQ PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x4A7137E EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xDB79417 EQ PUSH2 0x19B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x149 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x149 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST PUSH2 0x1AC PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x50C JUMP JUMPDEST PUSH2 0x171 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x1AC PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH2 0x171 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x346 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB PUSH2 0x376 DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x39A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A4 DUP4 DUP4 PUSH2 0x58D JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3C5 SWAP1 PUSH2 0xB83 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F1 SWAP1 PUSH2 0xB83 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x413 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x453 DUP2 DUP6 DUP6 PUSH2 0x5CA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46A DUP6 DUP3 DUP6 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x475 DUP6 DUP6 DUP6 PUSH2 0x64D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x49A DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 PUSH2 0x6AA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x73B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3C5 SWAP1 PUSH2 0xB83 JUMP JUMPDEST PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB PUSH2 0x545 DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 PUSH2 0x7A6 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x453 DUP2 DUP6 DUP6 PUSH2 0x64D JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x576 DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x58A DUP2 CALLER PUSH2 0x7DA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C6 PUSH0 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x4A4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x4A4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH0 PUSH2 0x6B5 DUP4 DUP4 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x734 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x6EC CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x346 JUMP JUMPDEST POP PUSH0 PUSH2 0x346 JUMP JUMPDEST PUSH0 PUSH2 0x746 DUP4 DUP4 PUSH2 0x4E2 JUMP JUMPDEST ISZERO PUSH2 0x734 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x5C6 DUP3 PUSH0 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x7E4 DUP3 DUP3 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x83D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x832 SWAP2 SWAP1 PUSH2 0xBBB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8AD SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C9 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x92C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA32 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA4F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA6E DUP4 PUSH2 0xA39 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA8C JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xADA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAE3 DUP5 PUSH2 0xA39 JUMP JUMPDEST SWAP3 POP PUSH2 0xAF1 PUSH1 0x20 DUP6 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB29 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xB39 PUSH1 0x20 DUP5 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA32 DUP3 PUSH2 0xA39 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB6C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB75 DUP4 PUSH2 0xA39 JUMP JUMPDEST SWAP2 POP PUSH2 0xB39 PUSH1 0x20 DUP5 ADD PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB97 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x346 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 DIV LOG0 MOD DUP5 JUMPDEST BLOBHASH PUSH16 0xDDC7AD22A12DFCBBF6E09CC719AF9A5 0xFC GASPRICE PUSH20 0xD02ED6FDA064736F6C6343000818003300000000 ",
							"sourceMap": "270:1068:9:-:0;;;495:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:3;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;571:28:9;::::1;567:65;;608:24;;-1:-1:-1::0;;;608:24:9::1;;;;;;;;;;;567:65;643:46;2232:4:0;674:14:9::0;643:10:::1;:46::i;:::-;-1:-1:-1::0;699:41:9::1;364:26;725:14:::0;699:10:::1;:41::i;:::-;-1:-1:-1::0;751:37:9::1;757:14:::0;437::::1;751:5;:37::i;:::-;-1:-1:-1::0;798:19:9::1;:26:::0;;-1:-1:-1;;798:26:9::1;820:4;798:26;::::0;;270:1068;;6179:316:0;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:6;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;3142:51:10;3115:18;;7553:32:3;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;3651:32:10;;6367:50:3;;;3633:51:10;3700:18;;;3693:34;;;3743:18;;;3736:34;;;3606:18;;6367:50:3;3431:345:10;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;3927::10;;3915:2;3900:18;;3781:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:290:10:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:10;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:10:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:10;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1345::-;1766:10;;-1:-1:-1;;;;;1788:30:10;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2059:2;2048:14;;2076:1;2071:663;;;;2778:1;2795:6;2792:89;;;-1:-1:-1;2847:19:10;;;2841:26;2792:89;-1:-1:-1;;1603:1:10;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2894:81;;2041:944;;2071:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2107:20:10;;;2225:236;2239:7;2236:1;2233:14;2225:236;;;2328:19;;;2322:26;2307:42;;2420:27;;;;2388:1;2376:14;;;;2255:19;;2225:236;;;2229:3;2489:6;2480:7;2477:19;2474:201;;;2550:19;;;2544:26;-1:-1:-1;;2633:1:10;2629:14;;;2645:3;2625:24;2621:37;2617:42;2602:58;2587:74;;2474:201;;;2721:1;2712:6;2709:1;2705:14;2701:22;2695:4;2688:36;2041:944;;;;;1646:1345;;:::o;3204:222::-;3269:9;;;3290:10;;;3287:133;;;3342:10;3337:3;3333:20;3330:1;3323:31;3377:4;3374:1;3367:15;3405:4;3402:1;3395:15;3781:177;270:1068:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_1226": {
									"entryPoint": null,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MULTISIG_ROLE_1219": {
									"entryPoint": null,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 1482,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 2361,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 1958,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2010,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 1408,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 1706,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 1421,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 1851,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 1495,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 1613,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 2067,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": null,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1094,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": null,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1284": {
									"entryPoint": 1307,
									"id": 1284,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@controlledMint_1310": {
									"entryPoint": 844,
									"id": 1310,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1152,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1250,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialMintComplete_1228": {
									"entryPoint": null,
									"id": 1228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 950,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1194,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1372,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1187": {
									"entryPoint": null,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 790,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 1292,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 1117,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 1359,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4719:10",
										"nodeType": "YulBlock",
										"src": "0:4719:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:10",
													"nodeType": "YulBlock",
													"src": "83:217:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:10",
																"nodeType": "YulBlock",
																"src": "129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:10",
																					"nodeType": "YulLiteral",
																					"src": "138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:10",
																					"nodeType": "YulLiteral",
																					"src": "141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:10"
																			},
																			"nativeSrc": "131:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:10"
																		},
																		"nativeSrc": "131:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:10"
																		},
																		"nativeSrc": "100:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:10",
																		"nodeType": "YulLiteral",
																		"src": "125:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:10"
																},
																"nativeSrc": "96:32:10",
																"nodeType": "YulFunctionCall",
																"src": "96:32:10"
															},
															"nativeSrc": "93:52:10",
															"nodeType": "YulIf",
															"src": "93:52:10"
														},
														{
															"nativeSrc": "154:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:10"
																},
																"nativeSrc": "167:23:10",
																"nodeType": "YulFunctionCall",
																"src": "167:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:10",
																	"nodeType": "YulTypedName",
																	"src": "158:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:10",
																"nodeType": "YulBlock",
																"src": "254:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:10",
																					"nodeType": "YulLiteral",
																					"src": "263:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:10",
																					"nodeType": "YulLiteral",
																					"src": "266:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			"nativeSrc": "256:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:10"
																		},
																		"nativeSrc": "256:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:10",
																								"nodeType": "YulLiteral",
																								"src": "234:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:10",
																								"nodeType": "YulLiteral",
																								"src": "239:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:10"
																						},
																						"nativeSrc": "230:20:10",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:10"
																				},
																				"nativeSrc": "219:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:10"
																		},
																		"nativeSrc": "209:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:10"
																},
																"nativeSrc": "202:51:10",
																"nodeType": "YulFunctionCall",
																"src": "202:51:10"
															},
															"nativeSrc": "199:71:10",
															"nodeType": "YulIf",
															"src": "199:71:10"
														},
														{
															"nativeSrc": "279:15:10",
															"nodeType": "YulAssignment",
															"src": "279:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:10",
																"nodeType": "YulIdentifier",
																"src": "289:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:10",
														"nodeType": "YulTypedName",
														"src": "49:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:10",
														"nodeType": "YulTypedName",
														"src": "60:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:10",
														"nodeType": "YulTypedName",
														"src": "72:6:10",
														"type": ""
													}
												],
												"src": "14:286:10"
											},
											{
												"body": {
													"nativeSrc": "400:92:10",
													"nodeType": "YulBlock",
													"src": "400:92:10",
													"statements": [
														{
															"nativeSrc": "410:26:10",
															"nodeType": "YulAssignment",
															"src": "410:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:10",
																		"nodeType": "YulLiteral",
																		"src": "433:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:10"
																},
																"nativeSrc": "418:18:10",
																"nodeType": "YulFunctionCall",
																"src": "418:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:10"
																				},
																				"nativeSrc": "470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:10"
																		},
																		"nativeSrc": "463:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:10"
																},
																"nativeSrc": "445:41:10",
																"nodeType": "YulFunctionCall",
																"src": "445:41:10"
															},
															"nativeSrc": "445:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:10",
														"nodeType": "YulTypedName",
														"src": "369:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:10",
														"nodeType": "YulTypedName",
														"src": "380:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:10",
														"nodeType": "YulTypedName",
														"src": "391:4:10",
														"type": ""
													}
												],
												"src": "305:187:10"
											},
											{
												"body": {
													"nativeSrc": "546:124:10",
													"nodeType": "YulBlock",
													"src": "546:124:10",
													"statements": [
														{
															"nativeSrc": "556:29:10",
															"nodeType": "YulAssignment",
															"src": "556:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "578:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "565:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:10"
																},
																"nativeSrc": "565:20:10",
																"nodeType": "YulFunctionCall",
																"src": "565:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "556:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "648:16:10",
																"nodeType": "YulBlock",
																"src": "648:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "657:1:10",
																					"nodeType": "YulLiteral",
																					"src": "657:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "660:1:10",
																					"nodeType": "YulLiteral",
																					"src": "660:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "650:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:10"
																			},
																			"nativeSrc": "650:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:10"
																		},
																		"nativeSrc": "650:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "607:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "618:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "633:3:10",
																										"nodeType": "YulLiteral",
																										"src": "633:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "638:1:10",
																										"nodeType": "YulLiteral",
																										"src": "638:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "629:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:10"
																								},
																								"nativeSrc": "629:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "642:1:10",
																								"nodeType": "YulLiteral",
																								"src": "642:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "625:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:10"
																						},
																						"nativeSrc": "625:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "614:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:10"
																				},
																				"nativeSrc": "614:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "604:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:10"
																		},
																		"nativeSrc": "604:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nativeSrc": "597:50:10",
																"nodeType": "YulFunctionCall",
																"src": "597:50:10"
															},
															"nativeSrc": "594:70:10",
															"nodeType": "YulIf",
															"src": "594:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "497:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "525:6:10",
														"nodeType": "YulTypedName",
														"src": "525:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "536:5:10",
														"nodeType": "YulTypedName",
														"src": "536:5:10",
														"type": ""
													}
												],
												"src": "497:173:10"
											},
											{
												"body": {
													"nativeSrc": "762:167:10",
													"nodeType": "YulBlock",
													"src": "762:167:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "808:16:10",
																"nodeType": "YulBlock",
																"src": "808:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "817:1:10",
																					"nodeType": "YulLiteral",
																					"src": "817:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "820:1:10",
																					"nodeType": "YulLiteral",
																					"src": "820:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "810:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:10"
																			},
																			"nativeSrc": "810:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:10"
																		},
																		"nativeSrc": "810:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "783:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "783:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "792:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "792:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "779:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:10"
																		},
																		"nativeSrc": "779:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "779:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "804:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "775:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:10"
																},
																"nativeSrc": "775:32:10",
																"nodeType": "YulFunctionCall",
																"src": "775:32:10"
															},
															"nativeSrc": "772:52:10",
															"nodeType": "YulIf",
															"src": "772:52:10"
														},
														{
															"nativeSrc": "833:39:10",
															"nodeType": "YulAssignment",
															"src": "833:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "862:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "862:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "843:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "843:18:10"
																},
																"nativeSrc": "843:29:10",
																"nodeType": "YulFunctionCall",
																"src": "843:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "833:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:10"
																}
															]
														},
														{
															"nativeSrc": "881:42:10",
															"nodeType": "YulAssignment",
															"src": "881:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "908:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "908:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "919:2:10",
																				"nodeType": "YulLiteral",
																				"src": "919:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "904:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "904:3:10"
																		},
																		"nativeSrc": "904:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "904:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "891:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "891:12:10"
																},
																"nativeSrc": "891:32:10",
																"nodeType": "YulFunctionCall",
																"src": "891:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "881:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "881:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "675:254:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "720:9:10",
														"nodeType": "YulTypedName",
														"src": "720:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "731:7:10",
														"nodeType": "YulTypedName",
														"src": "731:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "743:6:10",
														"nodeType": "YulTypedName",
														"src": "743:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "751:6:10",
														"nodeType": "YulTypedName",
														"src": "751:6:10",
														"type": ""
													}
												],
												"src": "675:254:10"
											},
											{
												"body": {
													"nativeSrc": "1055:427:10",
													"nodeType": "YulBlock",
													"src": "1055:427:10",
													"statements": [
														{
															"nativeSrc": "1065:12:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1065:12:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1075:2:10",
																"nodeType": "YulLiteral",
																"src": "1075:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1069:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1069:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1093:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1093:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1104:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1104:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1086:6:10"
																},
																"nativeSrc": "1086:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1086:21:10"
															},
															"nativeSrc": "1086:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1086:21:10"
														},
														{
															"nativeSrc": "1116:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1116:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1136:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1130:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1130:5:10"
																},
																"nativeSrc": "1130:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1130:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1120:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1120:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1163:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1163:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1159:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:10"
																		},
																		"nativeSrc": "1159:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1159:18:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1179:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1179:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1152:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1152:6:10"
																},
																"nativeSrc": "1152:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1152:34:10"
															},
															"nativeSrc": "1152:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1152:34:10"
														},
														{
															"nativeSrc": "1195:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1195:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1204:1:10",
																"nodeType": "YulLiteral",
																"src": "1204:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1199:1:10",
																	"nodeType": "YulTypedName",
																	"src": "1199:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1264:90:10",
																"nodeType": "YulBlock",
																"src": "1264:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "1293:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "1293:9:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1304:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "1304:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1289:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1289:3:10"
																							},
																							"nativeSrc": "1289:17:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1289:17:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1308:2:10",
																							"nodeType": "YulLiteral",
																							"src": "1308:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1285:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1285:3:10"
																					},
																					"nativeSrc": "1285:26:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1285:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "1327:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "1327:6:10"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "1335:1:10",
																											"nodeType": "YulIdentifier",
																											"src": "1335:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "1323:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1323:3:10"
																									},
																									"nativeSrc": "1323:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1323:14:10"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "1339:2:10",
																									"nodeType": "YulIdentifier",
																									"src": "1339:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1319:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1319:3:10"
																							},
																							"nativeSrc": "1319:23:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1319:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1313:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1313:5:10"
																					},
																					"nativeSrc": "1313:30:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1313:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1278:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1278:6:10"
																			},
																			"nativeSrc": "1278:66:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1278:66:10"
																		},
																		"nativeSrc": "1278:66:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1278:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1225:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1225:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1228:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1228:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1222:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:2:10"
																},
																"nativeSrc": "1222:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:13:10"
															},
															"nativeSrc": "1214:140:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1236:19:10",
																"nodeType": "YulBlock",
																"src": "1236:19:10",
																"statements": [
																	{
																		"nativeSrc": "1238:15:10",
																		"nodeType": "YulAssignment",
																		"src": "1238:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1247:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "1247:1:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1250:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "1250:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1243:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1243:3:10"
																			},
																			"nativeSrc": "1243:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1243:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1238:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "1238:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1218:3:10",
																"nodeType": "YulBlock",
																"src": "1218:3:10",
																"statements": []
															},
															"src": "1214:140:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1378:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1378:9:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1389:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1389:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1374:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1374:3:10"
																				},
																				"nativeSrc": "1374:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1374:22:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1398:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1398:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1370:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:10"
																		},
																		"nativeSrc": "1370:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1370:31:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1403:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1403:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1363:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:10"
																},
																"nativeSrc": "1363:42:10",
																"nodeType": "YulFunctionCall",
																"src": "1363:42:10"
															},
															"nativeSrc": "1363:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "1363:42:10"
														},
														{
															"nativeSrc": "1414:62:10",
															"nodeType": "YulAssignment",
															"src": "1414:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1430:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1449:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "1449:6:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1457:2:10",
																								"nodeType": "YulLiteral",
																								"src": "1457:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1445:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1445:3:10"
																						},
																						"nativeSrc": "1445:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1445:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1466:2:10",
																								"nodeType": "YulLiteral",
																								"src": "1466:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1462:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:10"
																						},
																						"nativeSrc": "1462:7:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1462:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1441:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1441:3:10"
																				},
																				"nativeSrc": "1441:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1441:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1426:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:10"
																		},
																		"nativeSrc": "1426:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1426:45:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1473:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1473:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1422:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:10"
																},
																"nativeSrc": "1422:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1414:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "934:548:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1024:9:10",
														"nodeType": "YulTypedName",
														"src": "1024:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1035:6:10",
														"nodeType": "YulTypedName",
														"src": "1035:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1046:4:10",
														"nodeType": "YulTypedName",
														"src": "1046:4:10",
														"type": ""
													}
												],
												"src": "934:548:10"
											},
											{
												"body": {
													"nativeSrc": "1588:76:10",
													"nodeType": "YulBlock",
													"src": "1588:76:10",
													"statements": [
														{
															"nativeSrc": "1598:26:10",
															"nodeType": "YulAssignment",
															"src": "1598:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1610:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1610:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1621:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1621:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1606:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1606:3:10"
																},
																"nativeSrc": "1606:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1606:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1598:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1640:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1640:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1651:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:10"
																},
																"nativeSrc": "1633:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1633:25:10"
															},
															"nativeSrc": "1633:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1633:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1487:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1557:9:10",
														"nodeType": "YulTypedName",
														"src": "1557:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1568:6:10",
														"nodeType": "YulTypedName",
														"src": "1568:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1579:4:10",
														"nodeType": "YulTypedName",
														"src": "1579:4:10",
														"type": ""
													}
												],
												"src": "1487:177:10"
											},
											{
												"body": {
													"nativeSrc": "1773:224:10",
													"nodeType": "YulBlock",
													"src": "1773:224:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1819:16:10",
																"nodeType": "YulBlock",
																"src": "1819:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1828:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1828:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1821:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1821:6:10"
																			},
																			"nativeSrc": "1821:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:12:10"
																		},
																		"nativeSrc": "1821:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1794:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1794:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1803:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1790:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1790:3:10"
																		},
																		"nativeSrc": "1790:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1790:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1815:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1815:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1786:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:10"
																},
																"nativeSrc": "1786:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1786:32:10"
															},
															"nativeSrc": "1783:52:10",
															"nodeType": "YulIf",
															"src": "1783:52:10"
														},
														{
															"nativeSrc": "1844:39:10",
															"nodeType": "YulAssignment",
															"src": "1844:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1873:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1873:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1854:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1854:18:10"
																},
																"nativeSrc": "1854:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1854:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:10"
																}
															]
														},
														{
															"nativeSrc": "1892:48:10",
															"nodeType": "YulAssignment",
															"src": "1892:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1925:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1925:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1936:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1936:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1921:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:10"
																		},
																		"nativeSrc": "1921:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1921:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1902:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1902:18:10"
																},
																"nativeSrc": "1902:38:10",
																"nodeType": "YulFunctionCall",
																"src": "1902:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:10"
																}
															]
														},
														{
															"nativeSrc": "1949:42:10",
															"nodeType": "YulAssignment",
															"src": "1949:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1976:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1987:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1987:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1972:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:10"
																		},
																		"nativeSrc": "1972:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1959:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1959:12:10"
																},
																"nativeSrc": "1959:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1959:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1669:328:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1723:9:10",
														"nodeType": "YulTypedName",
														"src": "1723:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1734:7:10",
														"nodeType": "YulTypedName",
														"src": "1734:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1746:6:10",
														"nodeType": "YulTypedName",
														"src": "1746:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1754:6:10",
														"nodeType": "YulTypedName",
														"src": "1754:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1762:6:10",
														"nodeType": "YulTypedName",
														"src": "1762:6:10",
														"type": ""
													}
												],
												"src": "1669:328:10"
											},
											{
												"body": {
													"nativeSrc": "2072:110:10",
													"nodeType": "YulBlock",
													"src": "2072:110:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2118:16:10",
																"nodeType": "YulBlock",
																"src": "2118:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2127:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2127:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2130:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2130:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2120:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2120:6:10"
																			},
																			"nativeSrc": "2120:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2120:12:10"
																		},
																		"nativeSrc": "2120:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2120:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2093:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2093:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2102:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2102:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2089:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2089:3:10"
																		},
																		"nativeSrc": "2089:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2089:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2114:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2114:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2085:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2085:3:10"
																},
																"nativeSrc": "2085:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2085:32:10"
															},
															"nativeSrc": "2082:52:10",
															"nodeType": "YulIf",
															"src": "2082:52:10"
														},
														{
															"nativeSrc": "2143:33:10",
															"nodeType": "YulAssignment",
															"src": "2143:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2166:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2166:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2153:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2153:12:10"
																},
																"nativeSrc": "2153:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2153:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2002:180:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2038:9:10",
														"nodeType": "YulTypedName",
														"src": "2038:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2049:7:10",
														"nodeType": "YulTypedName",
														"src": "2049:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2061:6:10",
														"nodeType": "YulTypedName",
														"src": "2061:6:10",
														"type": ""
													}
												],
												"src": "2002:180:10"
											},
											{
												"body": {
													"nativeSrc": "2288:76:10",
													"nodeType": "YulBlock",
													"src": "2288:76:10",
													"statements": [
														{
															"nativeSrc": "2298:26:10",
															"nodeType": "YulAssignment",
															"src": "2298:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2310:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2310:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2321:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2306:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:10"
																},
																"nativeSrc": "2306:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2306:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2298:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2298:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2340:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2340:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2351:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2351:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2333:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:10"
																},
																"nativeSrc": "2333:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2333:25:10"
															},
															"nativeSrc": "2333:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "2333:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2187:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2257:9:10",
														"nodeType": "YulTypedName",
														"src": "2257:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2268:6:10",
														"nodeType": "YulTypedName",
														"src": "2268:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2279:4:10",
														"nodeType": "YulTypedName",
														"src": "2279:4:10",
														"type": ""
													}
												],
												"src": "2187:177:10"
											},
											{
												"body": {
													"nativeSrc": "2456:167:10",
													"nodeType": "YulBlock",
													"src": "2456:167:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2502:16:10",
																"nodeType": "YulBlock",
																"src": "2502:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2511:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2511:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2514:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2504:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2504:6:10"
																			},
																			"nativeSrc": "2504:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2504:12:10"
																		},
																		"nativeSrc": "2504:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2504:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2477:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2477:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2486:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2486:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2473:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2473:3:10"
																		},
																		"nativeSrc": "2473:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2473:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2498:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2498:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2469:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:10"
																},
																"nativeSrc": "2469:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2469:32:10"
															},
															"nativeSrc": "2466:52:10",
															"nodeType": "YulIf",
															"src": "2466:52:10"
														},
														{
															"nativeSrc": "2527:33:10",
															"nodeType": "YulAssignment",
															"src": "2527:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2550:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2550:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2537:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2537:12:10"
																},
																"nativeSrc": "2537:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2537:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2527:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:10"
																}
															]
														},
														{
															"nativeSrc": "2569:48:10",
															"nodeType": "YulAssignment",
															"src": "2569:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2602:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2602:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2613:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2613:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2598:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:10"
																		},
																		"nativeSrc": "2598:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2598:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2579:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2579:18:10"
																},
																"nativeSrc": "2579:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2579:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2569:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2569:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2369:254:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2414:9:10",
														"nodeType": "YulTypedName",
														"src": "2414:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2425:7:10",
														"nodeType": "YulTypedName",
														"src": "2425:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2437:6:10",
														"nodeType": "YulTypedName",
														"src": "2437:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2445:6:10",
														"nodeType": "YulTypedName",
														"src": "2445:6:10",
														"type": ""
													}
												],
												"src": "2369:254:10"
											},
											{
												"body": {
													"nativeSrc": "2725:87:10",
													"nodeType": "YulBlock",
													"src": "2725:87:10",
													"statements": [
														{
															"nativeSrc": "2735:26:10",
															"nodeType": "YulAssignment",
															"src": "2735:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2747:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2747:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2758:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2758:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2743:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2743:3:10"
																},
																"nativeSrc": "2743:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2743:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2735:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2735:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2777:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2777:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2792:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2792:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2800:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2800:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2788:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2788:3:10"
																		},
																		"nativeSrc": "2788:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2788:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2770:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:10"
																},
																"nativeSrc": "2770:36:10",
																"nodeType": "YulFunctionCall",
																"src": "2770:36:10"
															},
															"nativeSrc": "2770:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "2770:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2628:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2694:9:10",
														"nodeType": "YulTypedName",
														"src": "2694:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2705:6:10",
														"nodeType": "YulTypedName",
														"src": "2705:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2716:4:10",
														"nodeType": "YulTypedName",
														"src": "2716:4:10",
														"type": ""
													}
												],
												"src": "2628:184:10"
											},
											{
												"body": {
													"nativeSrc": "2887:116:10",
													"nodeType": "YulBlock",
													"src": "2887:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2933:16:10",
																"nodeType": "YulBlock",
																"src": "2933:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2942:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2942:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2935:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2935:6:10"
																			},
																			"nativeSrc": "2935:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2935:12:10"
																		},
																		"nativeSrc": "2935:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2935:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2908:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2917:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2904:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2904:3:10"
																		},
																		"nativeSrc": "2904:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2904:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2929:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2900:3:10"
																},
																"nativeSrc": "2900:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2900:32:10"
															},
															"nativeSrc": "2897:52:10",
															"nodeType": "YulIf",
															"src": "2897:52:10"
														},
														{
															"nativeSrc": "2958:39:10",
															"nodeType": "YulAssignment",
															"src": "2958:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2987:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2987:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2968:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2968:18:10"
																},
																"nativeSrc": "2968:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2968:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2958:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2817:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2853:9:10",
														"nodeType": "YulTypedName",
														"src": "2853:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2864:7:10",
														"nodeType": "YulTypedName",
														"src": "2864:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2876:6:10",
														"nodeType": "YulTypedName",
														"src": "2876:6:10",
														"type": ""
													}
												],
												"src": "2817:186:10"
											},
											{
												"body": {
													"nativeSrc": "3095:173:10",
													"nodeType": "YulBlock",
													"src": "3095:173:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3141:16:10",
																"nodeType": "YulBlock",
																"src": "3141:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3150:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3150:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3153:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3153:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:10"
																			},
																			"nativeSrc": "3143:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3143:12:10"
																		},
																		"nativeSrc": "3143:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3143:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3125:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:10"
																		},
																		"nativeSrc": "3112:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3112:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3137:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3108:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3108:3:10"
																},
																"nativeSrc": "3108:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3108:32:10"
															},
															"nativeSrc": "3105:52:10",
															"nodeType": "YulIf",
															"src": "3105:52:10"
														},
														{
															"nativeSrc": "3166:39:10",
															"nodeType": "YulAssignment",
															"src": "3166:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3195:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3176:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3176:18:10"
																},
																"nativeSrc": "3176:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3176:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3166:6:10"
																}
															]
														},
														{
															"nativeSrc": "3214:48:10",
															"nodeType": "YulAssignment",
															"src": "3214:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3247:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3258:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3258:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3243:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:10"
																		},
																		"nativeSrc": "3243:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3243:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3224:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3224:18:10"
																},
																"nativeSrc": "3224:38:10",
																"nodeType": "YulFunctionCall",
																"src": "3224:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3214:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3214:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3008:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3053:9:10",
														"nodeType": "YulTypedName",
														"src": "3053:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3064:7:10",
														"nodeType": "YulTypedName",
														"src": "3064:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3076:6:10",
														"nodeType": "YulTypedName",
														"src": "3076:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3084:6:10",
														"nodeType": "YulTypedName",
														"src": "3084:6:10",
														"type": ""
													}
												],
												"src": "3008:260:10"
											},
											{
												"body": {
													"nativeSrc": "3328:325:10",
													"nodeType": "YulBlock",
													"src": "3328:325:10",
													"statements": [
														{
															"nativeSrc": "3338:22:10",
															"nodeType": "YulAssignment",
															"src": "3338:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3352:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3355:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3355:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3348:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:10"
																},
																"nativeSrc": "3348:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3348:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3338:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3338:6:10"
																}
															]
														},
														{
															"nativeSrc": "3369:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3369:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3399:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3399:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3405:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3405:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3395:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3395:3:10"
																},
																"nativeSrc": "3395:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3395:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3373:18:10",
																	"nodeType": "YulTypedName",
																	"src": "3373:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3446:31:10",
																"nodeType": "YulBlock",
																"src": "3446:31:10",
																"statements": [
																	{
																		"nativeSrc": "3448:27:10",
																		"nodeType": "YulAssignment",
																		"src": "3448:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3462:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "3462:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3470:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3470:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3458:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3458:3:10"
																			},
																			"nativeSrc": "3458:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3458:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3448:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3448:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3426:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "3426:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:10"
																},
																"nativeSrc": "3419:26:10",
																"nodeType": "YulFunctionCall",
																"src": "3419:26:10"
															},
															"nativeSrc": "3416:61:10",
															"nodeType": "YulIf",
															"src": "3416:61:10"
														},
														{
															"body": {
																"nativeSrc": "3536:111:10",
																"nodeType": "YulBlock",
																"src": "3536:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3564:3:10",
																							"nodeType": "YulLiteral",
																							"src": "3564:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3569:10:10",
																							"nodeType": "YulLiteral",
																							"src": "3569:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3560:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3560:3:10"
																					},
																					"nativeSrc": "3560:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3560:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3550:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:10"
																			},
																			"nativeSrc": "3550:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3550:31:10"
																		},
																		"nativeSrc": "3550:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3550:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3601:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3601:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3604:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3604:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3594:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3594:6:10"
																			},
																			"nativeSrc": "3594:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3594:15:10"
																		},
																		"nativeSrc": "3594:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3594:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3629:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3629:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3632:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3632:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3622:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3622:6:10"
																			},
																			"nativeSrc": "3622:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3622:15:10"
																		},
																		"nativeSrc": "3622:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3622:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3492:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "3492:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3515:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3515:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3523:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3512:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3512:2:10"
																		},
																		"nativeSrc": "3512:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3512:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3489:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3489:2:10"
																},
																"nativeSrc": "3489:38:10",
																"nodeType": "YulFunctionCall",
																"src": "3489:38:10"
															},
															"nativeSrc": "3486:161:10",
															"nodeType": "YulIf",
															"src": "3486:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3273:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3308:4:10",
														"nodeType": "YulTypedName",
														"src": "3308:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3317:6:10",
														"nodeType": "YulTypedName",
														"src": "3317:6:10",
														"type": ""
													}
												],
												"src": "3273:380:10"
											},
											{
												"body": {
													"nativeSrc": "3759:102:10",
													"nodeType": "YulBlock",
													"src": "3759:102:10",
													"statements": [
														{
															"nativeSrc": "3769:26:10",
															"nodeType": "YulAssignment",
															"src": "3769:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3781:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3781:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3792:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3792:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:10"
																},
																"nativeSrc": "3777:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3777:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3769:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3769:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3811:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3811:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3826:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3826:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3842:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3842:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3847:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3847:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3838:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3838:3:10"
																						},
																						"nativeSrc": "3838:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3838:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3851:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3851:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3834:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3834:3:10"
																				},
																				"nativeSrc": "3834:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3834:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3822:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3822:3:10"
																		},
																		"nativeSrc": "3822:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3822:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3804:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:6:10"
																},
																"nativeSrc": "3804:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:51:10"
															},
															"nativeSrc": "3804:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3804:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3658:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3728:9:10",
														"nodeType": "YulTypedName",
														"src": "3728:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3739:6:10",
														"nodeType": "YulTypedName",
														"src": "3739:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3750:4:10",
														"nodeType": "YulTypedName",
														"src": "3750:4:10",
														"type": ""
													}
												],
												"src": "3658:203:10"
											},
											{
												"body": {
													"nativeSrc": "4023:188:10",
													"nodeType": "YulBlock",
													"src": "4023:188:10",
													"statements": [
														{
															"nativeSrc": "4033:26:10",
															"nodeType": "YulAssignment",
															"src": "4033:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4045:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4045:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4056:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4056:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4041:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:10"
																},
																"nativeSrc": "4041:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4033:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4033:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4075:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4075:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4090:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4090:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4106:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4106:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4111:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4111:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4102:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4102:3:10"
																						},
																						"nativeSrc": "4102:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4102:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4115:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4115:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4098:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4098:3:10"
																				},
																				"nativeSrc": "4098:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4098:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4086:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:10"
																		},
																		"nativeSrc": "4086:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4086:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4068:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:10"
																},
																"nativeSrc": "4068:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4068:51:10"
															},
															"nativeSrc": "4068:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4068:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4139:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4150:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4150:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4135:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4135:3:10"
																		},
																		"nativeSrc": "4135:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4135:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4155:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4155:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4128:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:10"
																},
																"nativeSrc": "4128:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4128:34:10"
															},
															"nativeSrc": "4128:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4128:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4182:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4182:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4193:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4178:3:10"
																		},
																		"nativeSrc": "4178:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4178:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4198:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4198:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:10"
																},
																"nativeSrc": "4171:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4171:34:10"
															},
															"nativeSrc": "4171:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4171:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3866:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3976:9:10",
														"nodeType": "YulTypedName",
														"src": "3976:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3987:6:10",
														"nodeType": "YulTypedName",
														"src": "3987:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3995:6:10",
														"nodeType": "YulTypedName",
														"src": "3995:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4003:6:10",
														"nodeType": "YulTypedName",
														"src": "4003:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4014:4:10",
														"nodeType": "YulTypedName",
														"src": "4014:4:10",
														"type": ""
													}
												],
												"src": "3866:345:10"
											},
											{
												"body": {
													"nativeSrc": "4345:145:10",
													"nodeType": "YulBlock",
													"src": "4345:145:10",
													"statements": [
														{
															"nativeSrc": "4355:26:10",
															"nodeType": "YulAssignment",
															"src": "4355:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4367:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4367:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4378:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4378:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4363:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4363:3:10"
																},
																"nativeSrc": "4363:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4363:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4355:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4355:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4397:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4397:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4412:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4412:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4428:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4428:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4433:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4433:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4424:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4424:3:10"
																						},
																						"nativeSrc": "4424:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4424:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4420:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4420:3:10"
																				},
																				"nativeSrc": "4420:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4420:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4408:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4408:3:10"
																		},
																		"nativeSrc": "4408:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4408:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4390:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:10"
																},
																"nativeSrc": "4390:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4390:51:10"
															},
															"nativeSrc": "4390:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4390:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4461:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4461:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4472:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4472:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4457:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:3:10"
																		},
																		"nativeSrc": "4457:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4457:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4477:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4477:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4450:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4450:6:10"
																},
																"nativeSrc": "4450:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4450:34:10"
															},
															"nativeSrc": "4450:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4450:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "4216:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4306:9:10",
														"nodeType": "YulTypedName",
														"src": "4306:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4317:6:10",
														"nodeType": "YulTypedName",
														"src": "4317:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4325:6:10",
														"nodeType": "YulTypedName",
														"src": "4325:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4336:4:10",
														"nodeType": "YulTypedName",
														"src": "4336:4:10",
														"type": ""
													}
												],
												"src": "4216:274:10"
											},
											{
												"body": {
													"nativeSrc": "4543:174:10",
													"nodeType": "YulBlock",
													"src": "4543:174:10",
													"statements": [
														{
															"nativeSrc": "4553:16:10",
															"nodeType": "YulAssignment",
															"src": "4553:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4564:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4564:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4567:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4567:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4560:3:10"
																},
																"nativeSrc": "4560:9:10",
																"nodeType": "YulFunctionCall",
																"src": "4560:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4553:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4553:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4600:111:10",
																"nodeType": "YulBlock",
																"src": "4600:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4621:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4621:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4628:3:10",
																							"nodeType": "YulLiteral",
																							"src": "4628:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4633:10:10",
																							"nodeType": "YulLiteral",
																							"src": "4633:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4624:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4624:3:10"
																					},
																					"nativeSrc": "4624:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4624:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4614:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4614:6:10"
																			},
																			"nativeSrc": "4614:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4614:31:10"
																		},
																		"nativeSrc": "4614:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4614:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4665:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4665:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4668:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4668:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4658:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4658:6:10"
																			},
																			"nativeSrc": "4658:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4658:15:10"
																		},
																		"nativeSrc": "4658:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4658:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4693:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4693:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4696:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4696:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4686:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4686:6:10"
																			},
																			"nativeSrc": "4686:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4686:15:10"
																		},
																		"nativeSrc": "4686:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4686:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4584:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4584:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4587:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4587:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4581:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4581:2:10"
																},
																"nativeSrc": "4581:10:10",
																"nodeType": "YulFunctionCall",
																"src": "4581:10:10"
															},
															"nativeSrc": "4578:133:10",
															"nodeType": "YulIf",
															"src": "4578:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4495:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4526:1:10",
														"nodeType": "YulTypedName",
														"src": "4526:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4529:1:10",
														"nodeType": "YulTypedName",
														"src": "4529:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4535:3:10",
														"nodeType": "YulTypedName",
														"src": "4535:3:10",
														"type": ""
													}
												],
												"src": "4495:222:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610132575f3560e01c8063313ce567116100b45780639dc29fac116100795780639dc29fac14610277578063a217fddf1461028a578063a9059cbb14610291578063d547741f146102a4578063dd62ed3e146102b7578063e328400c146102ef575f80fd5b8063313ce5671461021257806336568abe1461022157806370a082311461023457806391d148541461025c57806395d89b411461026f575f80fd5b806318160ddd116100fa57806318160ddd146101a857806323b872dd146101ba578063248a9ca3146101cd5780632f2ff15d146101ef5780632ff2e9dc14610202575f80fd5b806301ffc9a71461013657806304a7137e1461015e57806306fdde0314610173578063095ea7b3146101885780630db794171461019b575b5f80fd5b610149610144366004610a0b565b610316565b60405190151581526020015b60405180910390f35b61017161016c366004610a54565b61034c565b005b61017b6103b6565b6040516101559190610a7c565b610149610196366004610a54565b610446565b6006546101499060ff1681565b6002545b604051908152602001610155565b6101496101c8366004610ac8565b61045d565b6101ac6101db366004610b01565b5f9081526005602052604090206001015490565b6101716101fd366004610b18565b610480565b6101ac68056bc75e2d6310000081565b60405160128152602001610155565b61017161022f366004610b18565b6104aa565b6101ac610242366004610b42565b6001600160a01b03165f9081526020819052604090205490565b61014961026a366004610b18565b6104e2565b61017b61050c565b610171610285366004610a54565b61051b565b6101ac5f81565b61014961029f366004610a54565b61054f565b6101716102b2366004610b18565b61055c565b6101ac6102c5366004610b5b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101ac7fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab81565b5f6001600160e01b03198216637965db0b60e01b148061034657506301ffc9a760e01b6001600160e01b03198316145b92915050565b7fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab61037681610580565b60065460ff161561039a5760405163af79b43760e01b815260040160405180910390fd5b6103a4838361058d565b50506006805460ff1916600117905550565b6060600380546103c590610b83565b80601f01602080910402602001604051908101604052809291908181526020018280546103f190610b83565b801561043c5780601f106104135761010080835404028352916020019161043c565b820191905f5260205f20905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b5f336104538185856105ca565b5060019392505050565b5f3361046a8582856105d7565b61047585858561064d565b506001949350505050565b5f8281526005602052604090206001015461049a81610580565b6104a483836106aa565b50505050565b6001600160a01b03811633146104d35760405163334bd91960e11b815260040160405180910390fd5b6104dd828261073b565b505050565b5f9182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546103c590610b83565b7fa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab61054581610580565b6104dd83836107a6565b5f3361045381858561064d565b5f8281526005602052604090206001015461057681610580565b6104a4838361073b565b61058a81336107da565b50565b6001600160a01b0382166105bb5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6105c65f8383610813565b5050565b6104dd8383836001610939565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198110156104a4578181101561063f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105b2565b6104a484848484035f610939565b6001600160a01b03831661067657604051634b637e8f60e11b81525f60048201526024016105b2565b6001600160a01b03821661069f5760405163ec442f0560e01b81525f60048201526024016105b2565b6104dd838383610813565b5f6106b583836104e2565b610734575f8381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556106ec3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610346565b505f610346565b5f61074683836104e2565b15610734575f8381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610346565b6001600160a01b0382166107cf57604051634b637e8f60e11b81525f60048201526024016105b2565b6105c6825f83610813565b6107e482826104e2565b6105c65760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016105b2565b6001600160a01b03831661083d578060025f8282546108329190610bbb565b909155506108ad9050565b6001600160a01b0383165f908152602081905260409020548181101561088f5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105b2565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108c9576002805482900390556108e7565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161092c91815260200190565b60405180910390a3505050565b6001600160a01b0384166109625760405163e602df0560e01b81525f60048201526024016105b2565b6001600160a01b03831661098b57604051634a1406b160e11b81525f60048201526024016105b2565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156104a457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109fd91815260200190565b60405180910390a350505050565b5f60208284031215610a1b575f80fd5b81356001600160e01b031981168114610a32575f80fd5b9392505050565b80356001600160a01b0381168114610a4f575f80fd5b919050565b5f8060408385031215610a65575f80fd5b610a6e83610a39565b946020939093013593505050565b5f602080835283518060208501525f5b81811015610aa857858101830151858201604001528201610a8c565b505f604082860101526040601f19601f8301168501019250505092915050565b5f805f60608486031215610ada575f80fd5b610ae384610a39565b9250610af160208501610a39565b9150604084013590509250925092565b5f60208284031215610b11575f80fd5b5035919050565b5f8060408385031215610b29575f80fd5b82359150610b3960208401610a39565b90509250929050565b5f60208284031215610b52575f80fd5b610a3282610a39565b5f8060408385031215610b6c575f80fd5b610b7583610a39565b9150610b3960208401610a39565b600181811c90821680610b9757607f821691505b602082108103610bb557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561034657634e487b7160e01b5f52601160045260245ffdfea26469706673582212208f04a006845b496f0ddc7ad22a12dfcbbf6e09cc719af9a5fc3a73d02ed6fda064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xE328400C EQ PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x4A7137E EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xDB79417 EQ PUSH2 0x19B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x149 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x149 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST PUSH2 0x1AC PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x50C JUMP JUMPDEST PUSH2 0x171 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x1AC PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH2 0x171 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x346 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB PUSH2 0x376 DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x39A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A4 DUP4 DUP4 PUSH2 0x58D JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3C5 SWAP1 PUSH2 0xB83 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F1 SWAP1 PUSH2 0xB83 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x413 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x453 DUP2 DUP6 DUP6 PUSH2 0x5CA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46A DUP6 DUP3 DUP6 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x475 DUP6 DUP6 DUP6 PUSH2 0x64D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x49A DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 PUSH2 0x6AA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x73B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3C5 SWAP1 PUSH2 0xB83 JUMP JUMPDEST PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB PUSH2 0x545 DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 PUSH2 0x7A6 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x453 DUP2 DUP6 DUP6 PUSH2 0x64D JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x576 DUP2 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x4A4 DUP4 DUP4 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x58A DUP2 CALLER PUSH2 0x7DA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C6 PUSH0 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x4A4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x4A4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x4DD DUP4 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH0 PUSH2 0x6B5 DUP4 DUP4 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x734 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x6EC CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x346 JUMP JUMPDEST POP PUSH0 PUSH2 0x346 JUMP JUMPDEST PUSH0 PUSH2 0x746 DUP4 DUP4 PUSH2 0x4E2 JUMP JUMPDEST ISZERO PUSH2 0x734 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x5C6 DUP3 PUSH0 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x7E4 DUP3 DUP3 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x83D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x832 SWAP2 SWAP1 PUSH2 0xBBB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8AD SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C9 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x92C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA32 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA4F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA6E DUP4 PUSH2 0xA39 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA8C JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xADA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAE3 DUP5 PUSH2 0xA39 JUMP JUMPDEST SWAP3 POP PUSH2 0xAF1 PUSH1 0x20 DUP6 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB29 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xB39 PUSH1 0x20 DUP5 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA32 DUP3 PUSH2 0xA39 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB6C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB75 DUP4 PUSH2 0xA39 JUMP JUMPDEST SWAP2 POP PUSH2 0xB39 PUSH1 0x20 DUP5 ADD PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB97 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x346 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 DIV LOG0 MOD DUP5 JUMPDEST BLOBHASH PUSH16 0xDDC7AD22A12DFCBBF6E09CC719AF9A5 0xFC GASPRICE PUSH20 0xD02ED6FDA064736F6C6343000818003300000000 ",
							"sourceMap": "270:1068:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:10;;463:22;445:41;;433:2;418:18;2565:202:0;;;;;;;;1098:238:9;;;;;;:::i;:::-;;:::i;:::-;;1760:89:3;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;457:31:9:-;;;;;;;;;2830:97:3;2908:12;;2830:97;;;1633:25:10;;;1621:2;1606:18;2830:97:3;1487:177:10;4757:244:3;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;4226:136;;;;;;:::i;:::-;;:::i;396:55:9:-;;437:14;396:55;;2688:82:3;;;2761:2;2770:36:10;;2758:2;2743:18;2688:82:3;2628:184:10;5328:245:0;;;;;;:::i;:::-;;:::i;2985:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;2854:136:0;;;;;;:::i;:::-;;:::i;1962:93:3:-;;;:::i;900:113:9:-;;;;;;:::i;:::-;;:::i;2187:49:0:-;;2232:4;2187:49;;3296:178:3;;;;;;:::i;:::-;;:::i;4642:138:0:-;;;;;;:::i;:::-;;:::i;3532:140:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;324:66:9;;364:26;324:66;;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:7;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;1098:238:9:-;364:26;2464:16:0;2475:4;2464:10;:16::i;:::-;1197:19:9::1;::::0;::::1;;1193:49;;;1225:17;;-1:-1:-1::0;;;1225:17:9::1;;;;;;;;;;;1193:49;1252:17;1258:2;1262:6;1252:5;:17::i;:::-;-1:-1:-1::0;;1279:19:9::1;:26:::0;;-1:-1:-1;;1279:26:9::1;1301:4;1279:26;::::0;;-1:-1:-1;1098:238:9:o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:6;4106:31:3;735:10:6;4122:7:3;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:3;;3979:186;-1:-1:-1;;;3979:186:3:o;4757:244::-;4844:4;735:10:6;4900:37:3;4916:4;735:10:6;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:6;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2854:136::-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;900:113:9:-;364:26;2464:16:0;2475:4;2464:10;:16::i;:::-;987:19:9::1;993:4;999:6;987:5;:19::i;3296:178:3:-:0;3365:4;735:10:6;3419:27:3;735:10:6;3436:2:3;3440:5;3419:9;:27::i;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3199:103::-:0;3265:30;3276:4;735:10:6;3265::0;:30::i;:::-;3199:103;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;3804:51:10;3777:18;;7553:32:3;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;8707:128::-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:3;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:3;;-1:-1:-1;;;;;4086:32:10;;10668:60:3;;;4068:51:10;4135:18;;;4128:34;;;4178:18;;;4171:34;;;4041:18;;10668:60:3;3866:345:10;10613:130:3;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:3;;5525:1;5498:30;;;3804:51:10;3777:18;;5498:30:3;3658:203:10;5453:86:3;-1:-1:-1;;;;;5552:16:3;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:3;;5620:1;5591:32;;;3804:51:10;3777:18;;5591:32:3;3658:203:10;5548:86:3;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:6;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6732:317;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:6;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;7965:206:3;-1:-1:-1;;;;;8035:21:3;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:3;;8106:1;8079:30;;;3804:51:10;3777:18;;8079:30:3;3658:203:10;8031:89:3;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;4408:32:10;;3565:47:0;;;4390:51:10;4457:18;;;4450:34;;;4363:18;;3565:47:0;4216:274:10;5989:1107:3;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;4086:32:10;;6367:50:3;;;4068:51:10;4135:18;;;4128:34;;;4178:18;;;4171:34;;;4041:18;;6367:50:3;3866:345:10;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;1633::10;;1621:2;1606:18;;1487:177;7064:25:3;;;;;;;;5989:1107;;;:::o;9682:432::-;-1:-1:-1;;;;;9794:19:3;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:3;;9865:1;9836:32;;;3804:51:10;3777:18;;9836:32:3;3658:203:10;9790:89:3;-1:-1:-1;;;;;9892:21:3;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:3;;9964:1;9936:31;;;3804:51:10;3777:18;;9936:31:3;3658:203:10;9888:90:3;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;1633:25:10;;1621:2;1606:18;;1487:177;10066:31:3;;;;;;;;9682:432;;;;:::o;14:286:10:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:10;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:10:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:10;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:254::-;743:6;751;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;843:29;862:9;843:29;:::i;:::-;833:39;919:2;904:18;;;;891:32;;-1:-1:-1;;;675:254:10:o;934:548::-;1046:4;1075:2;1104;1093:9;1086:21;1136:6;1130:13;1179:6;1174:2;1163:9;1159:18;1152:34;1204:1;1214:140;1228:6;1225:1;1222:13;1214:140;;;1323:14;;;1319:23;;1313:30;1289:17;;;1308:2;1285:26;1278:66;1243:10;;1214:140;;;1218:3;1403:1;1398:2;1389:6;1378:9;1374:22;1370:31;1363:42;1473:2;1466;1462:7;1457:2;1449:6;1445:15;1441:29;1430:9;1426:45;1422:54;1414:62;;;;934:548;;;;:::o;1669:328::-;1746:6;1754;1762;1815:2;1803:9;1794:7;1790:23;1786:32;1783:52;;;1831:1;1828;1821:12;1783:52;1854:29;1873:9;1854:29;:::i;:::-;1844:39;;1902:38;1936:2;1925:9;1921:18;1902:38;:::i;:::-;1892:48;;1987:2;1976:9;1972:18;1959:32;1949:42;;1669:328;;;;;:::o;2002:180::-;2061:6;2114:2;2102:9;2093:7;2089:23;2085:32;2082:52;;;2130:1;2127;2120:12;2082:52;-1:-1:-1;2153:23:10;;2002:180;-1:-1:-1;2002:180:10:o;2369:254::-;2437:6;2445;2498:2;2486:9;2477:7;2473:23;2469:32;2466:52;;;2514:1;2511;2504:12;2466:52;2550:9;2537:23;2527:33;;2579:38;2613:2;2602:9;2598:18;2579:38;:::i;:::-;2569:48;;2369:254;;;;;:::o;2817:186::-;2876:6;2929:2;2917:9;2908:7;2904:23;2900:32;2897:52;;;2945:1;2942;2935:12;2897:52;2968:29;2987:9;2968:29;:::i;3008:260::-;3076:6;3084;3137:2;3125:9;3116:7;3112:23;3108:32;3105:52;;;3153:1;3150;3143:12;3105:52;3176:29;3195:9;3176:29;:::i;:::-;3166:39;;3224:38;3258:2;3247:9;3243:18;3224:38;:::i;3273:380::-;3352:1;3348:12;;;;3395;;;3416:61;;3470:4;3462:6;3458:17;3448:27;;3416:61;3523:2;3515:6;3512:14;3492:18;3489:38;3486:161;;3569:10;3564:3;3560:20;3557:1;3550:31;3604:4;3601:1;3594:15;3632:4;3629:1;3622:15;3486:161;;3273:380;;;:::o;4495:222::-;4560:9;;;4581:10;;;4578:133;;;4633:10;4628:3;4624:20;4621:1;4614:31;4668:4;4665:1;4658:15;4696:4;4693:1;4686:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "617600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "237",
								"INITIAL_SUPPLY()": "305",
								"MULTISIG_ROLE()": "326",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24787",
								"balanceOf(address)": "2604",
								"burn(address,uint256)": "infinite",
								"controlledMint(address,uint256)": "infinite",
								"decimals()": "199",
								"getRoleAdmin(bytes32)": "2508",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2740",
								"initialMintComplete()": "2410",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "29069",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "447",
								"symbol()": "infinite",
								"totalSupply()": "2303",
								"transfer(address,uint256)": "51267",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 270,
									"end": 1338,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 831,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 831,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 831,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 831,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 831,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 495,
									"end": 831,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 495,
									"end": 831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 495,
									"end": 831,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 495,
									"end": 831,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "233630B6B2B137B937"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "232621"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 571,
									"end": 599,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 571,
									"end": 599,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 567,
									"end": 632,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 567,
									"end": 632,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C2BD5707"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 608,
									"end": 632,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 567,
									"end": 632,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 567,
									"end": 632,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 643,
									"end": 689,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 688,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 643,
									"end": 653,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 643,
									"end": 689,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 643,
									"end": 689,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 643,
									"end": 689,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 699,
									"end": 740,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 364,
									"end": 390,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB"
								},
								{
									"begin": 725,
									"end": 739,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 699,
									"end": 709,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 699,
									"end": 740,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 699,
									"end": 740,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 699,
									"end": 740,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 751,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 757,
									"end": 771,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 437,
									"end": 451,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 751,
									"end": 756,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 751,
									"end": 788,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 751,
									"end": 788,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 751,
									"end": 788,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 798,
									"end": 817,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 798,
									"end": 824,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 798,
									"end": 824,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 798,
									"end": 824,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 820,
									"end": 824,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 798,
									"end": 824,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 798,
									"end": 824,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 798,
									"end": 824,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3142,
									"end": 3193,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3651,
									"end": 3683,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3683,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3633,
									"end": 3684,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3700,
									"end": 3718,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3718,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3700,
									"end": 3718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3727,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3727,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3727,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3743,
									"end": 3761,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 3743,
									"end": 3761,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3743,
									"end": 3761,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3736,
									"end": 3770,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3736,
									"end": 3770,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3736,
									"end": 3770,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3624,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3606,
									"end": 3624,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 3431,
									"end": 3776,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3927,
									"end": 3952,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3927,
									"end": 3952,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3915,
									"end": 3917,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3900,
									"end": 3918,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3900,
									"end": 3918,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3781,
									"end": 3958,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2841,
									"end": 2867,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2239,
									"end": 2246,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2247,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2322,
									"end": 2348,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2388,
									"end": 2389,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2229,
									"end": 2232,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2489,
									"end": 2495,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2570,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2634,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2625,
									"end": 2649,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2621,
									"end": 2658,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2617,
									"end": 2659,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2602,
									"end": 2660,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2721,
									"end": 2722,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2705,
									"end": 2719,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2701,
									"end": 2723,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2695,
									"end": 2699,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2688,
									"end": 2724,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3204,
									"end": 3426,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3204,
									"end": 3426,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3269,
									"end": 3278,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3269,
									"end": 3278,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3269,
									"end": 3278,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3300,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3300,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3300,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3287,
									"end": 3420,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3287,
									"end": 3420,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3287,
									"end": 3420,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3342,
									"end": 3352,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 3337,
									"end": 3340,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 3333,
									"end": 3353,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3331,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3323,
									"end": 3354,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3377,
									"end": 3381,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 3374,
									"end": 3375,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3367,
									"end": 3382,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3405,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3402,
									"end": 3403,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3395,
									"end": 3410,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3781,
									"end": 3958,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 3781,
									"end": 3958,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 1338,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f04a006845b496f0ddc7ad22a12dfcbbf6e09cc719af9a5fc3a73d02ed6fda064736f6c63430008180033",
									".code": [
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "E328400C"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "2FF2E9DC"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "4A7137E"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "DB79417"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 270,
											"end": 1338,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1098,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1098,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 457,
											"end": 488,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 457,
											"end": 488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 457,
											"end": 488,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 457,
											"end": 488,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 457,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 457,
											"end": 488,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 457,
											"end": 488,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 457,
											"end": 488,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 457,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 457,
											"end": 488,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1487,
											"end": 1664,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 451,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 396,
											"end": 451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 396,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 437,
											"end": 451,
											"name": "PUSH",
											"source": 9,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 396,
											"end": 451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 396,
											"end": 451,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2770,
											"end": 2806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2760,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2628,
											"end": 2812,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 900,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 900,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 324,
											"end": 390,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 324,
											"end": 390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 324,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 364,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "A5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB"
										},
										{
											"begin": 324,
											"end": 390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 324,
											"end": 390,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1098,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 364,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "A5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1197,
											"end": 1216,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1197,
											"end": 1216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1242,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1193,
											"end": 1242,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AF79B437"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1242,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1193,
											"end": 1242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1258,
											"end": 1260,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1268,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1252,
											"end": 1269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1252,
											"end": 1269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1305,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1305,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 900,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 364,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "A5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 993,
											"end": 997,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1005,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 987,
											"end": 992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 987,
											"end": 1006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4119,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3866,
											"end": 4211,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3658,
											"end": 3861,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3658,
											"end": 3861,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3658,
											"end": 3861,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4408,
											"end": 4440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4440,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4390,
											"end": 4441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4484,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4363,
											"end": 4381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4216,
											"end": 4490,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4119,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3866,
											"end": 4211,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1664,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3658,
											"end": 3861,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3777,
											"end": 3795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3658,
											"end": 3861,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1664,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 497,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 675,
											"end": 929,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 675,
											"end": 929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 783,
											"end": 790,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 779,
											"end": 802,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 775,
											"end": 807,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 772,
											"end": 824,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 772,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 772,
											"end": 824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 820,
											"end": 821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 810,
											"end": 822,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 772,
											"end": 824,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 772,
											"end": 824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 843,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 843,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 843,
											"end": 872,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 843,
											"end": 872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 904,
											"end": 922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 904,
											"end": 922,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 904,
											"end": 922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 891,
											"end": 923,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 891,
											"end": 923,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 675,
											"end": 929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1482,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1186,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1228,
											"end": 1234,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1235,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1337,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1342,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1343,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1289,
											"end": 1306,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1289,
											"end": 1306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1289,
											"end": 1306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1278,
											"end": 1344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1214,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1405,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1468,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1462,
											"end": 1469,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1470,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1482,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 934,
											"end": 1482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1997,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1669,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1813,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1786,
											"end": 1818,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 1833,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1783,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1873,
											"end": 1882,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1854,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1883,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1854,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1883,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1936,
											"end": 1938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1934,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1902,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1940,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1902,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1892,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1991,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1997,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1997,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1997,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2100,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2112,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2117,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2132,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2623,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2369,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2498,
											"end": 2500,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2496,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2501,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2518,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2466,
											"end": 2518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2466,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2560,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2560,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2579,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2579,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2579,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2579,
											"end": 2617,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2579,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 3003,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2817,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2917,
											"end": 2926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2900,
											"end": 2932,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2949,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2897,
											"end": 2949,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2943,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2935,
											"end": 2947,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2949,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2897,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2987,
											"end": 2996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2968,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3268,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3008,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3123,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3135,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3140,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3157,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3105,
											"end": 3157,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3151,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3155,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3157,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3105,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3176,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3205,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3258,
											"end": 3260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3224,
											"end": 3262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3653,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 3273,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3416,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3526,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3527,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3486,
											"end": 3647,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3560,
											"end": 3580,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3604,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3601,
											"end": 3602,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3594,
											"end": 3609,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 3636,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3637,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3647,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3486,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4495,
											"end": 4717,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4495,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4591,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4711,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4578,
											"end": 4711,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4643,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4624,
											"end": 4644,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4621,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4665,
											"end": 4666,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4658,
											"end": 4673,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4700,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4693,
											"end": 4694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4701,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/FlameBornToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MULTISIG_ROLE()": "e328400c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"controlledMint(address,uint256)": "04a7137e",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialMintComplete()": "0db79417",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"multisigWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMultisigAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintingDisabled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTISIG_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"controlledMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialMintComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Allows multisig to burn tokens from an address\"},\"controlledMint(address,uint256)\":{\"notice\":\"Optional: Controlled mint interface, if future minting allowed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlameBornToken.sol\":\"FlamebornToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x20de92b74687fac553a39e6f3677c42494533dd5548ad53118c76c92cad6d24d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893d3d0226218c89e1974f4011cf034f080a6186951b1c6f9976a33568debc59\",\"dweb:/ipfs/QmcAB7UuZjcTMVrUbdTTniQX9FbJ1ubCa4QjoWbAZQc6KP\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1424722fbd4bec7f831f329de06ba81a4cf5247986bc42abce8d7c94a6f1e797\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbe24fd7e0e9dcbe73b3afb695d9eb0aa6ba3b8952c2548cbbd6714836218772\",\"dweb:/ipfs/QmP8G5nwGBfW4yLavqqt97AMnUG1vFzsbPCQJ2HZ8jGB4A\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x201000a1a5d73b5b76feb8918817f48c664f3300da80571c31e660db048de400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a82db9b877afa567314c93e2cf7079fadd6b4e9c7ec65b894ee3f373dbebf13\",\"dweb:/ipfs/Qmf7LCgbN1PzFdpdhyv5AGfzAWg9h12RKv2mD52YvTTsQu\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xbb0875e8edc5f44bdb7ce34bd395ac5cbeffbcf784afebdfe80e090c2a1b01e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb869b59e18649df21fc11961d3adbe27ed0507d0cc0f15bc0000300833c274c\",\"dweb:/ipfs/QmSUASB1iw59KuXjqbGHw89Q7Yrg33BQ2pZVTYra1FDTgG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8c7d0d3ac7052d0f8f8d9d7fe006cde620b76107a0d911b23d85419416dc02ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb27991ae3a692e616486604cbc5dc745d10a7c57e08b54d98694d608c6674e5\",\"dweb:/ipfs/QmbgFvuuQQzat3C82dtkoNwZKZSHBijbzCpdKQXM7AHdZJ\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6d5202b198d9a3451ee70f06e579ffa5197ef3984f13f67676c64bc52730a977\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51701f325b75748e73e1c24f3961960b80f7dfc59abc7d5aa463bd01b7776450\",\"dweb:/ipfs/QmectxGDbsEfD8uCnSW4oHH2YEiRetvZPxepXQrJyT12JN\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x94b4f2ccfa80409154abeac7511daa9e229cfa3cf4e8f1b3331be1290e45d0c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e641814fb7ecedead8f59862d6336f259828fb452e1decfdd769aab60aeacf\",\"dweb:/ipfs/Qmae4ec2jLdCe94bkSxU8RhRducPyQAHcmB3GjsHjKF1Zg\"]},\"contracts/FlameBornToken.sol\":{\"keccak256\":\"0x060180c84dc9c8f22c62335b2ae70af95ec56ea948829103fb286c325c4f4ce0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd8e37a5778e624351a60e05c9c87645bdbef6b2e5d59a6d69c8f3be2c9b2ebc\",\"dweb:/ipfs/QmTZJTsEk7JbaKBpQMTyLhKFP8fHdMXf8VENCXGD5ub1UY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "contracts/FlameBornToken.sol:FlamebornToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "contracts/FlameBornToken.sol:FlamebornToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "contracts/FlameBornToken.sol:FlamebornToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/FlameBornToken.sol:FlamebornToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/FlameBornToken.sol:FlamebornToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/FlameBornToken.sol:FlamebornToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1228,
								"contract": "contracts/FlameBornToken.sol:FlamebornToken",
								"label": "initialMintComplete",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/FlameBornToken.sol:FlamebornToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/FlameBornToken.sol:FlamebornToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(address,uint256)": {
								"notice": "Allows multisig to burn tokens from an address"
							},
							"controlledMint(address,uint256)": {
								"notice": "Optional: Controlled mint interface, if future minting allowed"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1165,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1189,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1135,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1165,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1133:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1142:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "1150:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 1030,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 1030,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 1030,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 1030,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2891:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "2908:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "2901:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:3"
									},
									"scope": 1030,
									"src": "2830:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3059:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3076:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3069:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3050:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:3"
									},
									"scope": 1030,
									"src": "2985:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3371:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3381:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3397:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3456:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3314:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3365:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:3"
									},
									"scope": 1030,
									"src": "3296:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3621:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3638:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3631:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3551:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:3"
									},
									"scope": 1030,
									"src": "3532:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4058:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4068:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4084:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4122:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4147:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4052:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:3"
									},
									"scope": 1030,
									"src": "3979:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4850:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "4860:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4900:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4957:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4963:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4967:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4947:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "4983:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:3"
									},
									"scope": 1030,
									"src": "4757:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5443:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5457:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5453:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5477:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5498:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5491:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5552:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5548:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5570:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5591:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5584:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5651:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5657:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5643:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5419:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:3"
									},
									"scope": 1030,
									"src": "5374:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6064:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6078:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6252:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6266:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6288:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6298:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6321:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6335:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6317:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6342:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6392:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6398:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6411:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6367:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6552:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6570:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6584:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6074:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6098:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6214:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6230:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6628:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "6843:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7002:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7012:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7019:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6624:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6646:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "6791:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "6807:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7059:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6006:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:3"
									},
									"scope": 1030,
									"src": "5989:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7495:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7505:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7532:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7553:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7546:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7625:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7634:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:3"
									},
									"scope": 1030,
									"src": "7439:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8021:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8031:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8058:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8079:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8072:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8129:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:3"
									},
									"scope": 1030,
									"src": "7965:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "8781:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "8800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "8807:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "8791:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8740:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8757:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:3"
									},
									"scope": 1030,
									"src": "8707:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "9780:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "9794:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "9790:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "9815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "9829:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9892:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "9888:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "9915:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9936:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "9929:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9987:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "9999:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10006:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10036:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10032:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10047:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10075:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10082:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10091:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10066:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10061:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9700:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9715:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9747:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:3"
									},
									"scope": 1030,
									"src": "9682:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10485:387:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10495:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10532:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10557:309:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10599:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10617:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10636:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10613:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10643:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10695:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10704:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10722:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10668:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "10793:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "10800:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10809:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "10784:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:3"
									},
									"scope": 1030,
									"src": "10396:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1106:9768:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:10770:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1108,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1108,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1108,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1108,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1108,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1108,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1109,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "306:6:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1134,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1134,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1130,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1134,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1144,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1164,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1164,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1164,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1188
						],
						"IERC165": [
							1200
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1201,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1200,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "IERC165",
										"nameLocations": [
											"688:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "688:7:7"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1200
							],
							"name": "ERC165",
							"nameLocation": "678:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "845:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "862:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "882:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1180,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1200",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1185,
												"nodeType": "Return",
												"src": "855:47:7"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "790:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "839:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:7"
									},
									"scope": 1188,
									"src": "763:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1189,
							"src": "660:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1200
						]
					},
					"id": 1201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 1200,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1201,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"contracts/FlameBornToken.sol": {
				"ast": {
					"absolutePath": "contracts/FlameBornToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"ERC20": [
							1030
						],
						"FlamebornToken": [
							1311
						],
						"InvalidMultisigAddress": [
							1208
						],
						"MintingDisabled": [
							1210
						]
					},
					"id": 1312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 296,
							"src": "58:81:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1203,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "67:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1206,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 1031,
							"src": "140:70:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1205,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "149:5:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"errorSelector": "c2bd5707",
							"id": 1208,
							"name": "InvalidMultisigAddress",
							"nameLocation": "218:22:9",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1207,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "240:2:9"
							},
							"src": "212:31:9"
						},
						{
							"errorSelector": "af79b437",
							"id": 1210,
							"name": "MintingDisabled",
							"nameLocation": "250:15:9",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1209,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "265:2:9"
							},
							"src": "244:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1211,
										"name": "ERC20",
										"nameLocations": [
											"297:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "297:5:9"
									},
									"id": 1212,
									"nodeType": "InheritanceSpecifier",
									"src": "297:5:9"
								},
								{
									"baseName": {
										"id": 1213,
										"name": "AccessControl",
										"nameLocations": [
											"304:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "304:13:9"
									},
									"id": 1214,
									"nodeType": "InheritanceSpecifier",
									"src": "304:13:9"
								}
							],
							"canonicalName": "FlamebornToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1311,
							"linearizedBaseContracts": [
								1311,
								295,
								1188,
								1200,
								378,
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "FlamebornToken",
							"nameLocation": "279:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e328400c",
									"id": 1219,
									"mutability": "constant",
									"name": "MULTISIG_ROLE",
									"nameLocation": "348:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "324:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1215,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d554c54495349475f524f4c45",
												"id": 1217,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "374:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab",
													"typeString": "literal_string \"MULTISIG_ROLE\""
												},
												"value": "MULTISIG_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab",
													"typeString": "literal_string \"MULTISIG_ROLE\""
												}
											],
											"id": 1216,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "364:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "364:26:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1226,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "420:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "396:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "396:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 1225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1221,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "437:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1224,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1222,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "443:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1223,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "449:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "443:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "437:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0db79417",
									"id": 1228,
									"mutability": "mutable",
									"name": "initialMintComplete",
									"nameLocation": "469:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "457:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1227,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "457:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "557:274:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1237,
														"name": "multisigWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "571:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "597:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "589:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "589:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "589:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "571:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "567:65:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1243,
															"name": "InvalidMultisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "608:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "608:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1245,
													"nodeType": "RevertStatement",
													"src": "601:31:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "654:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1249,
															"name": "multisigWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "674:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1247,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "643:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "643:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1253,
															"name": "MULTISIG_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "710:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1254,
															"name": "multisigWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "725:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1252,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "699:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "699:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "699:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1258,
															"name": "multisigWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "757:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "773:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "751:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "751:37:9"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "initialMintComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "798:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "820:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "798:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "798:26:9"
											}
										]
									},
									"id": 1267,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "466c616d65626f726e",
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "537:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_be2f90afef796eb576028337b5a598283c68088a0af4d646024500c17c05c115",
														"typeString": "literal_string \"Flameborn\""
													},
													"value": "Flameborn"
												},
												{
													"hexValue": "464c42",
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "550:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bb0dc3331b723f4dc9550898b9abb46f1376afb2911e6b6f3ed621013a62fa44",
														"typeString": "literal_string \"FLB\""
													},
													"value": "FLB"
												}
											],
											"id": 1235,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1232,
												"name": "ERC20",
												"nameLocations": [
													"531:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "531:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "531:25:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "multisigWallet",
												"nameLocation": "515:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "507:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:24:9"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:0:9"
									},
									"scope": 1311,
									"src": "495:336:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "977:36:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1279,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "993:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "999:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1278,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "987:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "987:19:9"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "837:58:9",
										"text": "@notice Allows multisig to burn tokens from an address"
									},
									"functionSelector": "9dc29fac",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1275,
													"name": "MULTISIG_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1219,
													"src": "962:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1274,
												"name": "onlyRole",
												"nameLocations": [
													"953:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "953:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "953:23:9"
										}
									],
									"name": "burn",
									"nameLocation": "909:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "922:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "914:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "936:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "928:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:30:9"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "977:0:9"
									},
									"scope": 1311,
									"src": "900:113:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "1183:153:9",
										"statements": [
											{
												"condition": {
													"id": 1295,
													"name": "initialMintComplete",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1228,
													"src": "1197:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1299,
												"nodeType": "IfStatement",
												"src": "1193:49:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1296,
															"name": "MintingDisabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "1225:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1225:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1298,
													"nodeType": "RevertStatement",
													"src": "1218:24:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "1258:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "1262:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1300,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1252:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1252:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "1252:17:9"
											},
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1305,
														"name": "initialMintComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "1279:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1301:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1279:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "1279:26:9"
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "1019:74:9",
										"text": "@notice Optional: Controlled mint interface, if future minting allowed"
									},
									"functionSelector": "04a7137e",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1292,
													"name": "MULTISIG_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1219,
													"src": "1168:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1291,
												"name": "onlyRole",
												"nameLocations": [
													"1159:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1159:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1159:23:9"
										}
									],
									"name": "controlledMint",
									"nameLocation": "1107:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1130:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1122:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1142:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1134:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:28:9"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1183:0:9"
									},
									"scope": 1311,
									"src": "1098:238:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1312,
							"src": "270:1068:9",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1208,
								1210
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051
							]
						}
					],
					"src": "32:1307:9"
				},
				"id": 9
			}
		}
	}
}