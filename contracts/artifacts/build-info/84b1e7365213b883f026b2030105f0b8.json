{
	"id": "84b1e7365213b883f026b2030105f0b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FlameBorn Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\";\n\ncontract FlamebornToken is ERC20, AccessControl {\n    bytes32 public constant MULTISIG_ROLE = keccak256(\"MULTISIG_ROLE\");\n    bool private _initialMintComplete;\n\n    constructor(address multisigWallet) ERC20(\"Flameborn\", \"FLB\") {\n        require(multisigWallet != address(0), \"Invalid multisig address\");\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, multisigWallet);\n        _grantRole(MULTISIG_ROLE, multisigWallet);\n        \n        _mint(multisigWallet, 100 * 10**decimals());\n        _initialMintComplete = true;\n    }\n\n    // Fixed parameters with names\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(!_initialMintComplete, \"Minting disabled permanently\");\n        super._mint(account, amount);\n    }\n\n    function burn(address from, uint256 amount) external onlyRole(MULTISIG_ROLE) {\n        _burn(from, amount);\n    }\n}"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.9.3/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts@4.9.3/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts@4.9.3/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts@4.9.3/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts@4.9.3/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_24:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_25:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_29:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_30:\n    /* \"#utility.yul\":1313:1374   */\n  tag_31\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_33\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1942   */\ntag_12:\n    /* \"#utility.yul\":1641:1642   */\n  0x01\n    /* \"#utility.yul\":1637:1649   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1684:1696   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1705:1766   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1759:1763   */\n  0x7f\n    /* \"#utility.yul\":1751:1757   */\n  dup3\n    /* \"#utility.yul\":1747:1764   */\n  and\n    /* \"#utility.yul\":1737:1764   */\n  swap2\n  pop\n    /* \"#utility.yul\":1705:1766   */\ntag_35:\n    /* \"#utility.yul\":1812:1814   */\n  0x20\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1801:1815   */\n  lt\n    /* \"#utility.yul\":1781:1799   */\n  dup2\n    /* \"#utility.yul\":1778:1816   */\n  sub\n    /* \"#utility.yul\":1775:1936   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1858:1868   */\n  0x4e487b71\n    /* \"#utility.yul\":1853:1856   */\n  0xe0\n    /* \"#utility.yul\":1849:1869   */\n  shl\n    /* \"#utility.yul\":1846:1847   */\n  0x00\n    /* \"#utility.yul\":1839:1870   */\n  mstore\n    /* \"#utility.yul\":1893:1897   */\n  0x22\n    /* \"#utility.yul\":1890:1891   */\n  0x04\n    /* \"#utility.yul\":1883:1898   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x24\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1911:1926   */\n  revert\n    /* \"#utility.yul\":1775:1936   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1562:1942   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2591   */\ntag_14:\n    /* \"#utility.yul\":2175:2177   */\n  0x1f\n    /* \"#utility.yul\":2170:2173   */\n  dup3\n    /* \"#utility.yul\":2167:2178   */\n  gt\n    /* \"#utility.yul\":2164:2585   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2211:2216   */\n  dup1\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2217   */\n  mstore\n    /* \"#utility.yul\":2255:2259   */\n  0x20\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2242:2260   */\n  keccak256\n    /* \"#utility.yul\":2325:2327   */\n  0x1f\n    /* \"#utility.yul\":2313:2323   */\n  dup5\n    /* \"#utility.yul\":2309:2328   */\n  add\n    /* \"#utility.yul\":2306:2307   */\n  0x05\n    /* \"#utility.yul\":2302:2329   */\n  shr\n    /* \"#utility.yul\":2296:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2330   */\n  add\n    /* \"#utility.yul\":2361:2365   */\n  0x20\n    /* \"#utility.yul\":2349:2359   */\n  dup6\n    /* \"#utility.yul\":2346:2366   */\n  lt\n    /* \"#utility.yul\":2343:2390   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2384:2388   */\n  dup1\n    /* \"#utility.yul\":2343:2390   */\ntag_40:\n    /* \"#utility.yul\":2439:2441   */\n  0x1f\n    /* \"#utility.yul\":2434:2437   */\n  dup5\n    /* \"#utility.yul\":2430:2442   */\n  add\n    /* \"#utility.yul\":2427:2428   */\n  0x05\n    /* \"#utility.yul\":2423:2443   */\n  shr\n    /* \"#utility.yul\":2417:2421   */\n  dup3\n    /* \"#utility.yul\":2413:2444   */\n  add\n    /* \"#utility.yul\":2403:2444   */\n  swap2\n  pop\n    /* \"#utility.yul\":2494:2575   */\ntag_41:\n    /* \"#utility.yul\":2512:2514   */\n  dup2\n    /* \"#utility.yul\":2505:2510   */\n  dup2\n    /* \"#utility.yul\":2502:2515   */\n  lt\n    /* \"#utility.yul\":2494:2575   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2571:2572   */\n  0x00\n    /* \"#utility.yul\":2557:2573   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2538:2539   */\n  0x01\n    /* \"#utility.yul\":2527:2540   */\n  add\n    /* \"#utility.yul\":2494:2575   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2498:2501   */\n  pop\n  pop\n    /* \"#utility.yul\":2164:2585   */\ntag_39:\n    /* \"#utility.yul\":2073:2591   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:4112   */\ntag_7:\n    /* \"#utility.yul\":2887:2897   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2909:2939   */\n  dup2\n  gt\n    /* \"#utility.yul\":2906:2962   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2942:2960   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2971:3068   */\n  tag_48\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3021:3059   */\n  tag_49\n    /* \"#utility.yul\":3053:3057   */\n  dup5\n    /* \"#utility.yul\":3047:3058   */\n  sload\n    /* \"#utility.yul\":3021:3059   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3015:3019   */\n  dup5\n    /* \"#utility.yul\":2971:3068   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3123:3127   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3180:3182   */\n  0x1f\n    /* \"#utility.yul\":3169:3183   */\n  dup4\n  gt\n    /* \"#utility.yul\":3197:3198   */\n  0x01\n    /* \"#utility.yul\":3192:3855   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup5\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2724:2725   */\n  0x03\n    /* \"#utility.yul\":2720:2731   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2716:2740   */\n  shr\n    /* \"#utility.yul\":2712:2741   */\n  not\n    /* \"#utility.yul\":2702:2742   */\n  and\n    /* \"#utility.yul\":2748:2749   */\n  0x01\n    /* \"#utility.yul\":2744:2755   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2699:2756   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3162:4106   */\n  jump(tag_50)\n    /* \"#utility.yul\":3192:3855   */\ntag_51:\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2027   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x20\n    /* \"#utility.yul\":2044:2062   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3228:3248   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3346:3582   */\ntag_55:\n    /* \"#utility.yul\":3360:3367   */\n  dup3\n    /* \"#utility.yul\":3357:3358   */\n  dup2\n    /* \"#utility.yul\":3354:3368   */\n  lt\n    /* \"#utility.yul\":3346:3582   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3449:3468   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3443:3469   */\n  mload\n    /* \"#utility.yul\":3428:3470   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3541:3568   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3509:3510   */\n  0x01\n    /* \"#utility.yul\":3497:3511   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3376:3395   */\n  dup5\n  add\n    /* \"#utility.yul\":3346:3582   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3350:3353   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup6\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_58:\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3839   */\n  dup5\n    /* \"#utility.yul\":3830:3831   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3816:3820   */\n  dup6\n    /* \"#utility.yul\":3809:3845   */\n  sstore\n    /* \"#utility.yul\":3162:4106   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2767:4112   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa26469706673582212207dee51ec9c945139e4af90ae262f4b329e03689bd97403d8fd7e828ceb6c782564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_433": {
									"entryPoint": null,
									"id": 433,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4114:12",
										"nodeType": "YulBlock",
										"src": "0:4114:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:12",
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:12",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:12",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:12",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nativeSrc": "66:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nativeSrc": "56:31:12",
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nativeSrc": "56:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nativeSrc": "96:15:12",
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nativeSrc": "96:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:12",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:15:12",
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nativeSrc": "120:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nativeSrc": "210:780:12",
													"nodeType": "YulBlock",
													"src": "210:780:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:12",
																"nodeType": "YulBlock",
																"src": "259:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "268:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:12",
																					"nodeType": "YulLiteral",
																					"src": "271:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:12"
																			},
																			"nativeSrc": "261:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:12"
																		},
																		"nativeSrc": "261:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:12",
																						"nodeType": "YulLiteral",
																						"src": "246:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:12"
																				},
																				"nativeSrc": "234:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:12"
																		},
																		"nativeSrc": "230:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:12"
																},
																"nativeSrc": "223:35:12",
																"nodeType": "YulFunctionCall",
																"src": "223:35:12"
															},
															"nativeSrc": "220:55:12",
															"nodeType": "YulIf",
															"src": "220:55:12"
														},
														{
															"nativeSrc": "284:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:12"
																},
																"nativeSrc": "294:13:12",
																"nodeType": "YulFunctionCall",
																"src": "294:13:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:12",
																	"nodeType": "YulTypedName",
																	"src": "288:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:12",
																				"nodeType": "YulLiteral",
																				"src": "334:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:12",
																				"nodeType": "YulLiteral",
																				"src": "338:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:12"
																		},
																		"nativeSrc": "330:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:12",
																		"nodeType": "YulLiteral",
																		"src": "342:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:12"
																},
																"nativeSrc": "326:18:12",
																"nodeType": "YulFunctionCall",
																"src": "326:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:12",
																	"nodeType": "YulTypedName",
																	"src": "320:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:12",
																"nodeType": "YulBlock",
																"src": "367:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:12"
																			},
																			"nativeSrc": "369:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:12"
																		},
																		"nativeSrc": "369:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:12"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:12"
																},
																"nativeSrc": "356:10:12",
																"nodeType": "YulFunctionCall",
																"src": "356:10:12"
															},
															"nativeSrc": "353:36:12",
															"nodeType": "YulIf",
															"src": "353:36:12"
														},
														{
															"nativeSrc": "398:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:12",
																		"nodeType": "YulLiteral",
																		"src": "412:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:12"
																},
																"nativeSrc": "408:7:12",
																"nodeType": "YulFunctionCall",
																"src": "408:7:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:12",
																	"nodeType": "YulTypedName",
																	"src": "402:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:12",
																		"nodeType": "YulLiteral",
																		"src": "444:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:12"
																},
																"nativeSrc": "438:9:12",
																"nodeType": "YulFunctionCall",
																"src": "438:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:12",
																	"nodeType": "YulTypedName",
																	"src": "428:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:12",
																										"nodeType": "YulLiteral",
																										"src": "506:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:12"
																								},
																								"nativeSrc": "498:13:12",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:12"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:12"
																						},
																						"nativeSrc": "494:22:12",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:12",
																						"nodeType": "YulLiteral",
																						"src": "518:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:12"
																				},
																				"nativeSrc": "490:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:12"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:12"
																		},
																		"nativeSrc": "486:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:12"
																},
																"nativeSrc": "474:53:12",
																"nodeType": "YulFunctionCall",
																"src": "474:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:12",
																	"nodeType": "YulTypedName",
																	"src": "460:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:12",
																"nodeType": "YulBlock",
																"src": "586:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:12"
																			},
																			"nativeSrc": "588:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:12"
																		},
																		"nativeSrc": "588:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:12"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:12"
																		},
																		"nativeSrc": "542:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:12"
																		},
																		"nativeSrc": "562:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:12"
																},
																"nativeSrc": "539:46:12",
																"nodeType": "YulFunctionCall",
																"src": "539:46:12"
															},
															"nativeSrc": "536:72:12",
															"nodeType": "YulIf",
															"src": "536:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:12",
																		"nodeType": "YulLiteral",
																		"src": "624:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:12"
																},
																"nativeSrc": "617:22:12",
																"nodeType": "YulFunctionCall",
																"src": "617:22:12"
															},
															"nativeSrc": "617:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:12"
																},
																"nativeSrc": "648:18:12",
																"nodeType": "YulFunctionCall",
																"src": "648:18:12"
															},
															"nativeSrc": "648:18:12",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:12"
														},
														{
															"nativeSrc": "675:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:12",
																"nodeType": "YulLiteral",
																"src": "685:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:12",
																	"nodeType": "YulTypedName",
																	"src": "679:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:12",
																"nodeType": "YulBlock",
																"src": "737:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:12",
																					"nodeType": "YulLiteral",
																					"src": "746:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:12",
																					"nodeType": "YulLiteral",
																					"src": "749:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:12"
																			},
																			"nativeSrc": "739:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:12"
																		},
																		"nativeSrc": "739:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:12"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:12"
																				},
																				"nativeSrc": "708:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:12",
																				"nodeType": "YulLiteral",
																				"src": "725:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:12"
																		},
																		"nativeSrc": "704:26:12",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:12"
																},
																"nativeSrc": "701:35:12",
																"nodeType": "YulFunctionCall",
																"src": "701:35:12"
															},
															"nativeSrc": "698:55:12",
															"nodeType": "YulIf",
															"src": "698:55:12"
														},
														{
															"nativeSrc": "762:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:12",
																"nodeType": "YulLiteral",
																"src": "771:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:12",
																	"nodeType": "YulTypedName",
																	"src": "766:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:12",
																"nodeType": "YulBlock",
																"src": "827:87:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:12"
																							},
																							"nativeSrc": "852:14:12",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:12"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:12",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:12"
																					},
																					"nativeSrc": "848:23:12",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:12"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:12",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:12"
																									},
																									"nativeSrc": "883:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:12"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:12",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:12"
																							},
																							"nativeSrc": "879:23:12",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:12"
																					},
																					"nativeSrc": "873:30:12",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:12"
																			},
																			"nativeSrc": "841:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:12"
																		},
																		"nativeSrc": "841:63:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:12"
																},
																"nativeSrc": "789:9:12",
																"nodeType": "YulFunctionCall",
																"src": "789:9:12"
															},
															"nativeSrc": "781:133:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:12",
																"nodeType": "YulBlock",
																"src": "799:19:12",
																"statements": [
																	{
																		"nativeSrc": "801:15:12",
																		"nodeType": "YulAssignment",
																		"src": "801:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:12"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:12"
																			},
																			"nativeSrc": "806:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:12",
																"nodeType": "YulBlock",
																"src": "785:3:12",
																"statements": []
															},
															"src": "781:133:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:12"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:12"
																				},
																				"nativeSrc": "934:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:12",
																				"nodeType": "YulLiteral",
																				"src": "951:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:12"
																		},
																		"nativeSrc": "930:26:12",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:12",
																		"nodeType": "YulLiteral",
																		"src": "958:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:12"
																},
																"nativeSrc": "923:37:12",
																"nodeType": "YulFunctionCall",
																"src": "923:37:12"
															},
															"nativeSrc": "923:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:12"
														},
														{
															"nativeSrc": "969:15:12",
															"nodeType": "YulAssignment",
															"src": "969:15:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:12",
																"nodeType": "YulIdentifier",
																"src": "978:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:12",
														"nodeType": "YulTypedName",
														"src": "184:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:12",
														"nodeType": "YulTypedName",
														"src": "192:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:12",
														"nodeType": "YulTypedName",
														"src": "200:5:12",
														"type": ""
													}
												],
												"src": "146:844:12"
											},
											{
												"body": {
													"nativeSrc": "1113:444:12",
													"nodeType": "YulBlock",
													"src": "1113:444:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:12",
																"nodeType": "YulBlock",
																"src": "1159:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:12"
																			},
																			"nativeSrc": "1161:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:12"
																		},
																		"nativeSrc": "1161:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:12"
																		},
																		"nativeSrc": "1130:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:12"
																},
																"nativeSrc": "1126:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:12"
															},
															"nativeSrc": "1123:52:12",
															"nodeType": "YulIf",
															"src": "1123:52:12"
														},
														{
															"nativeSrc": "1184:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:12"
																},
																"nativeSrc": "1198:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:12"
																		},
																		"nativeSrc": "1237:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:12"
																},
																"nativeSrc": "1233:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:12",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:12",
																"nodeType": "YulBlock",
																"src": "1278:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:12"
																			},
																			"nativeSrc": "1280:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:12"
																		},
																		"nativeSrc": "1280:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:12"
																},
																"nativeSrc": "1263:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:12"
															},
															"nativeSrc": "1260:34:12",
															"nodeType": "YulIf",
															"src": "1260:34:12"
														},
														{
															"nativeSrc": "1303:71:12",
															"nodeType": "YulAssignment",
															"src": "1303:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:12"
																		},
																		"nativeSrc": "1342:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:12"
																},
																"nativeSrc": "1313:61:12",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:12"
																}
															]
														},
														{
															"nativeSrc": "1383:41:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:12"
																		},
																		"nativeSrc": "1405:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:12"
																},
																"nativeSrc": "1399:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:12",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:12",
																"nodeType": "YulBlock",
																"src": "1453:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:12"
																			},
																			"nativeSrc": "1455:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:12"
																		},
																		"nativeSrc": "1455:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:12"
																},
																"nativeSrc": "1436:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:12"
															},
															"nativeSrc": "1433:36:12",
															"nodeType": "YulIf",
															"src": "1433:36:12"
														},
														{
															"nativeSrc": "1478:73:12",
															"nodeType": "YulAssignment",
															"src": "1478:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:12"
																		},
																		"nativeSrc": "1517:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:12"
																},
																"nativeSrc": "1488:63:12",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:12",
														"nodeType": "YulTypedName",
														"src": "1071:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:12",
														"nodeType": "YulTypedName",
														"src": "1082:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:12",
														"nodeType": "YulTypedName",
														"src": "1094:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:12",
														"nodeType": "YulTypedName",
														"src": "1102:6:12",
														"type": ""
													}
												],
												"src": "995:562:12"
											},
											{
												"body": {
													"nativeSrc": "1617:325:12",
													"nodeType": "YulBlock",
													"src": "1617:325:12",
													"statements": [
														{
															"nativeSrc": "1627:22:12",
															"nodeType": "YulAssignment",
															"src": "1627:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1644:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1644:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1637:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:12"
																},
																"nativeSrc": "1637:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1637:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1627:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:12"
																}
															]
														},
														{
															"nativeSrc": "1658:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1658:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1688:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1688:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1684:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:12"
																},
																"nativeSrc": "1684:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1662:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1662:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1735:31:12",
																"nodeType": "YulBlock",
																"src": "1735:31:12",
																"statements": [
																	{
																		"nativeSrc": "1737:27:12",
																		"nodeType": "YulAssignment",
																		"src": "1737:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1751:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1751:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1759:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1747:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1747:3:12"
																			},
																			"nativeSrc": "1747:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1747:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1715:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1715:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1708:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:12"
																},
																"nativeSrc": "1708:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1708:26:12"
															},
															"nativeSrc": "1705:61:12",
															"nodeType": "YulIf",
															"src": "1705:61:12"
														},
														{
															"body": {
																"nativeSrc": "1825:111:12",
																"nodeType": "YulBlock",
																"src": "1825:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1853:3:12",
																							"nodeType": "YulLiteral",
																							"src": "1853:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1858:10:12",
																							"nodeType": "YulLiteral",
																							"src": "1858:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1849:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:12"
																					},
																					"nativeSrc": "1849:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1849:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1839:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			},
																			"nativeSrc": "1839:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:31:12"
																		},
																		"nativeSrc": "1839:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1893:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1883:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:12"
																			},
																			"nativeSrc": "1883:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:15:12"
																		},
																		"nativeSrc": "1883:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1918:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1921:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1921:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1911:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:12"
																			},
																			"nativeSrc": "1911:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1911:15:12"
																		},
																		"nativeSrc": "1911:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1781:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1781:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1804:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1801:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:12"
																		},
																		"nativeSrc": "1801:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1778:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:12"
																},
																"nativeSrc": "1778:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1778:38:12"
															},
															"nativeSrc": "1775:161:12",
															"nodeType": "YulIf",
															"src": "1775:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1562:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1597:4:12",
														"nodeType": "YulTypedName",
														"src": "1597:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:12",
														"nodeType": "YulTypedName",
														"src": "1606:6:12",
														"type": ""
													}
												],
												"src": "1562:380:12"
											},
											{
												"body": {
													"nativeSrc": "2003:65:12",
													"nodeType": "YulBlock",
													"src": "2003:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2023:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:12"
																},
																"nativeSrc": "2013:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2013:14:12"
															},
															"nativeSrc": "2013:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "2013:14:12"
														},
														{
															"nativeSrc": "2036:26:12",
															"nodeType": "YulAssignment",
															"src": "2036:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2057:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2044:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2044:9:12"
																},
																"nativeSrc": "2044:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2044:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2036:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1947:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1986:3:12",
														"nodeType": "YulTypedName",
														"src": "1986:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1994:4:12",
														"nodeType": "YulTypedName",
														"src": "1994:4:12",
														"type": ""
													}
												],
												"src": "1947:121:12"
											},
											{
												"body": {
													"nativeSrc": "2154:437:12",
													"nodeType": "YulBlock",
													"src": "2154:437:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:398:12",
																"nodeType": "YulBlock",
																"src": "2187:398:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2211:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2211:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2201:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:12"
																			},
																			"nativeSrc": "2201:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:16:12"
																		},
																		"nativeSrc": "2201:16:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:16:12"
																	},
																	{
																		"nativeSrc": "2230:30:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2230:30:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2252:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2255:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2255:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2242:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:12"
																			},
																			"nativeSrc": "2242:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:18:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2234:4:12",
																				"nodeType": "YulTypedName",
																				"src": "2234:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2273:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2273:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2296:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "2296:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2306:1:12",
																							"nodeType": "YulLiteral",
																							"src": "2306:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2313:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "2313:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2325:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2325:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2309:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2309:3:12"
																							},
																							"nativeSrc": "2309:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2309:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2302:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:12"
																					},
																					"nativeSrc": "2302:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2302:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2292:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2292:3:12"
																			},
																			"nativeSrc": "2292:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2277:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2277:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2367:23:12",
																			"nodeType": "YulBlock",
																			"src": "2367:23:12",
																			"statements": [
																				{
																					"nativeSrc": "2369:19:12",
																					"nodeType": "YulAssignment",
																					"src": "2369:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2384:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2384:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2369:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "2369:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2349:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "2349:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2361:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2361:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2346:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2346:2:12"
																			},
																			"nativeSrc": "2346:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:20:12"
																		},
																		"nativeSrc": "2343:47:12",
																		"nodeType": "YulIf",
																		"src": "2343:47:12"
																	},
																	{
																		"nativeSrc": "2403:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2403:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2417:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "2417:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2427:1:12",
																							"nodeType": "YulLiteral",
																							"src": "2427:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2434:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2434:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2439:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2439:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2430:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2430:3:12"
																							},
																							"nativeSrc": "2430:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2430:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2423:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2423:3:12"
																					},
																					"nativeSrc": "2423:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2423:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2413:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2413:3:12"
																			},
																			"nativeSrc": "2413:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2413:31:12"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2407:2:12",
																				"nodeType": "YulTypedName",
																				"src": "2407:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2457:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2470:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "2470:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2461:5:12",
																				"nodeType": "YulTypedName",
																				"src": "2461:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2555:20:12",
																			"nodeType": "YulBlock",
																			"src": "2555:20:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2564:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2564:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2571:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2571:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2557:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2557:6:12"
																						},
																						"nativeSrc": "2557:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2557:16:12"
																					},
																					"nativeSrc": "2557:16:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "2557:16:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2505:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2505:5:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2512:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2512:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2502:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2502:2:12"
																			},
																			"nativeSrc": "2502:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:13:12"
																		},
																		"nativeSrc": "2494:81:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2516:26:12",
																			"nodeType": "YulBlock",
																			"src": "2516:26:12",
																			"statements": [
																				{
																					"nativeSrc": "2518:22:12",
																					"nodeType": "YulAssignment",
																					"src": "2518:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2531:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2531:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2538:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2538:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2527:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2527:3:12"
																						},
																						"nativeSrc": "2527:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2527:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2518:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "2518:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2498:3:12",
																			"nodeType": "YulBlock",
																			"src": "2498:3:12",
																			"statements": []
																		},
																		"src": "2494:81:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2170:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2167:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:2:12"
																},
																"nativeSrc": "2167:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:11:12"
															},
															"nativeSrc": "2164:421:12",
															"nodeType": "YulIf",
															"src": "2164:421:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2073:518:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2126:5:12",
														"nodeType": "YulTypedName",
														"src": "2126:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2133:3:12",
														"nodeType": "YulTypedName",
														"src": "2133:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2138:10:12",
														"nodeType": "YulTypedName",
														"src": "2138:10:12",
														"type": ""
													}
												],
												"src": "2073:518:12"
											},
											{
												"body": {
													"nativeSrc": "2681:81:12",
													"nodeType": "YulBlock",
													"src": "2681:81:12",
													"statements": [
														{
															"nativeSrc": "2691:65:12",
															"nodeType": "YulAssignment",
															"src": "2691:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2706:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2706:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2724:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2724:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2727:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2727:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2720:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2720:3:12"
																								},
																								"nativeSrc": "2720:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2720:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2737:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2737:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2733:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2733:3:12"
																								},
																								"nativeSrc": "2733:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2733:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2716:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:12"
																						},
																						"nativeSrc": "2716:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2716:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2712:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2712:3:12"
																				},
																				"nativeSrc": "2712:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2702:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:12"
																		},
																		"nativeSrc": "2702:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2748:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2748:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2751:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2744:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:12"
																		},
																		"nativeSrc": "2744:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2699:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2699:2:12"
																},
																"nativeSrc": "2699:57:12",
																"nodeType": "YulFunctionCall",
																"src": "2699:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2691:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2596:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2658:4:12",
														"nodeType": "YulTypedName",
														"src": "2658:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2664:3:12",
														"nodeType": "YulTypedName",
														"src": "2664:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2672:4:12",
														"nodeType": "YulTypedName",
														"src": "2672:4:12",
														"type": ""
													}
												],
												"src": "2596:166:12"
											},
											{
												"body": {
													"nativeSrc": "2863:1249:12",
													"nodeType": "YulBlock",
													"src": "2863:1249:12",
													"statements": [
														{
															"nativeSrc": "2873:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2873:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2893:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2887:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:12"
																},
																"nativeSrc": "2887:10:12",
																"nodeType": "YulFunctionCall",
																"src": "2887:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2877:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2877:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2940:22:12",
																"nodeType": "YulBlock",
																"src": "2940:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2942:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2942:16:12"
																			},
																			"nativeSrc": "2942:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:18:12"
																		},
																		"nativeSrc": "2942:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2912:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2928:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2928:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2932:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2932:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2924:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:12"
																				},
																				"nativeSrc": "2924:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2920:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:12"
																		},
																		"nativeSrc": "2920:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2909:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:12"
																},
																"nativeSrc": "2909:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2909:30:12"
															},
															"nativeSrc": "2906:56:12",
															"nodeType": "YulIf",
															"src": "2906:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3015:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3015:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3053:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3047:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3047:5:12"
																				},
																				"nativeSrc": "3047:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3047:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3021:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "3021:25:12"
																		},
																		"nativeSrc": "3021:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3061:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2971:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2971:43:12"
																},
																"nativeSrc": "2971:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2971:97:12"
															},
															"nativeSrc": "2971:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "2971:97:12"
														},
														{
															"nativeSrc": "3077:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3077:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3094:1:12",
																"nodeType": "YulLiteral",
																"src": "3094:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3081:9:12",
																	"nodeType": "YulTypedName",
																	"src": "3081:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3104:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3104:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3123:4:12",
																"nodeType": "YulLiteral",
																"src": "3123:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3108:11:12",
																	"nodeType": "YulTypedName",
																	"src": "3108:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3136:17:12",
															"nodeType": "YulAssignment",
															"src": "3136:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3149:4:12",
																"nodeType": "YulLiteral",
																"src": "3149:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3136:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3136:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3199:656:12",
																		"nodeType": "YulBlock",
																		"src": "3199:656:12",
																		"statements": [
																			{
																				"nativeSrc": "3213:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3213:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3232:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3232:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3244:2:12",
																									"nodeType": "YulLiteral",
																									"src": "3244:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3240:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3240:3:12"
																							},
																							"nativeSrc": "3240:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3240:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3228:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3228:3:12"
																					},
																					"nativeSrc": "3228:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3217:7:12",
																						"nodeType": "YulTypedName",
																						"src": "3217:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3261:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3261:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3305:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3305:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3275:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "3275:29:12"
																					},
																					"nativeSrc": "3275:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3265:6:12",
																						"nodeType": "YulTypedName",
																						"src": "3265:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3323:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3332:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3327:1:12",
																						"nodeType": "YulTypedName",
																						"src": "3327:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3410:172:12",
																					"nodeType": "YulBlock",
																					"src": "3410:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3435:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3435:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3453:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "3453:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3458:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "3458:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3449:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "3449:3:12"
																												},
																												"nativeSrc": "3449:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "3449:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3443:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "3443:5:12"
																										},
																										"nativeSrc": "3443:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3443:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3428:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3428:6:12"
																								},
																								"nativeSrc": "3428:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3428:42:12"
																							},
																							"nativeSrc": "3428:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3428:42:12"
																						},
																						{
																							"nativeSrc": "3487:24:12",
																							"nodeType": "YulAssignment",
																							"src": "3487:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3501:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3501:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3509:1:12",
																										"nodeType": "YulLiteral",
																										"src": "3509:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3497:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3497:3:12"
																								},
																								"nativeSrc": "3497:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3497:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3487:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3487:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3528:40:12",
																							"nodeType": "YulAssignment",
																							"src": "3528:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3545:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "3545:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3556:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "3556:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3541:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3541:3:12"
																								},
																								"nativeSrc": "3541:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3541:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3528:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3357:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "3357:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3360:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "3360:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3354:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3354:2:12"
																					},
																					"nativeSrc": "3354:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3354:14:12"
																				},
																				"nativeSrc": "3346:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3369:28:12",
																					"nodeType": "YulBlock",
																					"src": "3369:28:12",
																					"statements": [
																						{
																							"nativeSrc": "3371:24:12",
																							"nodeType": "YulAssignment",
																							"src": "3371:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3380:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "3380:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3383:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "3383:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:12"
																								},
																								"nativeSrc": "3376:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3371:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "3371:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3350:3:12",
																					"nodeType": "YulBlock",
																					"src": "3350:3:12",
																					"statements": []
																				},
																				"src": "3346:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:12",
																					"nodeType": "YulBlock",
																					"src": "3630:166:12",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:12"
																										},
																										"nativeSrc": "3671:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:12"
																								},
																								"nativeSrc": "3665:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:12",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:12"
																																		},
																																		"nativeSrc": "3750:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:12"
																																},
																																"nativeSrc": "3746:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:12"
																																},
																																"nativeSrc": "3772:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:12"
																														},
																														"nativeSrc": "3742:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:12"
																												},
																												"nativeSrc": "3738:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:12"
																										},
																										"nativeSrc": "3723:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:12"
																								},
																								"nativeSrc": "3708:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:12"
																							},
																							"nativeSrc": "3708:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:12"
																					},
																					"nativeSrc": "3598:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:12"
																				},
																				"nativeSrc": "3595:201:12",
																				"nodeType": "YulIf",
																				"src": "3595:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:12",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:12"
																									},
																									"nativeSrc": "3826:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:12",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:12"
																							},
																							"nativeSrc": "3822:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:12"
																					},
																					"nativeSrc": "3809:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:12"
																				},
																				"nativeSrc": "3809:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:12"
																			}
																		]
																	},
																	"nativeSrc": "3192:663:12",
																	"nodeType": "YulCase",
																	"src": "3192:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:12",
																		"nodeType": "YulBlock",
																		"src": "3872:234:12",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:12",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:12",
																					"nodeType": "YulBlock",
																					"src": "3935:67:12",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:12",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:12"
																										},
																										"nativeSrc": "3968:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:12"
																								},
																								"nativeSrc": "3962:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:12"
																				},
																				"nativeSrc": "3913:89:12",
																				"nodeType": "YulIf",
																				"src": "3913:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:12"
																							},
																							"nativeSrc": "4028:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:12"
																					},
																					"nativeSrc": "4015:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:12"
																				},
																				"nativeSrc": "4015:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:12"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:12",
																	"nodeType": "YulCase",
																	"src": "3864:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3172:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3169:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:12"
																},
																"nativeSrc": "3169:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3169:14:12"
															},
															"nativeSrc": "3162:944:12",
															"nodeType": "YulSwitch",
															"src": "3162:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2767:1345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2848:4:12",
														"nodeType": "YulTypedName",
														"src": "2848:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2854:3:12",
														"nodeType": "YulTypedName",
														"src": "2854:3:12",
														"type": ""
													}
												],
												"src": "2767:1345:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000b1438038062000b1483398101604081905262000033916200011a565b60036200004183826200020a565b5060046200005082826200020a565b505050620002d6565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b8160405283815260209250866020858801011115620000e2575f80fd5b5f91505b83821015620001055785820183015181830184015290820190620000e6565b5f602085830101528094505050505092915050565b5f80604083850312156200012c575f80fd5b82516001600160401b038082111562000143575f80fd5b62000151868387016200006d565b9350602085015191508082111562000167575f80fd5b5062000176858286016200006d565b9150509250929050565b600181811c908216806200019557607f821691505b602082108103620001b457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200020557805f5260205f20601f840160051c81016020851015620001e15750805b601f840160051c820191505b8181101562000202575f8155600101620001ed565b50505b505050565b81516001600160401b0381111562000226576200022662000059565b6200023e8162000237845462000180565b84620001ba565b602080601f83116001811462000274575f84156200025c5750858301515b5f19600386901b1c1916600185901b178555620002ce565b5f85815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61083080620002e45f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f1565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610719565b610244565b604051601281526020016100bf565b6100db61012d3660046106f1565b610267565b6100ef610140366004610752565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f1565b610297565b6100db6101833660046106f1565b610316565b6100ef610196366004610772565b610323565b6060600380546101aa906107a3565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a3565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107db565b61034d565b6060600480546101aa906107a3565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f602080835283518060208501525f5b818110156106b65785810183015185820160400152820161069a565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106ec575f80fd5b919050565b5f8060408385031215610702575f80fd5b61070b836106d6565b946020939093013593505050565b5f805f6060848603121561072b575f80fd5b610734846106d6565b9250610742602085016106d6565b9150604084013590509250925092565b5f60208284031215610762575f80fd5b61076b826106d6565b9392505050565b5f8060408385031215610783575f80fd5b61078c836106d6565b915061079a602084016106d6565b90509250929050565b600181811c908216806107b757607f821691505b6020821081036107d557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212207dee51ec9c945139e4af90ae262f4b329e03689bd97403d8fd7e828ceb6c782564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB14 CODESIZE SUB DUP1 PUSH3 0xB14 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x11A JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x20A JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x20A JUMP JUMPDEST POP POP POP PUSH3 0x2D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x105 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x151 DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x176 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x195 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x205 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1E1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x202 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x226 JUMPI PUSH3 0x226 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23E DUP2 PUSH3 0x237 DUP5 SLOAD PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH3 0x1BA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x274 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CE JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x283 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C2 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x830 DUP1 PUSH3 0x2E4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69A JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP5 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x742 PUSH1 0x20 DUP6 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76B DUP3 PUSH2 0x6D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x79A PUSH1 0x20 DUP5 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xEE51EC9C945139E4AF90AE262F4B329E03689BD97403D8FD7E828CEB6C78 0x25 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:12;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:12;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:12;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:518::-;2175:2;2170:3;2167:11;2164:421;;;2211:5;2208:1;2201:16;2255:4;2252:1;2242:18;2325:2;2313:10;2309:19;2306:1;2302:27;2296:4;2292:38;2361:4;2349:10;2346:20;2343:47;;;-1:-1:-1;2384:4:12;2343:47;2439:2;2434:3;2430:12;2427:1;2423:20;2417:4;2413:31;2403:41;;2494:81;2512:2;2505:5;2502:13;2494:81;;;2571:1;2557:16;;2538:1;2527:13;2494:81;;;2498:3;;2164:421;2073:518;;;:::o;2767:1345::-;2887:10;;-1:-1:-1;;;;;2909:30:12;;2906:56;;;2942:18;;:::i;:::-;2971:97;3061:6;3021:38;3053:4;3047:11;3021:38;:::i;:::-;3015:4;2971:97;:::i;:::-;3123:4;;3180:2;3169:14;;3197:1;3192:663;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:12;;;3962:26;3913:89;-1:-1:-1;;2724:1:12;2720:11;;;2716:24;2712:29;2702:40;2748:1;2744:11;;;2699:57;4015:81;;3162:944;;3192:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3228:20:12;;;3346:236;3360:7;3357:1;3354:14;3346:236;;;3449:19;;;3443:26;3428:42;;3541:27;;;;3509:1;3497:14;;;;3376:19;;3346:236;;;3350:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:12;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;;;3842:1;3833:6;3830:1;3826:14;3822:22;3816:4;3809:36;3162:944;;;;;2767:1345;;:::o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_974": {
									"entryPoint": null,
									"id": 974,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_909": {
									"entryPoint": 845,
									"id": 909,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1090": {
									"entryPoint": null,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_952": {
									"entryPoint": 1136,
									"id": 952,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_735": {
									"entryPoint": 1256,
									"id": 735,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_530": {
									"entryPoint": 803,
									"id": 530,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_555": {
									"entryPoint": 555,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_487": {
									"entryPoint": null,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_463": {
									"entryPoint": null,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_658": {
									"entryPoint": 663,
									"id": 658,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_617": {
									"entryPoint": 615,
									"id": 617,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_443": {
									"entryPoint": 411,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_453": {
									"entryPoint": 648,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_473": {
									"entryPoint": null,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_588": {
									"entryPoint": 580,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_512": {
									"entryPoint": 790,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5754:12",
										"nodeType": "YulBlock",
										"src": "0:5754:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:12",
													"nodeType": "YulBlock",
													"src": "135:427:12",
													"statements": [
														{
															"nativeSrc": "145:12:12",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:12",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:12",
																"nodeType": "YulLiteral",
																"src": "155:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:12",
																	"nodeType": "YulTypedName",
																	"src": "149:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:12",
																		"nodeType": "YulLiteral",
																		"src": "184:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:12"
																},
																"nativeSrc": "166:21:12",
																"nodeType": "YulFunctionCall",
																"src": "166:21:12"
															},
															"nativeSrc": "166:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:12"
														},
														{
															"nativeSrc": "196:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:12"
																},
																"nativeSrc": "210:13:12",
																"nodeType": "YulFunctionCall",
																"src": "210:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:12",
																	"nodeType": "YulTypedName",
																	"src": "200:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:12",
																				"nodeType": "YulLiteral",
																				"src": "254:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:12"
																		},
																		"nativeSrc": "239:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:12"
																},
																"nativeSrc": "232:34:12",
																"nodeType": "YulFunctionCall",
																"src": "232:34:12"
															},
															"nativeSrc": "232:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:12"
														},
														{
															"nativeSrc": "275:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:12",
																"nodeType": "YulLiteral",
																"src": "284:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:12",
																	"nodeType": "YulTypedName",
																	"src": "279:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:12",
																"nodeType": "YulBlock",
																"src": "344:90:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:12"
																							},
																							"nativeSrc": "369:17:12",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:12",
																							"nodeType": "YulLiteral",
																							"src": "388:2:12",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:12"
																					},
																					"nativeSrc": "365:26:12",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:12"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:12",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:12"
																									},
																									"nativeSrc": "403:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:12"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:12",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:12"
																							},
																							"nativeSrc": "399:23:12",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:12"
																					},
																					"nativeSrc": "393:30:12",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:12"
																			},
																			"nativeSrc": "358:66:12",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:12"
																		},
																		"nativeSrc": "358:66:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:12"
																},
																"nativeSrc": "302:13:12",
																"nodeType": "YulFunctionCall",
																"src": "302:13:12"
															},
															"nativeSrc": "294:140:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:12",
																"nodeType": "YulBlock",
																"src": "316:19:12",
																"statements": [
																	{
																		"nativeSrc": "318:15:12",
																		"nodeType": "YulAssignment",
																		"src": "318:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:12"
																			},
																			"nativeSrc": "323:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:12",
																"nodeType": "YulBlock",
																"src": "298:3:12",
																"statements": []
															},
															"src": "294:140:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:12"
																				},
																				"nativeSrc": "454:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:12",
																				"nodeType": "YulLiteral",
																				"src": "478:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:12"
																		},
																		"nativeSrc": "450:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:12",
																		"nodeType": "YulLiteral",
																		"src": "483:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:12"
																},
																"nativeSrc": "443:42:12",
																"nodeType": "YulFunctionCall",
																"src": "443:42:12"
															},
															"nativeSrc": "443:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:12"
														},
														{
															"nativeSrc": "494:62:12",
															"nodeType": "YulAssignment",
															"src": "494:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:12",
																								"nodeType": "YulLiteral",
																								"src": "537:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:12"
																						},
																						"nativeSrc": "525:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:12",
																								"nodeType": "YulLiteral",
																								"src": "546:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:12"
																						},
																						"nativeSrc": "542:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:12"
																				},
																				"nativeSrc": "521:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:12"
																		},
																		"nativeSrc": "506:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:12",
																		"nodeType": "YulLiteral",
																		"src": "553:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:12"
																},
																"nativeSrc": "502:54:12",
																"nodeType": "YulFunctionCall",
																"src": "502:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:12",
														"nodeType": "YulTypedName",
														"src": "104:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:12",
														"nodeType": "YulTypedName",
														"src": "115:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:12",
														"nodeType": "YulTypedName",
														"src": "126:4:12",
														"type": ""
													}
												],
												"src": "14:548:12"
											},
											{
												"body": {
													"nativeSrc": "616:124:12",
													"nodeType": "YulBlock",
													"src": "616:124:12",
													"statements": [
														{
															"nativeSrc": "626:29:12",
															"nodeType": "YulAssignment",
															"src": "626:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:12"
																},
																"nativeSrc": "635:20:12",
																"nodeType": "YulFunctionCall",
																"src": "635:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:12",
																"nodeType": "YulBlock",
																"src": "718:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:12",
																					"nodeType": "YulLiteral",
																					"src": "727:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:12",
																					"nodeType": "YulLiteral",
																					"src": "730:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:12"
																			},
																			"nativeSrc": "720:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:12"
																		},
																		"nativeSrc": "720:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:12",
																										"nodeType": "YulLiteral",
																										"src": "703:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:12",
																										"nodeType": "YulLiteral",
																										"src": "708:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:12"
																								},
																								"nativeSrc": "699:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:12",
																								"nodeType": "YulLiteral",
																								"src": "712:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:12"
																						},
																						"nativeSrc": "695:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:12"
																				},
																				"nativeSrc": "684:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:12"
																		},
																		"nativeSrc": "674:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:12"
																},
																"nativeSrc": "667:50:12",
																"nodeType": "YulFunctionCall",
																"src": "667:50:12"
															},
															"nativeSrc": "664:70:12",
															"nodeType": "YulIf",
															"src": "664:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:12",
														"nodeType": "YulTypedName",
														"src": "595:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:12",
														"nodeType": "YulTypedName",
														"src": "606:5:12",
														"type": ""
													}
												],
												"src": "567:173:12"
											},
											{
												"body": {
													"nativeSrc": "832:167:12",
													"nodeType": "YulBlock",
													"src": "832:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:12",
																"nodeType": "YulBlock",
																"src": "878:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:12",
																					"nodeType": "YulLiteral",
																					"src": "887:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:12",
																					"nodeType": "YulLiteral",
																					"src": "890:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:12"
																			},
																			"nativeSrc": "880:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:12"
																		},
																		"nativeSrc": "880:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:12"
																		},
																		"nativeSrc": "849:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:12",
																		"nodeType": "YulLiteral",
																		"src": "874:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:12"
																},
																"nativeSrc": "845:32:12",
																"nodeType": "YulFunctionCall",
																"src": "845:32:12"
															},
															"nativeSrc": "842:52:12",
															"nodeType": "YulIf",
															"src": "842:52:12"
														},
														{
															"nativeSrc": "903:39:12",
															"nodeType": "YulAssignment",
															"src": "903:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:12"
																},
																"nativeSrc": "913:29:12",
																"nodeType": "YulFunctionCall",
																"src": "913:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:12"
																}
															]
														},
														{
															"nativeSrc": "951:42:12",
															"nodeType": "YulAssignment",
															"src": "951:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:12",
																				"nodeType": "YulLiteral",
																				"src": "989:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:12"
																		},
																		"nativeSrc": "974:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:12"
																},
																"nativeSrc": "961:32:12",
																"nodeType": "YulFunctionCall",
																"src": "961:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:12",
														"nodeType": "YulTypedName",
														"src": "790:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:12",
														"nodeType": "YulTypedName",
														"src": "801:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:12",
														"nodeType": "YulTypedName",
														"src": "813:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:12",
														"nodeType": "YulTypedName",
														"src": "821:6:12",
														"type": ""
													}
												],
												"src": "745:254:12"
											},
											{
												"body": {
													"nativeSrc": "1099:92:12",
													"nodeType": "YulBlock",
													"src": "1099:92:12",
													"statements": [
														{
															"nativeSrc": "1109:26:12",
															"nodeType": "YulAssignment",
															"src": "1109:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:12"
																},
																"nativeSrc": "1117:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:12"
																				},
																				"nativeSrc": "1169:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:12"
																		},
																		"nativeSrc": "1162:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:12"
																},
																"nativeSrc": "1144:41:12",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:12"
															},
															"nativeSrc": "1144:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:12",
														"nodeType": "YulTypedName",
														"src": "1068:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:12",
														"nodeType": "YulTypedName",
														"src": "1079:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:12",
														"nodeType": "YulTypedName",
														"src": "1090:4:12",
														"type": ""
													}
												],
												"src": "1004:187:12"
											},
											{
												"body": {
													"nativeSrc": "1297:76:12",
													"nodeType": "YulBlock",
													"src": "1297:76:12",
													"statements": [
														{
															"nativeSrc": "1307:26:12",
															"nodeType": "YulAssignment",
															"src": "1307:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:12"
																},
																"nativeSrc": "1315:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:12"
																},
																"nativeSrc": "1342:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:12"
															},
															"nativeSrc": "1342:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:12",
														"nodeType": "YulTypedName",
														"src": "1266:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:12",
														"nodeType": "YulTypedName",
														"src": "1277:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:12",
														"nodeType": "YulTypedName",
														"src": "1288:4:12",
														"type": ""
													}
												],
												"src": "1196:177:12"
											},
											{
												"body": {
													"nativeSrc": "1482:224:12",
													"nodeType": "YulBlock",
													"src": "1482:224:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:12",
																"nodeType": "YulBlock",
																"src": "1528:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:12"
																			},
																			"nativeSrc": "1530:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:12"
																		},
																		"nativeSrc": "1530:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:12"
																		},
																		"nativeSrc": "1499:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:12"
																},
																"nativeSrc": "1495:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:12"
															},
															"nativeSrc": "1492:52:12",
															"nodeType": "YulIf",
															"src": "1492:52:12"
														},
														{
															"nativeSrc": "1553:39:12",
															"nodeType": "YulAssignment",
															"src": "1553:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:12"
																},
																"nativeSrc": "1563:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:12"
																}
															]
														},
														{
															"nativeSrc": "1601:48:12",
															"nodeType": "YulAssignment",
															"src": "1601:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:12"
																		},
																		"nativeSrc": "1630:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:12"
																},
																"nativeSrc": "1611:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:12"
																}
															]
														},
														{
															"nativeSrc": "1658:42:12",
															"nodeType": "YulAssignment",
															"src": "1658:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:12"
																		},
																		"nativeSrc": "1681:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:12"
																},
																"nativeSrc": "1668:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:12",
														"nodeType": "YulTypedName",
														"src": "1432:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:12",
														"nodeType": "YulTypedName",
														"src": "1443:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:12",
														"nodeType": "YulTypedName",
														"src": "1455:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:12",
														"nodeType": "YulTypedName",
														"src": "1463:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:12",
														"nodeType": "YulTypedName",
														"src": "1471:6:12",
														"type": ""
													}
												],
												"src": "1378:328:12"
											},
											{
												"body": {
													"nativeSrc": "1808:87:12",
													"nodeType": "YulBlock",
													"src": "1808:87:12",
													"statements": [
														{
															"nativeSrc": "1818:26:12",
															"nodeType": "YulAssignment",
															"src": "1818:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:12"
																},
																"nativeSrc": "1826:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:12"
																		},
																		"nativeSrc": "1871:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:12"
																},
																"nativeSrc": "1853:36:12",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:12"
															},
															"nativeSrc": "1853:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:12",
														"nodeType": "YulTypedName",
														"src": "1777:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:12",
														"nodeType": "YulTypedName",
														"src": "1788:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:12",
														"nodeType": "YulTypedName",
														"src": "1799:4:12",
														"type": ""
													}
												],
												"src": "1711:184:12"
											},
											{
												"body": {
													"nativeSrc": "1970:116:12",
													"nodeType": "YulBlock",
													"src": "1970:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:12",
																"nodeType": "YulBlock",
																"src": "2016:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:12"
																			},
																			"nativeSrc": "2018:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:12"
																		},
																		"nativeSrc": "2018:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:12"
																		},
																		"nativeSrc": "1987:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:12"
																},
																"nativeSrc": "1983:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:12"
															},
															"nativeSrc": "1980:52:12",
															"nodeType": "YulIf",
															"src": "1980:52:12"
														},
														{
															"nativeSrc": "2041:39:12",
															"nodeType": "YulAssignment",
															"src": "2041:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:12"
																},
																"nativeSrc": "2051:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:12",
														"nodeType": "YulTypedName",
														"src": "1936:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:12",
														"nodeType": "YulTypedName",
														"src": "1947:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:12",
														"nodeType": "YulTypedName",
														"src": "1959:6:12",
														"type": ""
													}
												],
												"src": "1900:186:12"
											},
											{
												"body": {
													"nativeSrc": "2178:173:12",
													"nodeType": "YulBlock",
													"src": "2178:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:12",
																"nodeType": "YulBlock",
																"src": "2224:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:12"
																			},
																			"nativeSrc": "2226:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:12"
																		},
																		"nativeSrc": "2226:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:12"
																		},
																		"nativeSrc": "2195:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:12"
																},
																"nativeSrc": "2191:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:12"
															},
															"nativeSrc": "2188:52:12",
															"nodeType": "YulIf",
															"src": "2188:52:12"
														},
														{
															"nativeSrc": "2249:39:12",
															"nodeType": "YulAssignment",
															"src": "2249:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:12"
																},
																"nativeSrc": "2259:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:12"
																}
															]
														},
														{
															"nativeSrc": "2297:48:12",
															"nodeType": "YulAssignment",
															"src": "2297:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:12"
																		},
																		"nativeSrc": "2326:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:12"
																},
																"nativeSrc": "2307:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:12",
														"nodeType": "YulTypedName",
														"src": "2136:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:12",
														"nodeType": "YulTypedName",
														"src": "2147:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:12",
														"nodeType": "YulTypedName",
														"src": "2159:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:12",
														"nodeType": "YulTypedName",
														"src": "2167:6:12",
														"type": ""
													}
												],
												"src": "2091:260:12"
											},
											{
												"body": {
													"nativeSrc": "2411:325:12",
													"nodeType": "YulBlock",
													"src": "2411:325:12",
													"statements": [
														{
															"nativeSrc": "2421:22:12",
															"nodeType": "YulAssignment",
															"src": "2421:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:12"
																},
																"nativeSrc": "2431:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:12"
																}
															]
														},
														{
															"nativeSrc": "2452:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:12"
																},
																"nativeSrc": "2478:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:12",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:12",
																"nodeType": "YulBlock",
																"src": "2529:31:12",
																"statements": [
																	{
																		"nativeSrc": "2531:27:12",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:12"
																			},
																			"nativeSrc": "2541:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:12"
																},
																"nativeSrc": "2502:26:12",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:12"
															},
															"nativeSrc": "2499:61:12",
															"nodeType": "YulIf",
															"src": "2499:61:12"
														},
														{
															"body": {
																"nativeSrc": "2619:111:12",
																"nodeType": "YulBlock",
																"src": "2619:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:12",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:12",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:12"
																					},
																					"nativeSrc": "2643:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:12"
																			},
																			"nativeSrc": "2633:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:12"
																		},
																		"nativeSrc": "2633:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:12"
																			},
																			"nativeSrc": "2677:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:12"
																		},
																		"nativeSrc": "2677:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:12"
																			},
																			"nativeSrc": "2705:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:12"
																		},
																		"nativeSrc": "2705:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:12"
																		},
																		"nativeSrc": "2595:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:12"
																},
																"nativeSrc": "2572:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:12"
															},
															"nativeSrc": "2569:161:12",
															"nodeType": "YulIf",
															"src": "2569:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:12",
														"nodeType": "YulTypedName",
														"src": "2391:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:12",
														"nodeType": "YulTypedName",
														"src": "2400:6:12",
														"type": ""
													}
												],
												"src": "2356:380:12"
											},
											{
												"body": {
													"nativeSrc": "2789:174:12",
													"nodeType": "YulBlock",
													"src": "2789:174:12",
													"statements": [
														{
															"nativeSrc": "2799:16:12",
															"nodeType": "YulAssignment",
															"src": "2799:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2810:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2813:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:12"
																},
																"nativeSrc": "2806:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2806:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2799:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2846:111:12",
																"nodeType": "YulBlock",
																"src": "2846:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2867:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2874:3:12",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2879:10:12",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2870:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:12"
																					},
																					"nativeSrc": "2870:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2860:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:12"
																			},
																			"nativeSrc": "2860:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:12"
																		},
																		"nativeSrc": "2860:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2911:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2914:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:12",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2904:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:12"
																			},
																			"nativeSrc": "2904:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:12"
																		},
																		"nativeSrc": "2904:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2939:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2942:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2932:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:12"
																			},
																			"nativeSrc": "2932:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:12"
																		},
																		"nativeSrc": "2932:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2830:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2833:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2827:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:12"
																},
																"nativeSrc": "2827:10:12",
																"nodeType": "YulFunctionCall",
																"src": "2827:10:12"
															},
															"nativeSrc": "2824:133:12",
															"nodeType": "YulIf",
															"src": "2824:133:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2741:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2772:1:12",
														"nodeType": "YulTypedName",
														"src": "2772:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2775:1:12",
														"nodeType": "YulTypedName",
														"src": "2775:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2781:3:12",
														"nodeType": "YulTypedName",
														"src": "2781:3:12",
														"type": ""
													}
												],
												"src": "2741:222:12"
											},
											{
												"body": {
													"nativeSrc": "3142:227:12",
													"nodeType": "YulBlock",
													"src": "3142:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3159:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3170:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3152:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:12"
																},
																"nativeSrc": "3152:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3152:21:12"
															},
															"nativeSrc": "3152:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3193:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3204:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3189:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:12"
																		},
																		"nativeSrc": "3189:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3182:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:12"
																},
																"nativeSrc": "3182:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3182:30:12"
															},
															"nativeSrc": "3182:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3243:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3228:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:12"
																		},
																		"nativeSrc": "3228:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:12"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3248:34:12",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:12",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:12"
																},
																"nativeSrc": "3221:62:12",
																"nodeType": "YulFunctionCall",
																"src": "3221:62:12"
															},
															"nativeSrc": "3221:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3303:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3314:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3299:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nativeSrc": "3299:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:12"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3319:7:12",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:12",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:12"
																},
																"nativeSrc": "3292:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3292:35:12"
															},
															"nativeSrc": "3292:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:12"
														},
														{
															"nativeSrc": "3336:27:12",
															"nodeType": "YulAssignment",
															"src": "3336:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3344:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:12"
																},
																"nativeSrc": "3344:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3344:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3336:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2968:401:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3119:9:12",
														"nodeType": "YulTypedName",
														"src": "3119:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3133:4:12",
														"nodeType": "YulTypedName",
														"src": "3133:4:12",
														"type": ""
													}
												],
												"src": "2968:401:12"
											},
											{
												"body": {
													"nativeSrc": "3548:226:12",
													"nodeType": "YulBlock",
													"src": "3548:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3565:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3576:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3558:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:12"
																},
																"nativeSrc": "3558:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3558:21:12"
															},
															"nativeSrc": "3558:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3599:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3610:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3595:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:12"
																		},
																		"nativeSrc": "3595:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:12"
																},
																"nativeSrc": "3588:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3588:30:12"
															},
															"nativeSrc": "3588:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3638:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3649:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3634:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:12"
																		},
																		"nativeSrc": "3634:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3654:34:12",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:12",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3627:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:12"
																},
																"nativeSrc": "3627:62:12",
																"nodeType": "YulFunctionCall",
																"src": "3627:62:12"
															},
															"nativeSrc": "3627:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3709:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3720:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3705:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:12"
																		},
																		"nativeSrc": "3705:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3725:6:12",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3698:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:12"
																},
																"nativeSrc": "3698:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3698:34:12"
															},
															"nativeSrc": "3698:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:12"
														},
														{
															"nativeSrc": "3741:27:12",
															"nodeType": "YulAssignment",
															"src": "3741:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3753:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3764:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3749:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:12"
																},
																"nativeSrc": "3749:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3749:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3741:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3374:400:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3525:9:12",
														"nodeType": "YulTypedName",
														"src": "3525:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3539:4:12",
														"nodeType": "YulTypedName",
														"src": "3539:4:12",
														"type": ""
													}
												],
												"src": "3374:400:12"
											},
											{
												"body": {
													"nativeSrc": "3953:224:12",
													"nodeType": "YulBlock",
													"src": "3953:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3970:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3963:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:12"
																},
																"nativeSrc": "3963:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3963:21:12"
															},
															"nativeSrc": "3963:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4004:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4015:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4000:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:12"
																		},
																		"nativeSrc": "4000:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4020:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:12"
																},
																"nativeSrc": "3993:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3993:30:12"
															},
															"nativeSrc": "3993:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4043:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4054:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4039:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:12"
																		},
																		"nativeSrc": "4039:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4059:34:12",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:12",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4032:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:12"
																},
																"nativeSrc": "4032:62:12",
																"nodeType": "YulFunctionCall",
																"src": "4032:62:12"
															},
															"nativeSrc": "4032:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4114:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4125:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4110:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:12"
																		},
																		"nativeSrc": "4110:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:12"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:12",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4103:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:12"
																},
																"nativeSrc": "4103:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4103:32:12"
															},
															"nativeSrc": "4103:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:12"
														},
														{
															"nativeSrc": "4144:27:12",
															"nodeType": "YulAssignment",
															"src": "4144:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4156:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4167:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4152:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:12"
																},
																"nativeSrc": "4152:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4152:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4144:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3779:398:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3930:9:12",
														"nodeType": "YulTypedName",
														"src": "3930:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3944:4:12",
														"nodeType": "YulTypedName",
														"src": "3944:4:12",
														"type": ""
													}
												],
												"src": "3779:398:12"
											},
											{
												"body": {
													"nativeSrc": "4356:179:12",
													"nodeType": "YulBlock",
													"src": "4356:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4373:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4366:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:12"
																},
																"nativeSrc": "4366:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4366:21:12"
															},
															"nativeSrc": "4366:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4407:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4418:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:12"
																		},
																		"nativeSrc": "4403:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:12"
																},
																"nativeSrc": "4396:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4396:30:12"
															},
															"nativeSrc": "4396:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4442:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:12"
																		},
																		"nativeSrc": "4442:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:12"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4462:31:12",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:12",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4435:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:12"
																},
																"nativeSrc": "4435:59:12",
																"nodeType": "YulFunctionCall",
																"src": "4435:59:12"
															},
															"nativeSrc": "4435:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:12"
														},
														{
															"nativeSrc": "4503:26:12",
															"nodeType": "YulAssignment",
															"src": "4503:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4515:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:12"
																},
																"nativeSrc": "4511:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4511:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4503:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4182:353:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4333:9:12",
														"nodeType": "YulTypedName",
														"src": "4333:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4347:4:12",
														"nodeType": "YulTypedName",
														"src": "4347:4:12",
														"type": ""
													}
												],
												"src": "4182:353:12"
											},
											{
												"body": {
													"nativeSrc": "4714:227:12",
													"nodeType": "YulBlock",
													"src": "4714:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4731:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4742:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4724:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:12"
																},
																"nativeSrc": "4724:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4724:21:12"
															},
															"nativeSrc": "4724:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4765:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4776:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:12"
																		},
																		"nativeSrc": "4761:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4781:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:12"
																},
																"nativeSrc": "4754:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4754:30:12"
															},
															"nativeSrc": "4754:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4804:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4815:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4800:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:12"
																		},
																		"nativeSrc": "4800:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4820:34:12",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:12",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4793:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:12"
																},
																"nativeSrc": "4793:62:12",
																"nodeType": "YulFunctionCall",
																"src": "4793:62:12"
															},
															"nativeSrc": "4793:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4875:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4886:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4871:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:12"
																		},
																		"nativeSrc": "4871:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4891:7:12",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4864:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:12"
																},
																"nativeSrc": "4864:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4864:35:12"
															},
															"nativeSrc": "4864:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:12"
														},
														{
															"nativeSrc": "4908:27:12",
															"nodeType": "YulAssignment",
															"src": "4908:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4920:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4931:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4916:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:12"
																},
																"nativeSrc": "4916:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4916:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4908:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4540:401:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4691:9:12",
														"nodeType": "YulTypedName",
														"src": "4691:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4705:4:12",
														"nodeType": "YulTypedName",
														"src": "4705:4:12",
														"type": ""
													}
												],
												"src": "4540:401:12"
											},
											{
												"body": {
													"nativeSrc": "5120:225:12",
													"nodeType": "YulBlock",
													"src": "5120:225:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5130:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:12"
																},
																"nativeSrc": "5130:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5130:21:12"
															},
															"nativeSrc": "5130:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5171:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5182:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:12"
																		},
																		"nativeSrc": "5167:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:12",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5160:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:12"
																},
																"nativeSrc": "5160:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5160:30:12"
															},
															"nativeSrc": "5160:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5210:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5221:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5206:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:12"
																		},
																		"nativeSrc": "5206:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5226:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:12",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5199:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:12"
																},
																"nativeSrc": "5199:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5199:62:12"
															},
															"nativeSrc": "5199:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5292:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5277:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:12"
																		},
																		"nativeSrc": "5277:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:12"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5297:5:12",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:12",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:12"
																},
																"nativeSrc": "5270:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5270:33:12"
															},
															"nativeSrc": "5270:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:12"
														},
														{
															"nativeSrc": "5312:27:12",
															"nodeType": "YulAssignment",
															"src": "5312:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5324:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5320:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:12"
																},
																"nativeSrc": "5320:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5320:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5312:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4946:399:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5097:9:12",
														"nodeType": "YulTypedName",
														"src": "5097:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5111:4:12",
														"nodeType": "YulTypedName",
														"src": "5111:4:12",
														"type": ""
													}
												],
												"src": "4946:399:12"
											},
											{
												"body": {
													"nativeSrc": "5524:228:12",
													"nodeType": "YulBlock",
													"src": "5524:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5534:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:12"
																},
																"nativeSrc": "5534:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5534:21:12"
															},
															"nativeSrc": "5534:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5575:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5586:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5571:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:12"
																		},
																		"nativeSrc": "5571:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5591:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:12"
																},
																"nativeSrc": "5564:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5564:30:12"
															},
															"nativeSrc": "5564:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5614:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5625:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5610:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:12"
																		},
																		"nativeSrc": "5610:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5630:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:12",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5603:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:12"
																},
																"nativeSrc": "5603:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5603:62:12"
															},
															"nativeSrc": "5603:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5685:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5696:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5681:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:12"
																		},
																		"nativeSrc": "5681:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:12"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5701:8:12",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:12",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5674:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:12"
																},
																"nativeSrc": "5674:36:12",
																"nodeType": "YulFunctionCall",
																"src": "5674:36:12"
															},
															"nativeSrc": "5674:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:12"
														},
														{
															"nativeSrc": "5719:27:12",
															"nodeType": "YulAssignment",
															"src": "5719:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5731:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5742:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5727:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:12"
																},
																"nativeSrc": "5727:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5727:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5719:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5350:402:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5501:9:12",
														"nodeType": "YulTypedName",
														"src": "5501:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5515:4:12",
														"nodeType": "YulTypedName",
														"src": "5515:4:12",
														"type": ""
													}
												],
												"src": "5350:402:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f1565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610719565b610244565b604051601281526020016100bf565b6100db61012d3660046106f1565b610267565b6100ef610140366004610752565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f1565b610297565b6100db6101833660046106f1565b610316565b6100ef610196366004610772565b610323565b6060600380546101aa906107a3565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a3565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107db565b61034d565b6060600480546101aa906107a3565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f602080835283518060208501525f5b818110156106b65785810183015185820160400152820161069a565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106ec575f80fd5b919050565b5f8060408385031215610702575f80fd5b61070b836106d6565b946020939093013593505050565b5f805f6060848603121561072b575f80fd5b610734846106d6565b9250610742602085016106d6565b9150604084013590509250925092565b5f60208284031215610762575f80fd5b61076b826106d6565b9392505050565b5f8060408385031215610783575f80fd5b61078c836106d6565b915061079a602084016106d6565b90509250929050565b600181811c908216806107b757607f821691505b6020821081036107d557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212207dee51ec9c945139e4af90ae262f4b329e03689bd97403d8fd7e828ceb6c782564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69A JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP5 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x742 PUSH1 0x20 DUP6 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76B DUP3 PUSH2 0x6D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x79A PUSH1 0x20 DUP5 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xEE51EC9C945139E4AF90AE262F4B329E03689BD97403D8FD7E828CEB6C78 0x25 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:12;;1162:22;1144:41;;1132:2;1117:18;4444:197:2;1004:187:12;3255:106:2;3342:12;;3255:106;;;1342:25:12;;;1330:2;1315:18;3255:106:2;1196:177:12;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:12;;1841:2;1826:18;3104:91:2;1711:184:12;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3170:2:12;6784:85:2;;;3152:21:12;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:12;;;3292:35;3344:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3576:2:12;10550:68:2;;;3558:21:12;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:12;;;3698:34;3749:19;;10550:68:2;3374:400:12;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3981:2:12;10628:68:2;;;3963:21:12;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:12;;;4103:32;4152:19;;10628:68:2;3779:398:12;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:12;;;10758:32:2;;1315:18:12;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4384:2:12;11297:68:2;;;4366:21:12;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:2;4182:353:12;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4742:2:12;7544:68:2;;;4724:21:12;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:12;;;4864:35;4916:19;;7544:68:2;4540:401:12;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5148:2:12;7622:64:2;;;5130:21:12;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:12;;;5270:33;5320:19;;7622:64:2;4946:399:12;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5552:2:12;7793:72:2;;;5534:21:12;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:12;;;5674:36;5727:19;;7793:72:2;5350:402:12;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:12;;;8114:13:2;;8163:26;;1315:18:12;8163:26:2;;;;;;;8200:37;12073:91;14:548:12;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:12;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:12:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:12:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "419200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1799,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1778,
									"end": 1816,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1853,
									"end": 1856,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1849,
									"end": 1869,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1870,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1893,
									"end": 1897,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1883,
									"end": 1898,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1562,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2170,
									"end": 2173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2217,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2260,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2325,
									"end": 2327,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2292,
									"end": 2330,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2443,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2417,
									"end": 2421,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2444,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2505,
									"end": 2510,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2502,
									"end": 2515,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2538,
									"end": 2539,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2527,
									"end": 2540,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2073,
									"end": 2591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2942,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3047,
									"end": 3058,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3021,
									"end": 3059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3015,
									"end": 3019,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2971,
									"end": 3068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3180,
									"end": 3182,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2725,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2716,
									"end": 2740,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2712,
									"end": 2741,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2702,
									"end": 2742,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2748,
									"end": 2749,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2699,
									"end": 2756,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3354,
									"end": 3368,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3443,
									"end": 3469,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3510,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3350,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3816,
									"end": 3820,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207dee51ec9c945139e4af90ae262f4b329e03689bd97403d8fd7e828ceb6c782564736f6c63430008180033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
								"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"@openzeppelin/contracts@4.9.3/utils/Strings.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/Math.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol",
								"contracts/FlameBorn Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 404,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 410,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 412,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 414,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d1b34f1544209d2a55d4356aeb25c6b0a9b58c3489ac1378c8b75ab1e14989c264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d1b34f1544209d2a55d4356aeb25c6b0a9b58c3489ac1378c8b75ab1e14989c264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xB3 0x4F ISZERO PREVRANDAO KECCAK256 SWAP14 0x2A SSTORE 0xD4 CALLDATALOAD PUSH11 0xEB25C6B0A9B58C3489AC13 PUSH25 0xC8B75AB1E14989C264736F6C63430008180033000000000000 ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d1b34f1544209d2a55d4356aeb25c6b0a9b58c3489ac1378c8b75ab1e14989c264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xB3 0x4F ISZERO PREVRANDAO KECCAK256 SWAP14 0x2A SSTORE 0xD4 CALLDATALOAD PUSH11 0xEB25C6B0A9B58C3489AC13 PUSH25 0xC8B75AB1E14989C264736F6C63430008180033000000000000 ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1b34f1544209d2a55d4356aeb25c6b0a9b58c3489ac1378c8b75ab1e14989c264736f6c63430008180033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
								"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"@openzeppelin/contracts@4.9.3/utils/Strings.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/Math.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol",
								"contracts/FlameBorn Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts@4.9.3/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.3/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.3/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee5b189ef8d101ce13bbde0263797ae52803ec8cb6224cec4a0671bc605161f564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee5b189ef8d101ce13bbde0263797ae52803ec8cb6224cec4a0671bc605161f564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE JUMPDEST XOR SWAP15 0xF8 0xD1 ADD 0xCE SGT 0xBB 0xDE MUL PUSH4 0x797AE528 SUB 0xEC DUP13 0xB6 0x22 0x4C 0xEC BLOBBASEFEE MOD PUSH18 0xBC605161F564736F6C634300081800330000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee5b189ef8d101ce13bbde0263797ae52803ec8cb6224cec4a0671bc605161f564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE JUMPDEST XOR SWAP15 0xF8 0xD1 ADD 0xCE SGT 0xBB 0xDE MUL PUSH4 0x797AE528 SUB 0xEC DUP13 0xB6 0x22 0x4C 0xEC BLOBBASEFEE MOD PUSH18 0xBC605161F564736F6C634300081800330000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee5b189ef8d101ce13bbde0263797ae52803ec8cb6224cec4a0671bc605161f564736f6c63430008180033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
								"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"@openzeppelin/contracts@4.9.3/utils/Strings.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/Math.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol",
								"contracts/FlameBorn Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200307514338397f64e11043a8e662c788e4ceb32a0c681554dd0a0f22be0461ad64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200307514338397f64e11043a8e662c788e4ceb32a0c681554dd0a0f22be0461ad64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SMOD MLOAD NUMBER CODESIZE CODECOPY PUSH32 0x64E11043A8E662C788E4CEB32A0C681554DD0A0F22BE0461AD64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200307514338397f64e11043a8e662c788e4ceb32a0c681554dd0a0f22be0461ad64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SMOD MLOAD NUMBER CODESIZE CODECOPY PUSH32 0x64E11043A8E662C788E4CEB32A0C681554DD0A0F22BE0461AD64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200307514338397f64e11043a8e662c788e4ceb32a0c681554dd0a0f22be0461ad64736f6c63430008180033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
								"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"@openzeppelin/contracts@4.9.3/utils/Strings.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/Math.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol",
								"contracts/FlameBorn Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FlameBorn Token.sol": {
				"FlamebornToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "multisigWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MULTISIG_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FlameBorn Token.sol\":186:1064  contract FlamebornToken is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FlameBorn Token.sol\":352:711  constructor(address multisigWallet) ERC20(\"Flameborn\", \"FLB\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x233630b6b2b137b937)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe9, 0x232621)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/FlameBorn Token.sol\":432:460  multisigWallet != address(0) */\n  dup2\n  and\n    /* \"contracts/FlameBorn Token.sol\":424:489  require(multisigWallet != address(0), \"Invalid multisig address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3198:3200   */\n  0x20\n    /* \"contracts/FlameBorn Token.sol\":424:489  require(multisigWallet != address(0), \"Invalid multisig address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3180:3201   */\n  mstore\n    /* \"#utility.yul\":3237:3239   */\n  0x18\n    /* \"#utility.yul\":3217:3235   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3210:3240   */\n  mstore\n    /* \"#utility.yul\":3276:3302   */\n  0x496e76616c6964206d756c746973696720616464726573730000000000000000\n    /* \"#utility.yul\":3256:3274   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3249:3303   */\n  mstore\n    /* \"#utility.yul\":3320:3338   */\n  0x64\n  add\n    /* \"contracts/FlameBorn Token.sol\":424:489  require(multisigWallet != address(0), \"Invalid multisig address\") */\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/FlameBorn Token.sol\":508:554  _grantRole(DEFAULT_ADMIN_ROLE, multisigWallet) */\n  tag_14\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2198:2202  0x00 */\n  0x00\n    /* \"contracts/FlameBorn Token.sol\":539:553  multisigWallet */\n  dup3\n    /* \"contracts/FlameBorn Token.sol\":508:518  _grantRole */\n  tag_15\n    /* \"contracts/FlameBorn Token.sol\":508:554  _grantRole(DEFAULT_ADMIN_ROLE, multisigWallet) */\n  jump\t// in\ntag_14:\n    /* \"contracts/FlameBorn Token.sol\":564:605  _grantRole(MULTISIG_ROLE, multisigWallet) */\n  tag_16\n    /* \"contracts/FlameBorn Token.sol\":280:306  keccak256(\"MULTISIG_ROLE\") */\n  0xa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab\n    /* \"contracts/FlameBorn Token.sol\":590:604  multisigWallet */\n  dup3\n    /* \"contracts/FlameBorn Token.sol\":564:574  _grantRole */\n  tag_15\n    /* \"contracts/FlameBorn Token.sol\":564:605  _grantRole(MULTISIG_ROLE, multisigWallet) */\n  jump\t// in\ntag_16:\n    /* \"contracts/FlameBorn Token.sol\":624:667  _mint(multisigWallet, 100 * 10**decimals()) */\n  tag_17\n    /* \"contracts/FlameBorn Token.sol\":630:644  multisigWallet */\n  dup2\n    /* \"contracts/FlameBorn Token.sol\":652:666  10**decimals() */\n  tag_20\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3186:3188  18 */\n  0x12\n    /* \"contracts/FlameBorn Token.sol\":652:654  10 */\n  0x0a\n    /* \"contracts/FlameBorn Token.sol\":652:666  10**decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"contracts/FlameBorn Token.sol\":646:666  100 * 10**decimals() */\n  tag_22\n  swap1\n    /* \"contracts/FlameBorn Token.sol\":646:649  100 */\n  0x64\n    /* \"contracts/FlameBorn Token.sol\":646:666  100 * 10**decimals() */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"contracts/FlameBorn Token.sol\":624:629  _mint */\n  tag_24\n    /* \"contracts/FlameBorn Token.sol\":624:667  _mint(multisigWallet, 100 * 10**decimals()) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/FlameBorn Token.sol\":677:697  _initialMintComplete */\n  0x06\n    /* \"contracts/FlameBorn Token.sol\":677:704  _initialMintComplete = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/FlameBorn Token.sol\":700:704  true */\n  0x01\n    /* \"contracts/FlameBorn Token.sol\":677:704  _initialMintComplete = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/FlameBorn Token.sol\":186:1064  contract FlamebornToken is ERC20, AccessControl {... */\n  jump(tag_63)\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  tag_27\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7678:7682  role */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7684:7691  account */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7670:7677  hasRole */\n  tag_28\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7720  _roles[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7714  _roles */\n  0x05\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7720  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7740:7744  true */\n  0x01\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7790:7802  _msgSender() */\n  tag_30\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7790:7802  _msgSender() */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7781:7788  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7775:7779  role */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FlameBorn Token.sol\":752:943  function _mint(address account, uint256 amount) internal virtual override {... */\ntag_24:\n    /* \"contracts/FlameBorn Token.sol\":845:865  _initialMintComplete */\n  and(0xff, sload(0x06))\n    /* \"contracts/FlameBorn Token.sol\":844:865  !_initialMintComplete */\n  iszero\n    /* \"contracts/FlameBorn Token.sol\":836:898  require(!_initialMintComplete, \"Minting disabled permanently\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5233:5235   */\n  0x20\n    /* \"contracts/FlameBorn Token.sol\":836:898  require(!_initialMintComplete, \"Minting disabled permanently\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5215:5236   */\n  mstore\n    /* \"#utility.yul\":5272:5274   */\n  0x1c\n    /* \"#utility.yul\":5252:5270   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5245:5275   */\n  mstore\n    /* \"#utility.yul\":5311:5341   */\n  0x4d696e74696e672064697361626c6564207065726d616e656e746c7900000000\n    /* \"#utility.yul\":5291:5309   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5284:5342   */\n  mstore\n    /* \"#utility.yul\":5359:5377   */\n  0x64\n  add\n    /* \"contracts/FlameBorn Token.sol\":836:898  require(!_initialMintComplete, \"Minting disabled permanently\") */\n  tag_12\n    /* \"#utility.yul\":5031:5383   */\n  jump\n    /* \"contracts/FlameBorn Token.sol\":836:898  require(!_initialMintComplete, \"Minting disabled permanently\") */\ntag_34:\n    /* \"contracts/FlameBorn Token.sol\":908:936  super._mint(account, amount) */\n  tag_29\n    /* \"contracts/FlameBorn Token.sol\":920:927  account */\n  dup3\n    /* \"contracts/FlameBorn Token.sol\":929:935  amount */\n  dup3\n    /* \"contracts/FlameBorn Token.sol\":908:919  super._mint */\n  tag_38\n    /* \"contracts/FlameBorn Token.sol\":908:936  super._mint(account, amount) */\n  jump\t// in\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_28:\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3107:3111  bool */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3142  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3136  _roles */\n  0x05\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3142  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_39:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_42\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5590:5592   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5572:5593   */\n  mstore\n    /* \"#utility.yul\":5629:5631   */\n  0x1f\n    /* \"#utility.yul\":5609:5627   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5602:5632   */\n  mstore\n    /* \"#utility.yul\":5668:5701   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":5648:5666   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5641:5702   */\n  mstore\n    /* \"#utility.yul\":5719:5737   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_12\n    /* \"#utility.yul\":5388:5743   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_42:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":6024:6049   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":5997:6015   */\n  add\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9000:9048  _afterTokenTransfer(address(0), account, amount) */\n  tag_29\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9028:9029  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9032:9039  account */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9041:9047  amount */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\ntag_46:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_65:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_66:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_55:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_56:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_69:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_70:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_58:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_74\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_74:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_75:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_75)\ntag_77:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2991   */\ntag_8:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_81\n  tag_55\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1850:1947   */\n  tag_82\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_83\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_56\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_58\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2002:2006   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2059:2061   */\n  0x1f\n    /* \"#utility.yul\":2048:2062   */\n  dup4\n  gt\n    /* \"#utility.yul\":2076:2077   */\n  0x01\n    /* \"#utility.yul\":2071:2734   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2795:2801   */\n  dup5\n    /* \"#utility.yul\":2792:2881   */\n  iszero\n  tag_86\n  jumpi\n  pop\n    /* \"#utility.yul\":2847:2866   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2841:2867   */\n  mload\n    /* \"#utility.yul\":2792:2881   */\ntag_86:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2894:2975   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2041:2985   */\n  jump(tag_84)\n    /* \"#utility.yul\":2071:2734   */\ntag_85:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2107:2127   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2225:2461   */\ntag_89:\n    /* \"#utility.yul\":2239:2246   */\n  dup3\n    /* \"#utility.yul\":2236:2237   */\n  dup2\n    /* \"#utility.yul\":2233:2247   */\n  lt\n    /* \"#utility.yul\":2225:2461   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2328:2347   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2322:2348   */\n  mload\n    /* \"#utility.yul\":2307:2349   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2420:2447   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2388:2389   */\n  0x01\n    /* \"#utility.yul\":2376:2390   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2255:2274   */\n  dup5\n  add\n    /* \"#utility.yul\":2225:2461   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":2229:2232   */\n  pop\n    /* \"#utility.yul\":2489:2495   */\n  dup6\n    /* \"#utility.yul\":2480:2487   */\n  dup3\n    /* \"#utility.yul\":2477:2496   */\n  lt\n    /* \"#utility.yul\":2474:2675   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2550:2569   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2544:2570   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2633:2634   */\n  0x03\n    /* \"#utility.yul\":2629:2643   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2645:2648   */\n  0xf8\n    /* \"#utility.yul\":2625:2649   */\n  and\n    /* \"#utility.yul\":2621:2658   */\n  shr\n    /* \"#utility.yul\":2617:2659   */\n  not\n    /* \"#utility.yul\":2602:2660   */\n  and\n    /* \"#utility.yul\":2587:2661   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2474:2675   */\ntag_92:\n  pop\n  pop\n    /* \"#utility.yul\":2721:2722   */\n  0x01\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2709:2710   */\n  0x01\n    /* \"#utility.yul\":2705:2719   */\n  shl\n    /* \"#utility.yul\":2701:2723   */\n  add\n    /* \"#utility.yul\":2695:2699   */\n  dup6\n    /* \"#utility.yul\":2688:2724   */\n  sstore\n    /* \"#utility.yul\":2041:2985   */\ntag_84:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1646:2991   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3349:3476   */\ntag_60:\n    /* \"#utility.yul\":3410:3420   */\n  0x4e487b71\n    /* \"#utility.yul\":3405:3408   */\n  0xe0\n    /* \"#utility.yul\":3401:3421   */\n  shl\n    /* \"#utility.yul\":3398:3399   */\n  0x00\n    /* \"#utility.yul\":3391:3422   */\n  mstore\n    /* \"#utility.yul\":3441:3445   */\n  0x11\n    /* \"#utility.yul\":3438:3439   */\n  0x04\n    /* \"#utility.yul\":3431:3446   */\n  mstore\n    /* \"#utility.yul\":3465:3469   */\n  0x24\n    /* \"#utility.yul\":3462:3463   */\n  0x00\n    /* \"#utility.yul\":3455:3470   */\n  revert\n    /* \"#utility.yul\":3481:3897   */\ntag_61:\n    /* \"#utility.yul\":3570:3571   */\n  0x01\n    /* \"#utility.yul\":3607:3612   */\n  dup2\n    /* \"#utility.yul\":3570:3571   */\n  dup2\n    /* \"#utility.yul\":3621:3891   */\ntag_96:\n    /* \"#utility.yul\":3642:3649   */\n  dup1\n    /* \"#utility.yul\":3632:3640   */\n  dup6\n    /* \"#utility.yul\":3629:3650   */\n  gt\n    /* \"#utility.yul\":3621:3891   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3701:3705   */\n  dup2\n    /* \"#utility.yul\":3697:3698   */\n  0x00\n    /* \"#utility.yul\":3693:3699   */\n  not\n    /* \"#utility.yul\":3689:3706   */\n  div\n    /* \"#utility.yul\":3683:3687   */\n  dup3\n    /* \"#utility.yul\":3680:3707   */\n  gt\n    /* \"#utility.yul\":3677:3730   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3710:3728   */\n  tag_100\n  tag_60\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3760:3767   */\n  dup1\n    /* \"#utility.yul\":3750:3758   */\n  dup6\n    /* \"#utility.yul\":3746:3768   */\n  and\n    /* \"#utility.yul\":3743:3798   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3780:3796   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3743:3798   */\ntag_101:\n    /* \"#utility.yul\":3859:3881   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3819:3834   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3621:3891   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":3625:3628   */\n  pop\n    /* \"#utility.yul\":3481:3897   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3902:4708   */\ntag_62:\n    /* \"#utility.yul\":3951:3956   */\n  0x00\n    /* \"#utility.yul\":3981:3989   */\n  dup3\n    /* \"#utility.yul\":3971:4051   */\n  tag_103\n  jumpi\n  pop\n    /* \"#utility.yul\":4022:4023   */\n  0x01\n    /* \"#utility.yul\":4036:4041   */\n  jump(tag_39)\n    /* \"#utility.yul\":3971:4051   */\ntag_103:\n    /* \"#utility.yul\":4070:4074   */\n  dup2\n    /* \"#utility.yul\":4060:4136   */\n  tag_104\n  jumpi\n  pop\n    /* \"#utility.yul\":4107:4108   */\n  0x00\n    /* \"#utility.yul\":4121:4126   */\n  jump(tag_39)\n    /* \"#utility.yul\":4060:4136   */\ntag_104:\n    /* \"#utility.yul\":4152:4156   */\n  dup2\n    /* \"#utility.yul\":4170:4171   */\n  0x01\n    /* \"#utility.yul\":4165:4224   */\n  dup2\n  eq\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4238:4239   */\n  0x02\n    /* \"#utility.yul\":4233:4363   */\n  dup2\n  eq\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4145:4363   */\n  jump(tag_105)\n    /* \"#utility.yul\":4165:4224   */\ntag_106:\n    /* \"#utility.yul\":4195:4196   */\n  0x01\n    /* \"#utility.yul\":4186:4196   */\n  swap2\n  pop\n    /* \"#utility.yul\":4209:4214   */\n  pop\n  jump(tag_39)\n    /* \"#utility.yul\":4233:4363   */\ntag_107:\n    /* \"#utility.yul\":4270:4273   */\n  0xff\n    /* \"#utility.yul\":4260:4268   */\n  dup5\n    /* \"#utility.yul\":4257:4274   */\n  gt\n    /* \"#utility.yul\":4254:4297   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4277:4295   */\n  tag_109\n  tag_60\n  jump\t// in\ntag_109:\n  pop\n  pop\n    /* \"#utility.yul\":4333:4334   */\n  0x01\n    /* \"#utility.yul\":4319:4335   */\n  dup3\n  shl\n    /* \"#utility.yul\":4348:4353   */\n  jump(tag_39)\n    /* \"#utility.yul\":4145:4363   */\ntag_105:\n  pop\n    /* \"#utility.yul\":4447:4449   */\n  0x20\n    /* \"#utility.yul\":4437:4445   */\n  dup4\n    /* \"#utility.yul\":4434:4450   */\n  lt\n    /* \"#utility.yul\":4428:4431   */\n  0x0133\n    /* \"#utility.yul\":4422:4426   */\n  dup4\n    /* \"#utility.yul\":4419:4432   */\n  lt\n    /* \"#utility.yul\":4415:4451   */\n  and\n    /* \"#utility.yul\":4409:4411   */\n  0x4e\n    /* \"#utility.yul\":4399:4407   */\n  dup5\n    /* \"#utility.yul\":4396:4412   */\n  lt\n    /* \"#utility.yul\":4391:4393   */\n  0x0b\n    /* \"#utility.yul\":4385:4389   */\n  dup5\n    /* \"#utility.yul\":4382:4394   */\n  lt\n    /* \"#utility.yul\":4378:4413   */\n  and\n    /* \"#utility.yul\":4375:4452   */\n  or\n    /* \"#utility.yul\":4372:4531   */\n  iszero\n  tag_110\n  jumpi\n  pop\n    /* \"#utility.yul\":4484:4503   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4516:4521   */\n  jump(tag_39)\n    /* \"#utility.yul\":4372:4531   */\ntag_110:\n    /* \"#utility.yul\":4563:4597   */\n  tag_111\n    /* \"#utility.yul\":4588:4596   */\n  dup4\n    /* \"#utility.yul\":4582:4586   */\n  dup4\n    /* \"#utility.yul\":4563:4597   */\n  tag_61\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4633:4639   */\n  dup1\n    /* \"#utility.yul\":4629:4630   */\n  0x00\n    /* \"#utility.yul\":4625:4631   */\n  not\n    /* \"#utility.yul\":4621:4640   */\n  div\n    /* \"#utility.yul\":4612:4619   */\n  dup3\n    /* \"#utility.yul\":4609:4641   */\n  gt\n    /* \"#utility.yul\":4606:4664   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":4644:4662   */\n  tag_113\n  tag_60\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4682:4702   */\n  mul\n  swap4\n    /* \"#utility.yul\":3902:4708   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4853   */\ntag_21:\n    /* \"#utility.yul\":4771:4776   */\n  0x00\n    /* \"#utility.yul\":4800:4847   */\n  tag_66\n    /* \"#utility.yul\":4841:4845   */\n  0xff\n    /* \"#utility.yul\":4831:4839   */\n  dup5\n    /* \"#utility.yul\":4827:4846   */\n  and\n    /* \"#utility.yul\":4821:4825   */\n  dup4\n    /* \"#utility.yul\":4800:4847   */\n  tag_62\n  jump\t// in\n    /* \"#utility.yul\":4858:5026   */\ntag_23:\n    /* \"#utility.yul\":4931:4940   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4962:4971   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4979:4994   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4973:4995   */\n  dup5\n  eq\n    /* \"#utility.yul\":4959:4996   */\n  or\n    /* \"#utility.yul\":4949:5020   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":5000:5018   */\n  tag_39\n  tag_60\n  jump\t// in\n    /* \"#utility.yul\":5748:5873   */\ntag_48:\n    /* \"#utility.yul\":5813:5822   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5834:5844   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5831:5867   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":5847:5865   */\n  tag_39\n  tag_60\n  jump\t// in\n    /* \"#utility.yul\":5878:6055   */\ntag_63:\n    /* \"contracts/FlameBorn Token.sol\":186:1064  contract FlamebornToken is ERC20, AccessControl {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FlameBorn Token.sol\":186:1064  contract FlamebornToken is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe328400c\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x248a9ca3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1736:1761   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1724:1726   */\n      0x20\n        /* \"#utility.yul\":1709:1727   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":1590:1767   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_26\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_41\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4616  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4610  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":2873:2909   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2861:2863   */\n      0x20\n        /* \"#utility.yul\":2846:2864   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_30\n        /* \"#utility.yul\":2731:2915   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_56\n      tag_65\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_26\n      tag_68\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_41\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_14:\n      tag_26\n      tag_77\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_32\n      tag_81\n      jump\t// in\n        /* \"contracts/FlameBorn Token.sol\":949:1062  function burn(address from, uint256 amount) external onlyRole(MULTISIG_ROLE) {... */\n    tag_16:\n      tag_56\n      tag_84\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_17:\n      tag_41\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2198:2202  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_18:\n      tag_26\n      tag_90\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_19:\n      tag_26\n      tag_94\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_20:\n      tag_56\n      tag_98\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_41\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"contracts/FlameBorn Token.sol\":240:306  bytes32 public constant MULTISIG_ROLE = keccak256(\"MULTISIG_ROLE\") */\n    tag_22:\n      tag_41\n        /* \"contracts/FlameBorn Token.sol\":280:306  keccak256(\"MULTISIG_ROLE\") */\n      0xa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab\n        /* \"contracts/FlameBorn Token.sol\":240:306  bytes32 public constant MULTISIG_ROLE = keccak256(\"MULTISIG_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2817:2821  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_110\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n    tag_110:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2833:2927  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_114\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_122:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_127\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_128\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_129\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4616  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4610  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_134\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_135\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      tag_137\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5053:5057  role */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5059:5066  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5042:5052  _grantRole */\n      tag_138\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3963:3965   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3945:3966   */\n      mstore\n        /* \"#utility.yul\":4002:4004   */\n      0x2f\n        /* \"#utility.yul\":3982:4000   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3975:4005   */\n      mstore\n        /* \"#utility.yul\":4041:4075   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":4021:4039   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4014:4076   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":4092:4110   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4085:4130   */\n      mstore\n        /* \"#utility.yul\":4147:4166   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      tag_145\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6231:6235  role */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6237:6244  account */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6219:6230  _revokeRole */\n      tag_146\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_150\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_103\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3107:3111  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3142  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3136  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3142  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n        /* \"contracts/FlameBorn Token.sol\":949:1062  function burn(address from, uint256 amount) external onlyRole(MULTISIG_ROLE) {... */\n    tag_85:\n        /* \"contracts/FlameBorn Token.sol\":280:306  keccak256(\"MULTISIG_ROLE\") */\n      0xa5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_162\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_135\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/FlameBorn Token.sol\":1036:1055  _burn(from, amount) */\n      tag_137\n        /* \"contracts/FlameBorn Token.sol\":1042:1046  from */\n      dup4\n        /* \"contracts/FlameBorn Token.sol\":1048:1054  amount */\n      dup4\n        /* \"contracts/FlameBorn Token.sol\":1036:1041  _burn */\n      tag_165\n        /* \"contracts/FlameBorn Token.sol\":1036:1055  _burn(from, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_168\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_103\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4641:4643   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4623:4644   */\n      mstore\n        /* \"#utility.yul\":4680:4682   */\n      0x25\n        /* \"#utility.yul\":4660:4678   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4653:4683   */\n      mstore\n        /* \"#utility.yul\":4719:4753   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4699:4717   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4692:4754   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4770:4788   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4763:4798   */\n      mstore\n        /* \"#utility.yul\":4815:4834   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_143\n        /* \"#utility.yul\":4439:4840   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_169:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_129\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4616  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4610  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_178\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_135\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      tag_137\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5480:5484  role */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5486:5493  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5468:5479  _revokeRole */\n      tag_146\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5047:5049   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5029:5050   */\n      mstore\n        /* \"#utility.yul\":5086:5088   */\n      0x24\n        /* \"#utility.yul\":5066:5084   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5059:5089   */\n      mstore\n        /* \"#utility.yul\":5125:5159   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5105:5123   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5098:5160   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5176:5194   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5169:5203   */\n      mstore\n        /* \"#utility.yul\":5220:5239   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_143\n        /* \"#utility.yul\":4845:5245   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5452:5454   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5434:5455   */\n      mstore\n        /* \"#utility.yul\":5491:5493   */\n      0x22\n        /* \"#utility.yul\":5471:5489   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5464:5494   */\n      mstore\n        /* \"#utility.yul\":5530:5564   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5510:5528   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5503:5565   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5581:5599   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5574:5606   */\n      mstore\n        /* \"#utility.yul\":5623:5642   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_143\n        /* \"#utility.yul\":5250:5648   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1736:1761   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1709:1727   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_193\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_103\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5855:5857   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5837:5858   */\n      mstore\n        /* \"#utility.yul\":5894:5896   */\n      0x1d\n        /* \"#utility.yul\":5874:5892   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5867:5897   */\n      mstore\n        /* \"#utility.yul\":5933:5964   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5913:5931   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5906:5965   */\n      mstore\n        /* \"#utility.yul\":5982:6000   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_143\n        /* \"#utility.yul\":5653:6006   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_195:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_198\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6213:6215   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6195:6216   */\n      mstore\n        /* \"#utility.yul\":6252:6254   */\n      0x25\n        /* \"#utility.yul\":6232:6250   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6225:6255   */\n      mstore\n        /* \"#utility.yul\":6291:6325   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6271:6289   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6264:6326   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6342:6360   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6335:6370   */\n      mstore\n        /* \"#utility.yul\":6387:6406   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_143\n        /* \"#utility.yul\":6011:6412   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6619:6621   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6601:6622   */\n      mstore\n        /* \"#utility.yul\":6658:6660   */\n      0x23\n        /* \"#utility.yul\":6638:6656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6631:6661   */\n      mstore\n        /* \"#utility.yul\":6697:6731   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6677:6695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6670:6732   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6748:6766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6741:6774   */\n      mstore\n        /* \"#utility.yul\":6791:6810   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_143\n        /* \"#utility.yul\":6417:6816   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7023:7025   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7005:7026   */\n      mstore\n        /* \"#utility.yul\":7062:7064   */\n      0x26\n        /* \"#utility.yul\":7042:7060   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7035:7065   */\n      mstore\n        /* \"#utility.yul\":7101:7135   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7081:7099   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7074:7136   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7152:7170   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7145:7181   */\n      mstore\n        /* \"#utility.yul\":7198:7217   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_143\n        /* \"#utility.yul\":6821:7223   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1736:1761   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1709:1727   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_198\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      tag_215\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3537:3541  role */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3526:3536  _checkRole */\n      tag_217\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      tag_219\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7678:7682  role */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7684:7691  account */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7670:7677  hasRole */\n      tag_78\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7720  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7714  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7720  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7740:7744  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7790:7802  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7790:7802  _msgSender() */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7781:7788  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7775:7779  role */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8082:8086  role */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8088:8095  account */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8074:8081  hasRole */\n      tag_78\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8144:8149  false */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8112:8124  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8112:8118  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8112:8124  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8112:8149  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8112:8124  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8144:8149  false */\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7412:7433   */\n      mstore\n        /* \"#utility.yul\":7469:7471   */\n      0x21\n        /* \"#utility.yul\":7449:7467   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7442:7472   */\n      mstore\n        /* \"#utility.yul\":7508:7542   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7488:7506   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7481:7543   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7559:7577   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7552:7583   */\n      mstore\n        /* \"#utility.yul\":7600:7619   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_143\n        /* \"#utility.yul\":7228:7625   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7832:7834   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7814:7835   */\n      mstore\n        /* \"#utility.yul\":7871:7873   */\n      0x22\n        /* \"#utility.yul\":7851:7869   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7844:7874   */\n      mstore\n        /* \"#utility.yul\":7910:7944   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":7890:7908   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7883:7945   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":7961:7979   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7954:7986   */\n      mstore\n        /* \"#utility.yul\":8003:8022   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_143\n        /* \"#utility.yul\":7630:8028   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1736:1761   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1709:1727   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      tag_239\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3940:3944  role */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3946:3953  account */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3932:3939  hasRole */\n      tag_78\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      tag_241\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4135:4142  account */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4115:4134  Strings.toHexString */\n      tag_242\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      tag_243\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4242:4246  role */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4249:4251  32 */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4214:4233  Strings.toHexString */\n      tag_244\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":4022:4274  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_245\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":3970:4306  revert(... */\n      dup3\n      mstore\n      tag_143\n      swap2\n      0x04\n      add\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_110\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1950:1960  2 * length */\n      tag_251\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1950:1960  2 * length */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_253\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_152\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_255\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_257\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_257:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_259\n      tag_260\n      jump\t// in\n    tag_259:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_262\n      jumpi\n      tag_262\n      tag_260\n      jump\t// in\n    tag_262:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2042:2052  2 * length */\n      tag_266\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2042:2052  2 * length */\n      tag_252\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_267\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_152\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_264\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2105:2110  value */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_269\n      jumpi\n      tag_269\n      tag_260\n      jump\t// in\n    tag_269:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_271\n      tag_260\n      jump\t// in\n    tag_271:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2131:2142  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2065:2068  --i */\n      tag_272\n      dup2\n      tag_273\n      jump\t// in\n    tag_272:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_263)\n    tag_264:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2170:2180  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9630:9632   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9612:9633   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9649:9667   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9642:9672   */\n      mstore\n        /* \"#utility.yul\":9708:9742   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":9688:9706   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9681:9743   */\n      mstore\n        /* \"#utility.yul\":9760:9778   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_143\n        /* \"#utility.yul\":9428:9784   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_274:\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":2241:2247  buffer */\n      swap4\n        /* \"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_28:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_282:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:747   */\n    tag_277:\n        /* \"#utility.yul\":582:583   */\n      0x00\n        /* \"#utility.yul\":592:705   */\n    tag_286:\n        /* \"#utility.yul\":606:612   */\n      dup4\n        /* \"#utility.yul\":603:604   */\n      dup2\n        /* \"#utility.yul\":600:613   */\n      lt\n        /* \"#utility.yul\":592:705   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":682:693   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":676:694   */\n      mload\n        /* \"#utility.yul\":663:674   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":656:695   */\n      mstore\n        /* \"#utility.yul\":628:630   */\n      0x20\n        /* \"#utility.yul\":621:631   */\n      add\n        /* \"#utility.yul\":592:705   */\n      jump(tag_286)\n    tag_288:\n      pop\n      pop\n        /* \"#utility.yul\":739:740   */\n      0x00\n        /* \"#utility.yul\":721:737   */\n      swap2\n      add\n        /* \"#utility.yul\":714:741   */\n      mstore\n        /* \"#utility.yul\":497:747   */\n      jump\t// out\n        /* \"#utility.yul\":752:1148   */\n    tag_35:\n        /* \"#utility.yul\":901:903   */\n      0x20\n        /* \"#utility.yul\":890:899   */\n      dup2\n        /* \"#utility.yul\":883:904   */\n      mstore\n        /* \"#utility.yul\":864:868   */\n      0x00\n        /* \"#utility.yul\":933:939   */\n      dup3\n        /* \"#utility.yul\":927:940   */\n      mload\n        /* \"#utility.yul\":976:982   */\n      dup1\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":960:969   */\n      dup5\n        /* \"#utility.yul\":956:974   */\n      add\n        /* \"#utility.yul\":949:983   */\n      mstore\n        /* \"#utility.yul\":992:1071   */\n      tag_290\n        /* \"#utility.yul\":1064:1070   */\n      dup2\n        /* \"#utility.yul\":1059:1061   */\n      0x40\n        /* \"#utility.yul\":1048:1057   */\n      dup6\n        /* \"#utility.yul\":1044:1062   */\n      add\n        /* \"#utility.yul\":1039:1041   */\n      0x20\n        /* \"#utility.yul\":1031:1037   */\n      dup8\n        /* \"#utility.yul\":1027:1042   */\n      add\n        /* \"#utility.yul\":992:1071   */\n      tag_277\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1132:1134   */\n      0x1f\n        /* \"#utility.yul\":1111:1126   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1107:1136   */\n      and\n        /* \"#utility.yul\":1092:1137   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1139:1141   */\n      0x40\n        /* \"#utility.yul\":1088:1142   */\n      add\n      swap3\n        /* \"#utility.yul\":752:1148   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1153:1326   */\n    tag_278:\n        /* \"#utility.yul\":1221:1241   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1270:1301   */\n      dup2\n      and\n        /* \"#utility.yul\":1260:1302   */\n      dup2\n      eq\n        /* \"#utility.yul\":1250:1320   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":1316:1317   */\n      0x00\n        /* \"#utility.yul\":1313:1314   */\n      dup1\n        /* \"#utility.yul\":1306:1318   */\n      revert\n        /* \"#utility.yul\":1250:1320   */\n    tag_292:\n        /* \"#utility.yul\":1153:1326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1331:1585   */\n    tag_38:\n        /* \"#utility.yul\":1399:1405   */\n      0x00\n        /* \"#utility.yul\":1407:1413   */\n      dup1\n        /* \"#utility.yul\":1460:1462   */\n      0x40\n        /* \"#utility.yul\":1448:1457   */\n      dup4\n        /* \"#utility.yul\":1439:1446   */\n      dup6\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_294:\n        /* \"#utility.yul\":1499:1528   */\n      tag_295\n        /* \"#utility.yul\":1518:1527   */\n      dup4\n        /* \"#utility.yul\":1499:1528   */\n      tag_278\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1489:1528   */\n      swap5\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1560:1578   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1547:1579   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1331:1585   */\n      jump\t// out\n        /* \"#utility.yul\":1772:2100   */\n    tag_47:\n        /* \"#utility.yul\":1849:1855   */\n      0x00\n        /* \"#utility.yul\":1857:1863   */\n      dup1\n        /* \"#utility.yul\":1865:1871   */\n      0x00\n        /* \"#utility.yul\":1918:1920   */\n      0x60\n        /* \"#utility.yul\":1906:1915   */\n      dup5\n        /* \"#utility.yul\":1897:1904   */\n      dup7\n        /* \"#utility.yul\":1893:1916   */\n      sub\n        /* \"#utility.yul\":1889:1921   */\n      slt\n        /* \"#utility.yul\":1886:1938   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1934:1935   */\n      0x00\n        /* \"#utility.yul\":1931:1932   */\n      dup1\n        /* \"#utility.yul\":1924:1936   */\n      revert\n        /* \"#utility.yul\":1886:1938   */\n    tag_298:\n        /* \"#utility.yul\":1957:1986   */\n      tag_299\n        /* \"#utility.yul\":1976:1985   */\n      dup5\n        /* \"#utility.yul\":1957:1986   */\n      tag_278\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1947:1986   */\n      swap3\n      pop\n        /* \"#utility.yul\":2005:2043   */\n      tag_300\n        /* \"#utility.yul\":2039:2041   */\n      0x20\n        /* \"#utility.yul\":2028:2037   */\n      dup6\n        /* \"#utility.yul\":2024:2042   */\n      add\n        /* \"#utility.yul\":2005:2043   */\n      tag_278\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1995:2043   */\n      swap2\n      pop\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2079:2088   */\n      dup5\n        /* \"#utility.yul\":2075:2093   */\n      add\n        /* \"#utility.yul\":2062:2094   */\n      calldataload\n        /* \"#utility.yul\":2052:2094   */\n      swap1\n      pop\n        /* \"#utility.yul\":1772:2100   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2105:2285   */\n    tag_52:\n        /* \"#utility.yul\":2164:2170   */\n      0x00\n        /* \"#utility.yul\":2217:2219   */\n      0x20\n        /* \"#utility.yul\":2205:2214   */\n      dup3\n        /* \"#utility.yul\":2196:2203   */\n      dup5\n        /* \"#utility.yul\":2192:2215   */\n      sub\n        /* \"#utility.yul\":2188:2220   */\n      slt\n        /* \"#utility.yul\":2185:2237   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2233:2234   */\n      0x00\n        /* \"#utility.yul\":2230:2231   */\n      dup1\n        /* \"#utility.yul\":2223:2235   */\n      revert\n        /* \"#utility.yul\":2185:2237   */\n    tag_302:\n      pop\n        /* \"#utility.yul\":2256:2279   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2105:2285   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2726   */\n    tag_58:\n        /* \"#utility.yul\":2540:2546   */\n      0x00\n        /* \"#utility.yul\":2548:2554   */\n      dup1\n        /* \"#utility.yul\":2601:2603   */\n      0x40\n        /* \"#utility.yul\":2589:2598   */\n      dup4\n        /* \"#utility.yul\":2580:2587   */\n      dup6\n        /* \"#utility.yul\":2576:2599   */\n      sub\n        /* \"#utility.yul\":2572:2604   */\n      slt\n        /* \"#utility.yul\":2569:2621   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":2617:2618   */\n      0x00\n        /* \"#utility.yul\":2614:2615   */\n      dup1\n        /* \"#utility.yul\":2607:2619   */\n      revert\n        /* \"#utility.yul\":2569:2621   */\n    tag_305:\n        /* \"#utility.yul\":2653:2662   */\n      dup3\n        /* \"#utility.yul\":2640:2663   */\n      calldataload\n        /* \"#utility.yul\":2630:2663   */\n      swap2\n      pop\n        /* \"#utility.yul\":2682:2720   */\n      tag_306\n        /* \"#utility.yul\":2716:2718   */\n      0x20\n        /* \"#utility.yul\":2705:2714   */\n      dup5\n        /* \"#utility.yul\":2701:2719   */\n      add\n        /* \"#utility.yul\":2682:2720   */\n      tag_278\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2672:2720   */\n      swap1\n      pop\n        /* \"#utility.yul\":2472:2726   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2920:3106   */\n    tag_73:\n        /* \"#utility.yul\":2979:2985   */\n      0x00\n        /* \"#utility.yul\":3032:3034   */\n      0x20\n        /* \"#utility.yul\":3020:3029   */\n      dup3\n        /* \"#utility.yul\":3011:3018   */\n      dup5\n        /* \"#utility.yul\":3007:3030   */\n      sub\n        /* \"#utility.yul\":3003:3035   */\n      slt\n        /* \"#utility.yul\":3000:3052   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3048:3049   */\n      0x00\n        /* \"#utility.yul\":3045:3046   */\n      dup1\n        /* \"#utility.yul\":3038:3050   */\n      revert\n        /* \"#utility.yul\":3000:3052   */\n    tag_309:\n        /* \"#utility.yul\":3071:3100   */\n      tag_274\n        /* \"#utility.yul\":3090:3099   */\n      dup3\n        /* \"#utility.yul\":3071:3100   */\n      tag_278\n      jump\t// in\n        /* \"#utility.yul\":3111:3371   */\n    tag_102:\n        /* \"#utility.yul\":3179:3185   */\n      0x00\n        /* \"#utility.yul\":3187:3193   */\n      dup1\n        /* \"#utility.yul\":3240:3242   */\n      0x40\n        /* \"#utility.yul\":3228:3237   */\n      dup4\n        /* \"#utility.yul\":3219:3226   */\n      dup6\n        /* \"#utility.yul\":3215:3238   */\n      sub\n        /* \"#utility.yul\":3211:3243   */\n      slt\n        /* \"#utility.yul\":3208:3260   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3256:3257   */\n      0x00\n        /* \"#utility.yul\":3253:3254   */\n      dup1\n        /* \"#utility.yul\":3246:3258   */\n      revert\n        /* \"#utility.yul\":3208:3260   */\n    tag_312:\n        /* \"#utility.yul\":3279:3308   */\n      tag_313\n        /* \"#utility.yul\":3298:3307   */\n      dup4\n        /* \"#utility.yul\":3279:3308   */\n      tag_278\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3269:3308   */\n      swap2\n      pop\n        /* \"#utility.yul\":3327:3365   */\n      tag_306\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3350:3359   */\n      dup5\n        /* \"#utility.yul\":3346:3364   */\n      add\n        /* \"#utility.yul\":3327:3365   */\n      tag_278\n      jump\t// in\n        /* \"#utility.yul\":3376:3756   */\n    tag_114:\n        /* \"#utility.yul\":3455:3456   */\n      0x01\n        /* \"#utility.yul\":3451:3463   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3498:3510   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3519:3580   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3573:3577   */\n      0x7f\n        /* \"#utility.yul\":3565:3571   */\n      dup3\n        /* \"#utility.yul\":3561:3578   */\n      and\n        /* \"#utility.yul\":3551:3578   */\n      swap2\n      pop\n        /* \"#utility.yul\":3519:3580   */\n    tag_316:\n        /* \"#utility.yul\":3626:3628   */\n      0x20\n        /* \"#utility.yul\":3618:3624   */\n      dup3\n        /* \"#utility.yul\":3615:3629   */\n      lt\n        /* \"#utility.yul\":3595:3613   */\n      dup2\n        /* \"#utility.yul\":3592:3630   */\n      sub\n        /* \"#utility.yul\":3589:3750   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3672:3682   */\n      0x4e487b71\n        /* \"#utility.yul\":3667:3670   */\n      0xe0\n        /* \"#utility.yul\":3663:3683   */\n      shl\n        /* \"#utility.yul\":3660:3661   */\n      0x00\n        /* \"#utility.yul\":3653:3684   */\n      mstore\n        /* \"#utility.yul\":3707:3711   */\n      0x22\n        /* \"#utility.yul\":3704:3705   */\n      0x04\n        /* \"#utility.yul\":3697:3712   */\n      mstore\n        /* \"#utility.yul\":3735:3739   */\n      0x24\n        /* \"#utility.yul\":3732:3733   */\n      0x00\n        /* \"#utility.yul\":3725:3740   */\n      revert\n        /* \"#utility.yul\":3589:3750   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":3376:3756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4177:4304   */\n    tag_279:\n        /* \"#utility.yul\":4238:4248   */\n      0x4e487b71\n        /* \"#utility.yul\":4233:4236   */\n      0xe0\n        /* \"#utility.yul\":4229:4249   */\n      shl\n        /* \"#utility.yul\":4226:4227   */\n      0x00\n        /* \"#utility.yul\":4219:4250   */\n      mstore\n        /* \"#utility.yul\":4269:4273   */\n      0x11\n        /* \"#utility.yul\":4266:4267   */\n      0x04\n        /* \"#utility.yul\":4259:4274   */\n      mstore\n        /* \"#utility.yul\":4293:4297   */\n      0x24\n        /* \"#utility.yul\":4290:4291   */\n      0x00\n        /* \"#utility.yul\":4283:4298   */\n      revert\n        /* \"#utility.yul\":4309:4434   */\n    tag_152:\n        /* \"#utility.yul\":4374:4383   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4395:4405   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4392:4428   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4408:4426   */\n      tag_110\n      tag_279\n      jump\t// in\n        /* \"#utility.yul\":8033:8845   */\n    tag_246:\n        /* \"#utility.yul\":8444:8469   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":8439:8442   */\n      dup2\n        /* \"#utility.yul\":8432:8470   */\n      mstore\n        /* \"#utility.yul\":8414:8417   */\n      0x00\n        /* \"#utility.yul\":8499:8505   */\n      dup4\n        /* \"#utility.yul\":8493:8506   */\n      mload\n        /* \"#utility.yul\":8515:8590   */\n      tag_333\n        /* \"#utility.yul\":8583:8589   */\n      dup2\n        /* \"#utility.yul\":8578:8580   */\n      0x17\n        /* \"#utility.yul\":8573:8576   */\n      dup6\n        /* \"#utility.yul\":8569:8581   */\n      add\n        /* \"#utility.yul\":8562:8566   */\n      0x20\n        /* \"#utility.yul\":8554:8560   */\n      dup9\n        /* \"#utility.yul\":8550:8567   */\n      add\n        /* \"#utility.yul\":8515:8590   */\n      tag_277\n      jump\t// in\n    tag_333:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":8649:8651   */\n      0x17\n        /* \"#utility.yul\":8609:8625   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":8641:8652   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8634:8674   */\n      mstore\n        /* \"#utility.yul\":8699:8712   */\n      dup4\n      mload\n        /* \"#utility.yul\":8721:8797   */\n      tag_334\n        /* \"#utility.yul\":8699:8712   */\n      dup2\n        /* \"#utility.yul\":8783:8785   */\n      0x28\n        /* \"#utility.yul\":8775:8786   */\n      dup5\n      add\n        /* \"#utility.yul\":8768:8772   */\n      0x20\n        /* \"#utility.yul\":8756:8773   */\n      dup9\n      add\n        /* \"#utility.yul\":8721:8797   */\n      tag_277\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":8817:8834   */\n      add\n        /* \"#utility.yul\":8836:8838   */\n      0x28\n        /* \"#utility.yul\":8813:8839   */\n      add\n      swap5\n        /* \"#utility.yul\":8033:8845   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8850:9018   */\n    tag_252:\n        /* \"#utility.yul\":8923:8932   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8954:8963   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8971:8986   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8965:8987   */\n      dup5\n      eq\n        /* \"#utility.yul\":8951:8988   */\n      or\n        /* \"#utility.yul\":8941:9012   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":8992:9010   */\n      tag_110\n      tag_279\n      jump\t// in\n        /* \"#utility.yul\":9023:9150   */\n    tag_256:\n        /* \"#utility.yul\":9084:9094   */\n      0x4e487b71\n        /* \"#utility.yul\":9079:9082   */\n      0xe0\n        /* \"#utility.yul\":9075:9095   */\n      shl\n        /* \"#utility.yul\":9072:9073   */\n      0x00\n        /* \"#utility.yul\":9065:9096   */\n      mstore\n        /* \"#utility.yul\":9115:9119   */\n      0x41\n        /* \"#utility.yul\":9112:9113   */\n      0x04\n        /* \"#utility.yul\":9105:9120   */\n      mstore\n        /* \"#utility.yul\":9139:9143   */\n      0x24\n        /* \"#utility.yul\":9136:9137   */\n      0x00\n        /* \"#utility.yul\":9129:9144   */\n      revert\n        /* \"#utility.yul\":9155:9282   */\n    tag_260:\n        /* \"#utility.yul\":9216:9226   */\n      0x4e487b71\n        /* \"#utility.yul\":9211:9214   */\n      0xe0\n        /* \"#utility.yul\":9207:9227   */\n      shl\n        /* \"#utility.yul\":9204:9205   */\n      0x00\n        /* \"#utility.yul\":9197:9228   */\n      mstore\n        /* \"#utility.yul\":9247:9251   */\n      0x32\n        /* \"#utility.yul\":9244:9245   */\n      0x04\n        /* \"#utility.yul\":9237:9252   */\n      mstore\n        /* \"#utility.yul\":9271:9275   */\n      0x24\n        /* \"#utility.yul\":9268:9269   */\n      0x00\n        /* \"#utility.yul\":9261:9276   */\n      revert\n        /* \"#utility.yul\":9287:9423   */\n    tag_273:\n        /* \"#utility.yul\":9326:9329   */\n      0x00\n        /* \"#utility.yul\":9354:9359   */\n      dup2\n        /* \"#utility.yul\":9344:9383   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":9363:9381   */\n      tag_342\n      tag_279\n      jump\t// in\n    tag_342:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":9399:9417   */\n      add\n      swap1\n        /* \"#utility.yul\":9287:9423   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b7c5f183362e6abfe0a2896ef6358bc8a228bba9b74843a4f4ef1f33c849fe964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2395": {
									"entryPoint": null,
									"id": 2395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_433": {
									"entryPoint": null,
									"id": 433,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_974": {
									"entryPoint": null,
									"id": 974,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_963": {
									"entryPoint": 830,
									"id": 963,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 354,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_2417": {
									"entryPoint": 492,
									"id": 2417,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_792": {
									"entryPoint": 633,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1090": {
									"entryPoint": null,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_463": {
									"entryPoint": null,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": 589,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_016f54888592b810d33780a25b38354502ff07ac177c6263c30423664e07aa58__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0400d57d7dcb81c8d59b1b1298f680cdaf2a06192e4d8bd9f5639fdb0cc41c0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6057:12",
										"nodeType": "YulBlock",
										"src": "0:6057:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:12",
													"nodeType": "YulBlock",
													"src": "95:209:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:12",
																"nodeType": "YulBlock",
																"src": "141:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:12",
																					"nodeType": "YulLiteral",
																					"src": "150:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:12",
																					"nodeType": "YulLiteral",
																					"src": "153:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:12"
																			},
																			"nativeSrc": "143:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:12"
																		},
																		"nativeSrc": "143:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:12"
																		},
																		"nativeSrc": "112:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:12",
																		"nodeType": "YulLiteral",
																		"src": "137:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:12"
																},
																"nativeSrc": "108:32:12",
																"nodeType": "YulFunctionCall",
																"src": "108:32:12"
															},
															"nativeSrc": "105:52:12",
															"nodeType": "YulIf",
															"src": "105:52:12"
														},
														{
															"nativeSrc": "166:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:12"
																},
																"nativeSrc": "179:16:12",
																"nodeType": "YulFunctionCall",
																"src": "179:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:12",
																	"nodeType": "YulTypedName",
																	"src": "170:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:12",
																"nodeType": "YulBlock",
																"src": "258:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:12",
																					"nodeType": "YulLiteral",
																					"src": "267:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:12",
																					"nodeType": "YulLiteral",
																					"src": "270:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:12"
																			},
																			"nativeSrc": "260:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:12"
																		},
																		"nativeSrc": "260:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:12",
																										"nodeType": "YulLiteral",
																										"src": "243:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:12",
																										"nodeType": "YulLiteral",
																										"src": "248:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:12"
																								},
																								"nativeSrc": "239:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:12",
																								"nodeType": "YulLiteral",
																								"src": "252:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:12"
																						},
																						"nativeSrc": "235:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:12"
																				},
																				"nativeSrc": "224:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:12"
																		},
																		"nativeSrc": "214:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:12"
																},
																"nativeSrc": "207:50:12",
																"nodeType": "YulFunctionCall",
																"src": "207:50:12"
															},
															"nativeSrc": "204:70:12",
															"nodeType": "YulIf",
															"src": "204:70:12"
														},
														{
															"nativeSrc": "283:15:12",
															"nodeType": "YulAssignment",
															"src": "283:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:12",
																"nodeType": "YulIdentifier",
																"src": "293:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:12",
														"nodeType": "YulTypedName",
														"src": "61:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:12",
														"nodeType": "YulTypedName",
														"src": "72:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:12",
														"nodeType": "YulTypedName",
														"src": "84:6:12",
														"type": ""
													}
												],
												"src": "14:290:12"
											},
											{
												"body": {
													"nativeSrc": "341:95:12",
													"nodeType": "YulBlock",
													"src": "341:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:12",
																		"nodeType": "YulLiteral",
																		"src": "358:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:12",
																				"nodeType": "YulLiteral",
																				"src": "365:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:12",
																				"nodeType": "YulLiteral",
																				"src": "370:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:12"
																		},
																		"nativeSrc": "361:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:12"
																},
																"nativeSrc": "351:31:12",
																"nodeType": "YulFunctionCall",
																"src": "351:31:12"
															},
															"nativeSrc": "351:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:12",
																		"nodeType": "YulLiteral",
																		"src": "398:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:12",
																		"nodeType": "YulLiteral",
																		"src": "401:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:12"
																},
																"nativeSrc": "391:15:12",
																"nodeType": "YulFunctionCall",
																"src": "391:15:12"
															},
															"nativeSrc": "391:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:12",
																		"nodeType": "YulLiteral",
																		"src": "422:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:12",
																		"nodeType": "YulLiteral",
																		"src": "425:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:12"
																},
																"nativeSrc": "415:15:12",
																"nodeType": "YulFunctionCall",
																"src": "415:15:12"
															},
															"nativeSrc": "415:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:12"
											},
											{
												"body": {
													"nativeSrc": "496:325:12",
													"nodeType": "YulBlock",
													"src": "496:325:12",
													"statements": [
														{
															"nativeSrc": "506:22:12",
															"nodeType": "YulAssignment",
															"src": "506:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:12",
																		"nodeType": "YulLiteral",
																		"src": "520:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:12"
																},
																"nativeSrc": "516:12:12",
																"nodeType": "YulFunctionCall",
																"src": "516:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:12"
																}
															]
														},
														{
															"nativeSrc": "537:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:12",
																		"nodeType": "YulLiteral",
																		"src": "573:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:12"
																},
																"nativeSrc": "563:12:12",
																"nodeType": "YulFunctionCall",
																"src": "563:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:12",
																	"nodeType": "YulTypedName",
																	"src": "541:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:12",
																"nodeType": "YulBlock",
																"src": "614:31:12",
																"statements": [
																	{
																		"nativeSrc": "616:27:12",
																		"nodeType": "YulAssignment",
																		"src": "616:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:12",
																					"nodeType": "YulLiteral",
																					"src": "638:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:12"
																			},
																			"nativeSrc": "626:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:12"
																},
																"nativeSrc": "587:26:12",
																"nodeType": "YulFunctionCall",
																"src": "587:26:12"
															},
															"nativeSrc": "584:61:12",
															"nodeType": "YulIf",
															"src": "584:61:12"
														},
														{
															"body": {
																"nativeSrc": "704:111:12",
																"nodeType": "YulBlock",
																"src": "704:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:12",
																					"nodeType": "YulLiteral",
																					"src": "725:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:12",
																							"nodeType": "YulLiteral",
																							"src": "732:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:12",
																							"nodeType": "YulLiteral",
																							"src": "737:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:12"
																					},
																					"nativeSrc": "728:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:12"
																			},
																			"nativeSrc": "718:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:12"
																		},
																		"nativeSrc": "718:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:12",
																					"nodeType": "YulLiteral",
																					"src": "769:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:12",
																					"nodeType": "YulLiteral",
																					"src": "772:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:12"
																			},
																			"nativeSrc": "762:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:12"
																		},
																		"nativeSrc": "762:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:12",
																					"nodeType": "YulLiteral",
																					"src": "797:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:12",
																					"nodeType": "YulLiteral",
																					"src": "800:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:12"
																			},
																			"nativeSrc": "790:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:12"
																		},
																		"nativeSrc": "790:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:12",
																				"nodeType": "YulLiteral",
																				"src": "691:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:12"
																		},
																		"nativeSrc": "680:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:12"
																},
																"nativeSrc": "657:38:12",
																"nodeType": "YulFunctionCall",
																"src": "657:38:12"
															},
															"nativeSrc": "654:161:12",
															"nodeType": "YulIf",
															"src": "654:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:12",
														"nodeType": "YulTypedName",
														"src": "476:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:12",
														"nodeType": "YulTypedName",
														"src": "485:6:12",
														"type": ""
													}
												],
												"src": "441:380:12"
											},
											{
												"body": {
													"nativeSrc": "882:65:12",
													"nodeType": "YulBlock",
													"src": "882:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:12",
																		"nodeType": "YulLiteral",
																		"src": "899:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:12"
																},
																"nativeSrc": "892:14:12",
																"nodeType": "YulFunctionCall",
																"src": "892:14:12"
															},
															"nativeSrc": "892:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:12"
														},
														{
															"nativeSrc": "915:26:12",
															"nodeType": "YulAssignment",
															"src": "915:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:12",
																		"nodeType": "YulLiteral",
																		"src": "933:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:12",
																		"nodeType": "YulLiteral",
																		"src": "936:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:12"
																},
																"nativeSrc": "923:18:12",
																"nodeType": "YulFunctionCall",
																"src": "923:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:12",
														"nodeType": "YulTypedName",
														"src": "865:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:12",
														"nodeType": "YulTypedName",
														"src": "873:4:12",
														"type": ""
													}
												],
												"src": "826:121:12"
											},
											{
												"body": {
													"nativeSrc": "1033:437:12",
													"nodeType": "YulBlock",
													"src": "1033:437:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:12",
																"nodeType": "YulBlock",
																"src": "1066:398:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:12"
																			},
																			"nativeSrc": "1080:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:12"
																		},
																		"nativeSrc": "1080:16:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:12"
																	},
																	{
																		"nativeSrc": "1109:30:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:12"
																			},
																			"nativeSrc": "1121:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:12",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:12"
																							},
																							"nativeSrc": "1188:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:12"
																					},
																					"nativeSrc": "1181:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:12"
																			},
																			"nativeSrc": "1171:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:12",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:12",
																			"nodeType": "YulBlock",
																			"src": "1246:23:12",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:12",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:12"
																			},
																			"nativeSrc": "1225:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:12"
																		},
																		"nativeSrc": "1222:47:12",
																		"nodeType": "YulIf",
																		"src": "1222:47:12"
																	},
																	{
																		"nativeSrc": "1282:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:12"
																							},
																							"nativeSrc": "1309:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:12"
																					},
																					"nativeSrc": "1302:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:12"
																			},
																			"nativeSrc": "1292:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:12"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:12",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:12",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:12",
																			"nodeType": "YulBlock",
																			"src": "1434:20:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:12"
																						},
																						"nativeSrc": "1436:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:12"
																					},
																					"nativeSrc": "1436:16:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:12"
																			},
																			"nativeSrc": "1381:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:12"
																		},
																		"nativeSrc": "1373:81:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:12",
																			"nodeType": "YulBlock",
																			"src": "1395:26:12",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:12",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:12"
																						},
																						"nativeSrc": "1406:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:12",
																			"nodeType": "YulBlock",
																			"src": "1377:3:12",
																			"statements": []
																		},
																		"src": "1373:81:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:12"
																},
																"nativeSrc": "1046:11:12",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:12"
															},
															"nativeSrc": "1043:421:12",
															"nodeType": "YulIf",
															"src": "1043:421:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:12",
														"nodeType": "YulTypedName",
														"src": "1005:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:12",
														"nodeType": "YulTypedName",
														"src": "1012:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:12",
														"nodeType": "YulTypedName",
														"src": "1017:10:12",
														"type": ""
													}
												],
												"src": "952:518:12"
											},
											{
												"body": {
													"nativeSrc": "1560:81:12",
													"nodeType": "YulBlock",
													"src": "1560:81:12",
													"statements": [
														{
															"nativeSrc": "1570:65:12",
															"nodeType": "YulAssignment",
															"src": "1570:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:12"
																								},
																								"nativeSrc": "1599:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:12"
																								},
																								"nativeSrc": "1612:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:12"
																						},
																						"nativeSrc": "1595:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:12"
																				},
																				"nativeSrc": "1591:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:12"
																		},
																		"nativeSrc": "1581:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:12"
																		},
																		"nativeSrc": "1623:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:12"
																},
																"nativeSrc": "1578:57:12",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:12",
														"nodeType": "YulTypedName",
														"src": "1537:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:12",
														"nodeType": "YulTypedName",
														"src": "1543:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:12",
														"nodeType": "YulTypedName",
														"src": "1551:4:12",
														"type": ""
													}
												],
												"src": "1475:166:12"
											},
											{
												"body": {
													"nativeSrc": "1742:1249:12",
													"nodeType": "YulBlock",
													"src": "1742:1249:12",
													"statements": [
														{
															"nativeSrc": "1752:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:12"
																},
																"nativeSrc": "1766:10:12",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:12",
																"nodeType": "YulBlock",
																"src": "1819:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:12"
																			},
																			"nativeSrc": "1821:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:12"
																		},
																		"nativeSrc": "1821:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:12"
																				},
																				"nativeSrc": "1803:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:12"
																		},
																		"nativeSrc": "1799:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:12"
																},
																"nativeSrc": "1788:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:12"
															},
															"nativeSrc": "1785:56:12",
															"nodeType": "YulIf",
															"src": "1785:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:12"
																				},
																				"nativeSrc": "1926:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:12"
																		},
																		"nativeSrc": "1900:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:12"
																},
																"nativeSrc": "1850:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:12"
															},
															"nativeSrc": "1850:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:12"
														},
														{
															"nativeSrc": "1956:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:12",
																"nodeType": "YulLiteral",
																"src": "1973:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1983:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2002:4:12",
																"nodeType": "YulLiteral",
																"src": "2002:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1987:11:12",
																	"nodeType": "YulTypedName",
																	"src": "1987:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2015:17:12",
															"nodeType": "YulAssignment",
															"src": "2015:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2028:4:12",
																"nodeType": "YulLiteral",
																"src": "2028:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2015:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2015:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2078:656:12",
																		"nodeType": "YulBlock",
																		"src": "2078:656:12",
																		"statements": [
																			{
																				"nativeSrc": "2092:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2092:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2111:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2111:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2123:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2123:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2119:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:12"
																							},
																							"nativeSrc": "2119:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2119:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2107:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2107:3:12"
																					},
																					"nativeSrc": "2107:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2107:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2096:7:12",
																						"nodeType": "YulTypedName",
																						"src": "2096:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2140:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2140:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2184:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2184:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2154:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "2154:29:12"
																					},
																					"nativeSrc": "2154:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2154:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2144:6:12",
																						"nodeType": "YulTypedName",
																						"src": "2144:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2202:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2202:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2211:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2206:1:12",
																						"nodeType": "YulTypedName",
																						"src": "2206:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2289:172:12",
																					"nodeType": "YulBlock",
																					"src": "2289:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2314:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2314:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2332:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "2332:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2337:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "2337:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2328:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2328:3:12"
																												},
																												"nativeSrc": "2328:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2328:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2322:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "2322:5:12"
																										},
																										"nativeSrc": "2322:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2322:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2307:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2307:6:12"
																								},
																								"nativeSrc": "2307:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2307:42:12"
																							},
																							"nativeSrc": "2307:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2307:42:12"
																						},
																						{
																							"nativeSrc": "2366:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2366:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2380:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2380:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2388:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2388:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2376:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2376:3:12"
																								},
																								"nativeSrc": "2376:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2376:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2366:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2366:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2407:40:12",
																							"nodeType": "YulAssignment",
																							"src": "2407:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2424:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "2424:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2435:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2435:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2420:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2420:3:12"
																								},
																								"nativeSrc": "2420:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2420:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2407:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "2407:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2236:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "2236:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2239:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2239:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2233:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2233:2:12"
																					},
																					"nativeSrc": "2233:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2233:14:12"
																				},
																				"nativeSrc": "2225:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2248:28:12",
																					"nodeType": "YulBlock",
																					"src": "2248:28:12",
																					"statements": [
																						{
																							"nativeSrc": "2250:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2250:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2259:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "2259:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2262:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2262:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2255:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2255:3:12"
																								},
																								"nativeSrc": "2255:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2255:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2250:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "2250:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2229:3:12",
																					"nodeType": "YulBlock",
																					"src": "2229:3:12",
																					"statements": []
																				},
																				"src": "2225:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "2509:166:12",
																					"nodeType": "YulBlock",
																					"src": "2509:166:12",
																					"statements": [
																						{
																							"nativeSrc": "2527:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2527:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2554:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2554:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2559:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2559:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2550:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2550:3:12"
																										},
																										"nativeSrc": "2550:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2550:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2544:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2544:5:12"
																								},
																								"nativeSrc": "2544:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2544:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2531:9:12",
																									"nodeType": "YulTypedName",
																									"src": "2531:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2606:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2606:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2633:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "2633:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2636:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "2636:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2629:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "2629:3:12"
																																		},
																																		"nativeSrc": "2629:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2629:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2645:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2645:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2625:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2625:3:12"
																																},
																																"nativeSrc": "2625:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2625:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2655:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2655:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2651:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2651:3:12"
																																},
																																"nativeSrc": "2651:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2651:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2621:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "2621:3:12"
																														},
																														"nativeSrc": "2621:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "2621:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2617:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2617:3:12"
																												},
																												"nativeSrc": "2617:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2617:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2602:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2602:3:12"
																										},
																										"nativeSrc": "2602:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2602:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2587:6:12"
																								},
																								"nativeSrc": "2587:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2587:74:12"
																							},
																							"nativeSrc": "2587:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2587:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2480:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2480:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2489:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2489:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2477:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2477:2:12"
																					},
																					"nativeSrc": "2477:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2477:19:12"
																				},
																				"nativeSrc": "2474:201:12",
																				"nodeType": "YulIf",
																				"src": "2474:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2695:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2695:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2709:1:12",
																											"nodeType": "YulLiteral",
																											"src": "2709:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2712:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "2712:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2705:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2705:3:12"
																									},
																									"nativeSrc": "2705:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "2705:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2721:1:12",
																									"nodeType": "YulLiteral",
																									"src": "2721:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2701:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2701:3:12"
																							},
																							"nativeSrc": "2701:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2701:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2688:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2688:6:12"
																					},
																					"nativeSrc": "2688:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:36:12"
																				},
																				"nativeSrc": "2688:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2688:36:12"
																			}
																		]
																	},
																	"nativeSrc": "2071:663:12",
																	"nodeType": "YulCase",
																	"src": "2071:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2751:234:12",
																		"nodeType": "YulBlock",
																		"src": "2751:234:12",
																		"statements": [
																			{
																				"nativeSrc": "2765:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2765:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2778:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2769:5:12",
																						"nodeType": "YulTypedName",
																						"src": "2769:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2814:67:12",
																					"nodeType": "YulBlock",
																					"src": "2814:67:12",
																					"statements": [
																						{
																							"nativeSrc": "2832:35:12",
																							"nodeType": "YulAssignment",
																							"src": "2832:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2851:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2851:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2856:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2856:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2847:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2847:3:12"
																										},
																										"nativeSrc": "2847:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2847:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2841:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2841:5:12"
																								},
																								"nativeSrc": "2841:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2841:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2832:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2832:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2795:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2795:6:12"
																				},
																				"nativeSrc": "2792:89:12",
																				"nodeType": "YulIf",
																				"src": "2792:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2901:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2901:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2960:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2960:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2967:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2967:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2907:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "2907:52:12"
																							},
																							"nativeSrc": "2907:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2907:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2894:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2894:6:12"
																					},
																					"nativeSrc": "2894:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2894:81:12"
																				},
																				"nativeSrc": "2894:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2894:81:12"
																			}
																		]
																	},
																	"nativeSrc": "2743:242:12",
																	"nodeType": "YulCase",
																	"src": "2743:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2051:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:12"
																},
																"nativeSrc": "2048:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2048:14:12"
															},
															"nativeSrc": "2041:944:12",
															"nodeType": "YulSwitch",
															"src": "2041:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:12",
														"nodeType": "YulTypedName",
														"src": "1727:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:12",
														"nodeType": "YulTypedName",
														"src": "1733:3:12",
														"type": ""
													}
												],
												"src": "1646:1345:12"
											},
											{
												"body": {
													"nativeSrc": "3170:174:12",
													"nodeType": "YulBlock",
													"src": "3170:174:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3187:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3187:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3198:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3198:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3180:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:12"
																},
																"nativeSrc": "3180:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3180:21:12"
															},
															"nativeSrc": "3180:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3180:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3221:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3221:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3232:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3232:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3217:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3217:3:12"
																		},
																		"nativeSrc": "3217:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3217:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3237:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3237:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3210:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:12"
																},
																"nativeSrc": "3210:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3210:30:12"
															},
															"nativeSrc": "3210:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3210:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3260:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3260:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3271:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3271:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3256:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3256:3:12"
																		},
																		"nativeSrc": "3256:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964206d756c74697369672061646472657373",
																		"kind": "string",
																		"nativeSrc": "3276:26:12",
																		"nodeType": "YulLiteral",
																		"src": "3276:26:12",
																		"type": "",
																		"value": "Invalid multisig address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3249:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3249:6:12"
																},
																"nativeSrc": "3249:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3249:54:12"
															},
															"nativeSrc": "3249:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "3249:54:12"
														},
														{
															"nativeSrc": "3312:26:12",
															"nodeType": "YulAssignment",
															"src": "3312:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3324:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3324:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3335:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3335:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3320:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3320:3:12"
																},
																"nativeSrc": "3320:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3320:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3312:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3312:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0400d57d7dcb81c8d59b1b1298f680cdaf2a06192e4d8bd9f5639fdb0cc41c0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2996:348:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3147:9:12",
														"nodeType": "YulTypedName",
														"src": "3147:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3161:4:12",
														"nodeType": "YulTypedName",
														"src": "3161:4:12",
														"type": ""
													}
												],
												"src": "2996:348:12"
											},
											{
												"body": {
													"nativeSrc": "3381:95:12",
													"nodeType": "YulBlock",
													"src": "3381:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3398:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3398:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3405:3:12",
																				"nodeType": "YulLiteral",
																				"src": "3405:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3410:10:12",
																				"nodeType": "YulLiteral",
																				"src": "3410:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3401:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:12"
																		},
																		"nativeSrc": "3401:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3401:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3391:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3391:6:12"
																},
																"nativeSrc": "3391:31:12",
																"nodeType": "YulFunctionCall",
																"src": "3391:31:12"
															},
															"nativeSrc": "3391:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "3391:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3438:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3438:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3441:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3441:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3431:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:12"
																},
																"nativeSrc": "3431:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3431:15:12"
															},
															"nativeSrc": "3431:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3431:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3462:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3462:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3465:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3465:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3455:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:12"
																},
																"nativeSrc": "3455:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3455:15:12"
															},
															"nativeSrc": "3455:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3455:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3349:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3349:127:12"
											},
											{
												"body": {
													"nativeSrc": "3545:352:12",
													"nodeType": "YulBlock",
													"src": "3545:352:12",
													"statements": [
														{
															"nativeSrc": "3555:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3555:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3570:1:12",
																"nodeType": "YulLiteral",
																"src": "3570:1:12",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3559:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3559:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3580:10:12",
															"nodeType": "YulAssignment",
															"src": "3580:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3589:1:12",
																"nodeType": "YulLiteral",
																"src": "3589:1:12",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3580:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3580:5:12"
																}
															]
														},
														{
															"nativeSrc": "3599:13:12",
															"nodeType": "YulAssignment",
															"src": "3599:13:12",
															"value": {
																"name": "_base",
																"nativeSrc": "3607:5:12",
																"nodeType": "YulIdentifier",
																"src": "3607:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3599:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3599:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3663:228:12",
																"nodeType": "YulBlock",
																"src": "3663:228:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3708:22:12",
																			"nodeType": "YulBlock",
																			"src": "3708:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3710:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "3710:16:12"
																						},
																						"nativeSrc": "3710:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3710:18:12"
																					},
																					"nativeSrc": "3710:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "3710:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3683:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3683:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3697:1:12",
																									"nodeType": "YulLiteral",
																									"src": "3697:1:12",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3693:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3693:3:12"
																							},
																							"nativeSrc": "3693:6:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3693:6:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3701:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3701:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3689:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3689:3:12"
																					},
																					"nativeSrc": "3689:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3689:17:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3680:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3680:2:12"
																			},
																			"nativeSrc": "3680:27:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3680:27:12"
																		},
																		"nativeSrc": "3677:53:12",
																		"nodeType": "YulIf",
																		"src": "3677:53:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "3769:29:12",
																			"nodeType": "YulBlock",
																			"src": "3769:29:12",
																			"statements": [
																				{
																					"nativeSrc": "3771:25:12",
																					"nodeType": "YulAssignment",
																					"src": "3771:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3784:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "3784:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3791:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "3791:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3780:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3780:3:12"
																						},
																						"nativeSrc": "3780:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3780:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3771:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "3771:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3750:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3750:8:12"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3760:7:12",
																					"nodeType": "YulIdentifier",
																					"src": "3760:7:12"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3746:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3746:3:12"
																			},
																			"nativeSrc": "3746:22:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3746:22:12"
																		},
																		"nativeSrc": "3743:55:12",
																		"nodeType": "YulIf",
																		"src": "3743:55:12"
																	},
																	{
																		"nativeSrc": "3811:23:12",
																		"nodeType": "YulAssignment",
																		"src": "3811:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3823:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3823:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3829:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3829:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3819:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3819:3:12"
																			},
																			"nativeSrc": "3819:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3819:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3811:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3811:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3847:34:12",
																		"nodeType": "YulAssignment",
																		"src": "3847:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3863:7:12",
																					"nodeType": "YulIdentifier",
																					"src": "3863:7:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3872:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3872:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3859:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3859:3:12"
																			},
																			"nativeSrc": "3859:22:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3859:22:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3847:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "3847:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3632:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3632:8:12"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3642:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3642:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3629:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3629:2:12"
																},
																"nativeSrc": "3629:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3629:21:12"
															},
															"nativeSrc": "3621:270:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3651:3:12",
																"nodeType": "YulBlock",
																"src": "3651:3:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3625:3:12",
																"nodeType": "YulBlock",
																"src": "3625:3:12",
																"statements": []
															},
															"src": "3621:270:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3481:416:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3509:5:12",
														"nodeType": "YulTypedName",
														"src": "3509:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3516:8:12",
														"nodeType": "YulTypedName",
														"src": "3516:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3529:5:12",
														"nodeType": "YulTypedName",
														"src": "3529:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3536:4:12",
														"nodeType": "YulTypedName",
														"src": "3536:4:12",
														"type": ""
													}
												],
												"src": "3481:416:12"
											},
											{
												"body": {
													"nativeSrc": "3961:747:12",
													"nodeType": "YulBlock",
													"src": "3961:747:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3999:52:12",
																"nodeType": "YulBlock",
																"src": "3999:52:12",
																"statements": [
																	{
																		"nativeSrc": "4013:10:12",
																		"nodeType": "YulAssignment",
																		"src": "4013:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4022:1:12",
																			"nodeType": "YulLiteral",
																			"src": "4022:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4013:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4013:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4036:5:12",
																		"nodeType": "YulLeave",
																		"src": "4036:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3981:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3981:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3974:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3974:6:12"
																},
																"nativeSrc": "3974:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3974:16:12"
															},
															"nativeSrc": "3971:80:12",
															"nodeType": "YulIf",
															"src": "3971:80:12"
														},
														{
															"body": {
																"nativeSrc": "4084:52:12",
																"nodeType": "YulBlock",
																"src": "4084:52:12",
																"statements": [
																	{
																		"nativeSrc": "4098:10:12",
																		"nodeType": "YulAssignment",
																		"src": "4098:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4107:1:12",
																			"nodeType": "YulLiteral",
																			"src": "4107:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4098:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4098:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4121:5:12",
																		"nodeType": "YulLeave",
																		"src": "4121:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4070:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4070:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4063:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:12"
																},
																"nativeSrc": "4063:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4063:12:12"
															},
															"nativeSrc": "4060:76:12",
															"nodeType": "YulIf",
															"src": "4060:76:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4172:52:12",
																		"nodeType": "YulBlock",
																		"src": "4172:52:12",
																		"statements": [
																			{
																				"nativeSrc": "4186:10:12",
																				"nodeType": "YulAssignment",
																				"src": "4186:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4195:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4195:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4186:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4186:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4209:5:12",
																				"nodeType": "YulLeave",
																				"src": "4209:5:12"
																			}
																		]
																	},
																	"nativeSrc": "4165:59:12",
																	"nodeType": "YulCase",
																	"src": "4165:59:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4170:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4170:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4240:123:12",
																		"nodeType": "YulBlock",
																		"src": "4240:123:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4275:22:12",
																					"nodeType": "YulBlock",
																					"src": "4275:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4277:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "4277:16:12"
																								},
																								"nativeSrc": "4277:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4277:18:12"
																							},
																							"nativeSrc": "4277:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4277:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4260:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "4260:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4270:3:12",
																							"nodeType": "YulLiteral",
																							"src": "4270:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4257:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4257:2:12"
																					},
																					"nativeSrc": "4257:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:17:12"
																				},
																				"nativeSrc": "4254:43:12",
																				"nodeType": "YulIf",
																				"src": "4254:43:12"
																			},
																			{
																				"nativeSrc": "4310:25:12",
																				"nodeType": "YulAssignment",
																				"src": "4310:25:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4323:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "4323:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4333:1:12",
																							"nodeType": "YulLiteral",
																							"src": "4333:1:12",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4319:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4319:3:12"
																					},
																					"nativeSrc": "4319:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4319:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4310:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4310:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4348:5:12",
																				"nodeType": "YulLeave",
																				"src": "4348:5:12"
																			}
																		]
																	},
																	"nativeSrc": "4233:130:12",
																	"nodeType": "YulCase",
																	"src": "4233:130:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4238:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4238:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4152:4:12",
																"nodeType": "YulIdentifier",
																"src": "4152:4:12"
															},
															"nativeSrc": "4145:218:12",
															"nodeType": "YulSwitch",
															"src": "4145:218:12"
														},
														{
															"body": {
																"nativeSrc": "4461:70:12",
																"nodeType": "YulBlock",
																"src": "4461:70:12",
																"statements": [
																	{
																		"nativeSrc": "4475:28:12",
																		"nodeType": "YulAssignment",
																		"src": "4475:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4488:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "4488:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4494:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "4494:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4484:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4484:3:12"
																			},
																			"nativeSrc": "4484:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4475:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4475:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4516:5:12",
																		"nodeType": "YulLeave",
																		"src": "4516:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4385:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "4385:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4391:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4391:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4382:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4382:2:12"
																				},
																				"nativeSrc": "4382:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4382:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4399:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "4399:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4409:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4409:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4396:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4396:2:12"
																				},
																				"nativeSrc": "4396:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4396:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4378:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4378:3:12"
																		},
																		"nativeSrc": "4378:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4378:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4422:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "4422:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4428:3:12",
																						"nodeType": "YulLiteral",
																						"src": "4428:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4419:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4419:2:12"
																				},
																				"nativeSrc": "4419:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4419:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4437:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "4437:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4447:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4447:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4434:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4434:2:12"
																				},
																				"nativeSrc": "4434:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4434:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4415:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:12"
																		},
																		"nativeSrc": "4415:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4375:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4375:2:12"
																},
																"nativeSrc": "4375:77:12",
																"nodeType": "YulFunctionCall",
																"src": "4375:77:12"
															},
															"nativeSrc": "4372:159:12",
															"nodeType": "YulIf",
															"src": "4372:159:12"
														},
														{
															"nativeSrc": "4540:57:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4540:57:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4582:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4582:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4588:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "4588:8:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4563:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4563:18:12"
																},
																"nativeSrc": "4563:34:12",
																"nodeType": "YulFunctionCall",
																"src": "4563:34:12"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4544:7:12",
																	"nodeType": "YulTypedName",
																	"src": "4544:7:12",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4553:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4553:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4642:22:12",
																"nodeType": "YulBlock",
																"src": "4642:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4644:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4644:16:12"
																			},
																			"nativeSrc": "4644:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4644:18:12"
																		},
																		"nativeSrc": "4644:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4644:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4612:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4612:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4629:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4629:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4625:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4625:3:12"
																				},
																				"nativeSrc": "4625:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4625:6:12"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4633:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4633:6:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4621:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:12"
																		},
																		"nativeSrc": "4621:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4621:19:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4609:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4609:2:12"
																},
																"nativeSrc": "4609:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4609:32:12"
															},
															"nativeSrc": "4606:58:12",
															"nodeType": "YulIf",
															"src": "4606:58:12"
														},
														{
															"nativeSrc": "4673:29:12",
															"nodeType": "YulAssignment",
															"src": "4673:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4686:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4686:7:12"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4695:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4695:6:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4682:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4682:3:12"
																},
																"nativeSrc": "4682:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4682:20:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4673:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4673:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3902:806:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3932:4:12",
														"nodeType": "YulTypedName",
														"src": "3932:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3938:8:12",
														"nodeType": "YulTypedName",
														"src": "3938:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3951:5:12",
														"nodeType": "YulTypedName",
														"src": "3951:5:12",
														"type": ""
													}
												],
												"src": "3902:806:12"
											},
											{
												"body": {
													"nativeSrc": "4781:72:12",
													"nodeType": "YulBlock",
													"src": "4781:72:12",
													"statements": [
														{
															"nativeSrc": "4791:56:12",
															"nodeType": "YulAssignment",
															"src": "4791:56:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4821:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4821:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4831:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "4831:8:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4841:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4841:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4827:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4827:3:12"
																		},
																		"nativeSrc": "4827:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4827:19:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4800:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "4800:20:12"
																},
																"nativeSrc": "4800:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4800:47:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4791:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4791:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4713:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4752:4:12",
														"nodeType": "YulTypedName",
														"src": "4752:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4758:8:12",
														"nodeType": "YulTypedName",
														"src": "4758:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4771:5:12",
														"nodeType": "YulTypedName",
														"src": "4771:5:12",
														"type": ""
													}
												],
												"src": "4713:140:12"
											},
											{
												"body": {
													"nativeSrc": "4910:116:12",
													"nodeType": "YulBlock",
													"src": "4910:116:12",
													"statements": [
														{
															"nativeSrc": "4920:20:12",
															"nodeType": "YulAssignment",
															"src": "4920:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4935:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4935:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4938:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4938:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4931:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4931:3:12"
																},
																"nativeSrc": "4931:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4931:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4920:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4920:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4998:22:12",
																"nodeType": "YulBlock",
																"src": "4998:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5000:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5000:16:12"
																			},
																			"nativeSrc": "5000:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5000:18:12"
																		},
																		"nativeSrc": "5000:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5000:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4969:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "4969:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4962:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4962:6:12"
																				},
																				"nativeSrc": "4962:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4962:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4976:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "4976:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4983:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "4983:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4992:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "4992:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4979:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4979:3:12"
																						},
																						"nativeSrc": "4979:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4979:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4973:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4973:2:12"
																				},
																				"nativeSrc": "4973:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4973:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4959:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4959:2:12"
																		},
																		"nativeSrc": "4959:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4952:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:12"
																},
																"nativeSrc": "4952:45:12",
																"nodeType": "YulFunctionCall",
																"src": "4952:45:12"
															},
															"nativeSrc": "4949:71:12",
															"nodeType": "YulIf",
															"src": "4949:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4858:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4889:1:12",
														"nodeType": "YulTypedName",
														"src": "4889:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4892:1:12",
														"nodeType": "YulTypedName",
														"src": "4892:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4898:7:12",
														"nodeType": "YulTypedName",
														"src": "4898:7:12",
														"type": ""
													}
												],
												"src": "4858:168:12"
											},
											{
												"body": {
													"nativeSrc": "5205:178:12",
													"nodeType": "YulBlock",
													"src": "5205:178:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5222:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5222:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5233:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5233:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:12"
																},
																"nativeSrc": "5215:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5215:21:12"
															},
															"nativeSrc": "5215:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5215:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5256:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5256:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5267:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5267:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5252:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5252:3:12"
																		},
																		"nativeSrc": "5252:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5252:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5272:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5272:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5245:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:12"
																},
																"nativeSrc": "5245:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5245:30:12"
															},
															"nativeSrc": "5245:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5245:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5295:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5295:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5306:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5306:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5291:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5291:3:12"
																		},
																		"nativeSrc": "5291:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5291:18:12"
																	},
																	{
																		"hexValue": "4d696e74696e672064697361626c6564207065726d616e656e746c79",
																		"kind": "string",
																		"nativeSrc": "5311:30:12",
																		"nodeType": "YulLiteral",
																		"src": "5311:30:12",
																		"type": "",
																		"value": "Minting disabled permanently"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5284:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:12"
																},
																"nativeSrc": "5284:58:12",
																"nodeType": "YulFunctionCall",
																"src": "5284:58:12"
															},
															"nativeSrc": "5284:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "5284:58:12"
														},
														{
															"nativeSrc": "5351:26:12",
															"nodeType": "YulAssignment",
															"src": "5351:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5363:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5363:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5374:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5374:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5359:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5359:3:12"
																},
																"nativeSrc": "5359:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5359:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5351:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5351:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_016f54888592b810d33780a25b38354502ff07ac177c6263c30423664e07aa58__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5031:352:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5182:9:12",
														"nodeType": "YulTypedName",
														"src": "5182:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5196:4:12",
														"nodeType": "YulTypedName",
														"src": "5196:4:12",
														"type": ""
													}
												],
												"src": "5031:352:12"
											},
											{
												"body": {
													"nativeSrc": "5562:181:12",
													"nodeType": "YulBlock",
													"src": "5562:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5579:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5579:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5590:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5590:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5572:6:12"
																},
																"nativeSrc": "5572:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5572:21:12"
															},
															"nativeSrc": "5572:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5572:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5613:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5613:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5624:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5624:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5609:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5609:3:12"
																		},
																		"nativeSrc": "5609:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5609:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5629:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5629:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5602:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5602:6:12"
																},
																"nativeSrc": "5602:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5602:30:12"
															},
															"nativeSrc": "5602:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5602:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5652:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5652:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5663:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5648:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5648:3:12"
																		},
																		"nativeSrc": "5648:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5648:18:12"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "5668:33:12",
																		"nodeType": "YulLiteral",
																		"src": "5668:33:12",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5641:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5641:6:12"
																},
																"nativeSrc": "5641:61:12",
																"nodeType": "YulFunctionCall",
																"src": "5641:61:12"
															},
															"nativeSrc": "5641:61:12",
															"nodeType": "YulExpressionStatement",
															"src": "5641:61:12"
														},
														{
															"nativeSrc": "5711:26:12",
															"nodeType": "YulAssignment",
															"src": "5711:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5723:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5723:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5734:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5734:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5719:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:12"
																},
																"nativeSrc": "5719:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5719:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5711:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5711:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5388:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5539:9:12",
														"nodeType": "YulTypedName",
														"src": "5539:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5553:4:12",
														"nodeType": "YulTypedName",
														"src": "5553:4:12",
														"type": ""
													}
												],
												"src": "5388:355:12"
											},
											{
												"body": {
													"nativeSrc": "5796:77:12",
													"nodeType": "YulBlock",
													"src": "5796:77:12",
													"statements": [
														{
															"nativeSrc": "5806:16:12",
															"nodeType": "YulAssignment",
															"src": "5806:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5817:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5817:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5820:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5820:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5813:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5813:3:12"
																},
																"nativeSrc": "5813:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5813:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5806:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5806:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5845:22:12",
																"nodeType": "YulBlock",
																"src": "5845:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5847:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5847:16:12"
																			},
																			"nativeSrc": "5847:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5847:18:12"
																		},
																		"nativeSrc": "5847:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5847:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5837:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5837:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5840:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5840:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5834:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5834:2:12"
																},
																"nativeSrc": "5834:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5834:10:12"
															},
															"nativeSrc": "5831:36:12",
															"nodeType": "YulIf",
															"src": "5831:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5748:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5779:1:12",
														"nodeType": "YulTypedName",
														"src": "5779:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5782:1:12",
														"nodeType": "YulTypedName",
														"src": "5782:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5788:3:12",
														"nodeType": "YulTypedName",
														"src": "5788:3:12",
														"type": ""
													}
												],
												"src": "5748:125:12"
											},
											{
												"body": {
													"nativeSrc": "5979:76:12",
													"nodeType": "YulBlock",
													"src": "5979:76:12",
													"statements": [
														{
															"nativeSrc": "5989:26:12",
															"nodeType": "YulAssignment",
															"src": "5989:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6001:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6001:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6012:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6012:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5997:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:12"
																},
																"nativeSrc": "5997:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5997:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5989:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5989:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6031:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6031:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6042:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6042:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6024:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:12"
																},
																"nativeSrc": "6024:25:12",
																"nodeType": "YulFunctionCall",
																"src": "6024:25:12"
															},
															"nativeSrc": "6024:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "6024:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5878:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5948:9:12",
														"nodeType": "YulTypedName",
														"src": "5948:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5959:6:12",
														"nodeType": "YulTypedName",
														"src": "5959:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5970:4:12",
														"nodeType": "YulTypedName",
														"src": "5970:4:12",
														"type": ""
													}
												],
												"src": "5878:177:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0400d57d7dcb81c8d59b1b1298f680cdaf2a06192e4d8bd9f5639fdb0cc41c0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid multisig address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_016f54888592b810d33780a25b38354502ff07ac177c6263c30423664e07aa58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Minting disabled permanently\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1664 CODESIZE SUB DUP1 PUSH3 0x1664 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x233630B6B2B137B937 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x232621 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x82 SWAP2 SWAP1 PUSH3 0x40F JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x91 DUP3 DUP3 PUSH3 0x40F JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D756C746973696720616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xFC PUSH0 DUP3 PUSH3 0x162 JUMP JUMPDEST PUSH3 0x128 PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP3 PUSH3 0x162 JUMP JUMPDEST PUSH3 0x14E DUP2 PUSH3 0x13B PUSH1 0x12 PUSH1 0xA PUSH3 0x5E8 JUMP JUMPDEST PUSH3 0x148 SWAP1 PUSH1 0x64 PUSH3 0x5F8 JUMP JUMPDEST PUSH3 0x1EC JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x628 JUMP JUMPDEST PUSH3 0x16E DUP3 DUP3 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x1E8 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1A7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E672064697361626C6564207065726D616E656E746C7900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xE7 JUMP JUMPDEST PUSH3 0x1E8 DUP3 DUP3 PUSH3 0x279 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xE7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x2E4 SWAP2 SWAP1 PUSH3 0x612 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1E8 PUSH0 DUP4 DUP4 JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x39B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x33E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3E7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x408 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3F3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x42B JUMPI PUSH3 0x42B PUSH3 0x372 JUMP JUMPDEST PUSH3 0x443 DUP2 PUSH3 0x43C DUP5 SLOAD PUSH3 0x386 JUMP JUMPDEST DUP5 PUSH3 0x3C0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x479 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x461 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4D3 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4A9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x488 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4C7 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x52F JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x513 JUMPI PUSH3 0x513 PUSH3 0x4DB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x521 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x4F4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x547 JUMPI POP PUSH1 0x1 PUSH3 0x273 JUMP JUMPDEST DUP2 PUSH3 0x555 JUMPI POP PUSH0 PUSH3 0x273 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x56E JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x579 JUMPI PUSH3 0x599 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x273 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x58D JUMPI PUSH3 0x58D PUSH3 0x4DB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x273 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x5BE JUMPI POP DUP2 DUP2 EXP PUSH3 0x273 JUMP JUMPDEST PUSH3 0x5CA DUP4 DUP4 PUSH3 0x4EF JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x5E0 JUMPI PUSH3 0x5E0 PUSH3 0x4DB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x36B PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x537 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x273 JUMPI PUSH3 0x273 PUSH3 0x4DB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x273 JUMPI PUSH3 0x273 PUSH3 0x4DB JUMP JUMPDEST PUSH2 0x102E DUP1 PUSH3 0x636 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE328400C EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x13E PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xE4F JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x17F PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x17F PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x17F PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x30C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0xED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x398 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x398 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3AF DUP2 DUP6 DUP6 PUSH2 0x5EB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C6 DUP6 DUP3 DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x3D1 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3F6 DUP2 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 PUSH2 0x935 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x484 DUP3 DUP3 PUSH2 0x9BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3AF DUP2 DUP6 DUP6 PUSH2 0x49A DUP4 DUP4 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB PUSH2 0x50C DUP2 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 PUSH2 0xA20 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x523 DUP3 DUP7 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH2 0x3D1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5EB JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3AF DUP2 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5B7 DUP2 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x719 DUP5 DUP5 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x780 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x471 JUMP JUMPDEST PUSH2 0x780 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x780 JUMP JUMPDEST PUSH2 0x932 DUP2 CALLER PUSH2 0xB50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x93F DUP3 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x976 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x9C4 DUP3 DUP3 PUSH2 0x4A9 JUMP JUMPDEST ISZERO PUSH2 0x484 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB5A DUP3 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH2 0xB67 DUP2 PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0xB72 DUP4 PUSH1 0x20 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB83 SWAP3 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x471 SWAP2 PUSH1 0x4 ADD PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x30C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xBC9 DUP4 PUSH1 0x2 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xBD4 SWAP1 PUSH1 0x2 PUSH2 0xF1D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xBEC PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC16 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xC30 JUMPI PUSH2 0xC30 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0xC80 DUP5 PUSH1 0x2 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xC8B SWAP1 PUSH1 0x1 PUSH2 0xF1D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD02 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xCBF JUMPI PUSH2 0xCBF PUSH2 0xFCF JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xCFB DUP2 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xC8E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x471 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD68 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD51 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD81 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xDBF DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE08 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE31 DUP5 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP PUSH2 0xE3F PUSH1 0x20 DUP6 ADD PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE77 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xE87 PUSH1 0x20 DUP5 ADD PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD51 DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEC3 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE87 PUSH1 0x20 DUP5 ADD PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEE5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF03 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30C PUSH2 0xF09 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 DUP4 MLOAD PUSH2 0xF67 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xF98 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xD7F JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x30C JUMPI PUSH2 0x30C PUSH2 0xF09 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0xFF1 JUMPI PUSH2 0xFF1 PUSH2 0xF09 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH29 0x5F183362E6ABFE0A2896EF6358BC8A228BBA9B74843A4F4EF1F33C849F 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "186:878:11:-:0;;;352:359;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1980:113:2;;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;;;;;;;432:28:11;::::1;424:65;;;::::0;-1:-1:-1;;;424:65:11;;3198:2:12;424:65:11::1;::::0;::::1;3180:21:12::0;3237:2;3217:18;;;3210:30;3276:26;3256:18;;;3249:54;3320:18;;424:65:11::1;;;;;;;;;508:46;2198:4:0;539:14:11::0;508:10:::1;:46::i;:::-;564:41;280:26;590:14:::0;564:10:::1;:41::i;:::-;624:43;630:14:::0;652::::1;3186:2:2::0;652::11::1;:14;:::i;:::-;646:20;::::0;:3:::1;:20;:::i;:::-;624:5;:43::i;:::-;-1:-1:-1::0;677:20:11::1;:27:::0;;-1:-1:-1;;677:27:11::1;700:4;677:27;::::0;;186:878;;7587:233:0;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:5;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;752:191:11:-;845:20;;;;844:21;836:62;;;;-1:-1:-1;;;836:62:11;;5233:2:12;836:62:11;;;5215:21:12;5272:2;5252:18;;;5245:30;5311;5291:18;;;5284:58;5359:18;;836:62:11;5031:352:12;836:62:11;908:28;920:7;929:6;908:11;:28::i;3021:145:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;3021:145;;;;;:::o;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;5590:2:12;8595:65:2;;;5572:21:12;5629:2;5609:18;;;5602:30;5668:33;5648:18;;;5641:61;5719:18;;8595:65:2;5388:355:12;8595:65:2;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;6024:25:12;;;8952:37:2;;5997:18:12;8952:37:2;;;;;;;9000:48;9028:1;9032:7;9041:6;12073:91;;;;:::o;14:290:12:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:12;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:12:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:12;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;952:518;;;:::o;1646:1345::-;1766:10;;-1:-1:-1;;;;;1788:30:12;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2059:2;2048:14;;2076:1;2071:663;;;;2778:1;2795:6;2792:89;;;-1:-1:-1;2847:19:12;;;2841:26;2792:89;-1:-1:-1;;1603:1:12;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2894:81;;2041:944;;2071:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2107:20:12;;;2225:236;2239:7;2236:1;2233:14;2225:236;;;2328:19;;;2322:26;2307:42;;2420:27;;;;2388:1;2376:14;;;;2255:19;;2225:236;;;2229:3;2489:6;2480:7;2477:19;2474:201;;;2550:19;;;2544:26;-1:-1:-1;;2633:1:12;2629:14;;;2645:3;2625:24;2621:37;2617:42;2602:58;2587:74;;2474:201;;;2721:1;2712:6;2709:1;2705:14;2701:22;2695:4;2688:36;2041:944;;;;;1646:1345;;:::o;3349:127::-;3410:10;3405:3;3401:20;3398:1;3391:31;3441:4;3438:1;3431:15;3465:4;3462:1;3455:15;3481:416;3570:1;3607:5;3570:1;3621:270;3642:7;3632:8;3629:21;3621:270;;;3701:4;3697:1;3693:6;3689:17;3683:4;3680:27;3677:53;;;3710:18;;:::i;:::-;3760:7;3750:8;3746:22;3743:55;;;3780:16;;;;3743:55;3859:22;;;;3819:15;;;;3621:270;;;3625:3;3481:416;;;;;:::o;3902:806::-;3951:5;3981:8;3971:80;;-1:-1:-1;4022:1:12;4036:5;;3971:80;4070:4;4060:76;;-1:-1:-1;4107:1:12;4121:5;;4060:76;4152:4;4170:1;4165:59;;;;4238:1;4233:130;;;;4145:218;;4165:59;4195:1;4186:10;;4209:5;;;4233:130;4270:3;4260:8;4257:17;4254:43;;;4277:18;;:::i;:::-;-1:-1:-1;;4333:1:12;4319:16;;4348:5;;4145:218;;4447:2;4437:8;4434:16;4428:3;4422:4;4419:13;4415:36;4409:2;4399:8;4396:16;4391:2;4385:4;4382:12;4378:35;4375:77;4372:159;;;-1:-1:-1;4484:19:12;;;4516:5;;4372:159;4563:34;4588:8;4582:4;4563:34;:::i;:::-;4633:6;4629:1;4625:6;4621:19;4612:7;4609:32;4606:58;;;4644:18;;:::i;:::-;4682:20;;3902:806;-1:-1:-1;;;3902:806:12:o;4713:140::-;4771:5;4800:47;4841:4;4831:8;4827:19;4821:4;4800:47;:::i;4858:168::-;4931:9;;;4962;;4979:15;;;4973:22;;4959:37;4949:71;;5000:18;;:::i;5748:125::-;5813:9;;;5834:10;;;5831:36;;;5847:18;;:::i;5878:177::-;186:878:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MULTISIG_ROLE_2349": {
									"entryPoint": null,
									"id": 2349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_974": {
									"entryPoint": null,
									"id": 974,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_909": {
									"entryPoint": 1515,
									"id": 909,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_864": {
									"entryPoint": 2592,
									"id": 864,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 2896,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 2344,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 2357,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1090": {
									"entryPoint": null,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_314": {
									"entryPoint": 2490,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_952": {
									"entryPoint": 1806,
									"id": 952,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_735": {
									"entryPoint": 1926,
									"id": 735,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_530": {
									"entryPoint": 1473,
									"id": 530,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_555": {
									"entryPoint": 930,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_487": {
									"entryPoint": null,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2433": {
									"entryPoint": 1250,
									"id": 2433,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_463": {
									"entryPoint": null,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_658": {
									"entryPoint": 1302,
									"id": 658,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_146": {
									"entryPoint": null,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 988,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 1193,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_617": {
									"entryPoint": 1160,
									"id": 617,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_443": {
									"entryPoint": 786,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_209": {
									"entryPoint": 1029,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 1437,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1352": {
									"entryPoint": null,
									"id": 1352,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_60": {
									"entryPoint": 732,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_453": {
									"entryPoint": 1235,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_1283": {
									"entryPoint": 3003,
									"id": 1283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1303": {
									"entryPoint": 2985,
									"id": 1303,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_473": {
									"entryPoint": null,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_588": {
									"entryPoint": 953,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_512": {
									"entryPoint": 1424,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9786:12",
										"nodeType": "YulBlock",
										"src": "0:9786:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:12",
													"nodeType": "YulBlock",
													"src": "83:217:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:12",
																"nodeType": "YulBlock",
																"src": "129:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:12",
																					"nodeType": "YulLiteral",
																					"src": "138:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:12",
																					"nodeType": "YulLiteral",
																					"src": "141:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:12"
																			},
																			"nativeSrc": "131:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:12"
																		},
																		"nativeSrc": "131:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:12"
																		},
																		"nativeSrc": "100:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:12",
																		"nodeType": "YulLiteral",
																		"src": "125:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:12"
																},
																"nativeSrc": "96:32:12",
																"nodeType": "YulFunctionCall",
																"src": "96:32:12"
															},
															"nativeSrc": "93:52:12",
															"nodeType": "YulIf",
															"src": "93:52:12"
														},
														{
															"nativeSrc": "154:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:12"
																},
																"nativeSrc": "167:23:12",
																"nodeType": "YulFunctionCall",
																"src": "167:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:12",
																	"nodeType": "YulTypedName",
																	"src": "158:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:12",
																"nodeType": "YulBlock",
																"src": "254:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:12",
																					"nodeType": "YulLiteral",
																					"src": "263:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:12",
																					"nodeType": "YulLiteral",
																					"src": "266:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:12"
																			},
																			"nativeSrc": "256:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:12"
																		},
																		"nativeSrc": "256:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:12",
																								"nodeType": "YulLiteral",
																								"src": "234:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:12",
																								"nodeType": "YulLiteral",
																								"src": "239:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:12"
																						},
																						"nativeSrc": "230:20:12",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:12"
																				},
																				"nativeSrc": "219:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:12"
																		},
																		"nativeSrc": "209:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:12"
																},
																"nativeSrc": "202:51:12",
																"nodeType": "YulFunctionCall",
																"src": "202:51:12"
															},
															"nativeSrc": "199:71:12",
															"nodeType": "YulIf",
															"src": "199:71:12"
														},
														{
															"nativeSrc": "279:15:12",
															"nodeType": "YulAssignment",
															"src": "279:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:12",
																"nodeType": "YulIdentifier",
																"src": "289:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:12",
														"nodeType": "YulTypedName",
														"src": "49:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:12",
														"nodeType": "YulTypedName",
														"src": "60:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:12",
														"nodeType": "YulTypedName",
														"src": "72:6:12",
														"type": ""
													}
												],
												"src": "14:286:12"
											},
											{
												"body": {
													"nativeSrc": "400:92:12",
													"nodeType": "YulBlock",
													"src": "400:92:12",
													"statements": [
														{
															"nativeSrc": "410:26:12",
															"nodeType": "YulAssignment",
															"src": "410:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:12",
																		"nodeType": "YulLiteral",
																		"src": "433:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:12"
																},
																"nativeSrc": "418:18:12",
																"nodeType": "YulFunctionCall",
																"src": "418:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:12"
																				},
																				"nativeSrc": "470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:12"
																		},
																		"nativeSrc": "463:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:12"
																},
																"nativeSrc": "445:41:12",
																"nodeType": "YulFunctionCall",
																"src": "445:41:12"
															},
															"nativeSrc": "445:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:12",
														"nodeType": "YulTypedName",
														"src": "369:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:12",
														"nodeType": "YulTypedName",
														"src": "380:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:12",
														"nodeType": "YulTypedName",
														"src": "391:4:12",
														"type": ""
													}
												],
												"src": "305:187:12"
											},
											{
												"body": {
													"nativeSrc": "563:184:12",
													"nodeType": "YulBlock",
													"src": "563:184:12",
													"statements": [
														{
															"nativeSrc": "573:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "573:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "582:1:12",
																"nodeType": "YulLiteral",
																"src": "582:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "577:1:12",
																	"nodeType": "YulTypedName",
																	"src": "577:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "642:63:12",
																"nodeType": "YulBlock",
																"src": "642:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "667:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "672:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "672:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "663:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "663:3:12"
																					},
																					"nativeSrc": "663:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "663:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "686:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "686:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "691:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "691:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "682:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "682:3:12"
																							},
																							"nativeSrc": "682:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "682:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "676:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "676:5:12"
																					},
																					"nativeSrc": "676:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "676:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "656:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "656:6:12"
																			},
																			"nativeSrc": "656:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "656:39:12"
																		},
																		"nativeSrc": "656:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "656:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "603:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "603:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "606:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "600:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "600:2:12"
																},
																"nativeSrc": "600:13:12",
																"nodeType": "YulFunctionCall",
																"src": "600:13:12"
															},
															"nativeSrc": "592:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "614:19:12",
																"nodeType": "YulBlock",
																"src": "614:19:12",
																"statements": [
																	{
																		"nativeSrc": "616:15:12",
																		"nodeType": "YulAssignment",
																		"src": "616:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "625:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "625:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "628:2:12",
																					"nodeType": "YulLiteral",
																					"src": "628:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "621:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "621:3:12"
																			},
																			"nativeSrc": "621:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "621:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "616:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "616:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "596:3:12",
																"nodeType": "YulBlock",
																"src": "596:3:12",
																"statements": []
															},
															"src": "592:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "725:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "725:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "730:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "721:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:12"
																		},
																		"nativeSrc": "721:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "721:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "739:1:12",
																		"nodeType": "YulLiteral",
																		"src": "739:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "714:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:6:12"
																},
																"nativeSrc": "714:27:12",
																"nodeType": "YulFunctionCall",
																"src": "714:27:12"
															},
															"nativeSrc": "714:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "497:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "541:3:12",
														"nodeType": "YulTypedName",
														"src": "541:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "546:3:12",
														"nodeType": "YulTypedName",
														"src": "546:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "551:6:12",
														"nodeType": "YulTypedName",
														"src": "551:6:12",
														"type": ""
													}
												],
												"src": "497:250:12"
											},
											{
												"body": {
													"nativeSrc": "873:275:12",
													"nodeType": "YulBlock",
													"src": "873:275:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "890:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "901:2:12",
																		"nodeType": "YulLiteral",
																		"src": "901:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "883:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "883:6:12"
																},
																"nativeSrc": "883:21:12",
																"nodeType": "YulFunctionCall",
																"src": "883:21:12"
															},
															"nativeSrc": "883:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "883:21:12"
														},
														{
															"nativeSrc": "913:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "913:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "933:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "933:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "927:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:12"
																},
																"nativeSrc": "927:13:12",
																"nodeType": "YulFunctionCall",
																"src": "927:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "917:6:12",
																	"nodeType": "YulTypedName",
																	"src": "917:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "960:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "971:2:12",
																				"nodeType": "YulLiteral",
																				"src": "971:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "956:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:12"
																		},
																		"nativeSrc": "956:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "956:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "976:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "949:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:12"
																},
																"nativeSrc": "949:34:12",
																"nodeType": "YulFunctionCall",
																"src": "949:34:12"
															},
															"nativeSrc": "949:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "949:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1031:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1031:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1039:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1039:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1027:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1027:3:12"
																		},
																		"nativeSrc": "1027:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1027:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1048:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1048:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1059:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1059:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1044:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1044:3:12"
																		},
																		"nativeSrc": "1044:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1044:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1064:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1064:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "992:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "992:34:12"
																},
																"nativeSrc": "992:79:12",
																"nodeType": "YulFunctionCall",
																"src": "992:79:12"
															},
															"nativeSrc": "992:79:12",
															"nodeType": "YulExpressionStatement",
															"src": "992:79:12"
														},
														{
															"nativeSrc": "1080:62:12",
															"nodeType": "YulAssignment",
															"src": "1080:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1096:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1096:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1115:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "1115:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1123:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1123:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:12"
																						},
																						"nativeSrc": "1111:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1132:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1132:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1128:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1128:3:12"
																						},
																						"nativeSrc": "1128:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1128:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1107:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1107:3:12"
																				},
																				"nativeSrc": "1107:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1107:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1092:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1092:3:12"
																		},
																		"nativeSrc": "1092:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1092:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1139:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1139:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1088:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:12"
																},
																"nativeSrc": "1088:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1088:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1080:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1080:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "752:396:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "842:9:12",
														"nodeType": "YulTypedName",
														"src": "842:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "853:6:12",
														"nodeType": "YulTypedName",
														"src": "853:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "864:4:12",
														"nodeType": "YulTypedName",
														"src": "864:4:12",
														"type": ""
													}
												],
												"src": "752:396:12"
											},
											{
												"body": {
													"nativeSrc": "1202:124:12",
													"nodeType": "YulBlock",
													"src": "1202:124:12",
													"statements": [
														{
															"nativeSrc": "1212:29:12",
															"nodeType": "YulAssignment",
															"src": "1212:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1234:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1234:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1221:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1221:12:12"
																},
																"nativeSrc": "1221:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1221:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1212:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1212:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1304:16:12",
																"nodeType": "YulBlock",
																"src": "1304:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1313:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1313:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1316:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1306:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1306:6:12"
																			},
																			"nativeSrc": "1306:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1306:12:12"
																		},
																		"nativeSrc": "1306:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1306:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1263:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1263:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1274:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1274:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1289:3:12",
																										"nodeType": "YulLiteral",
																										"src": "1289:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1294:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1294:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1285:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1285:3:12"
																								},
																								"nativeSrc": "1285:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1285:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1298:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1298:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1281:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1281:3:12"
																						},
																						"nativeSrc": "1281:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1281:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1270:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1270:3:12"
																				},
																				"nativeSrc": "1270:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1270:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1260:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1260:2:12"
																		},
																		"nativeSrc": "1260:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1260:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1253:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:12"
																},
																"nativeSrc": "1253:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1253:50:12"
															},
															"nativeSrc": "1250:70:12",
															"nodeType": "YulIf",
															"src": "1250:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1153:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1181:6:12",
														"nodeType": "YulTypedName",
														"src": "1181:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1192:5:12",
														"nodeType": "YulTypedName",
														"src": "1192:5:12",
														"type": ""
													}
												],
												"src": "1153:173:12"
											},
											{
												"body": {
													"nativeSrc": "1418:167:12",
													"nodeType": "YulBlock",
													"src": "1418:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:12",
																"nodeType": "YulBlock",
																"src": "1464:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:12"
																			},
																			"nativeSrc": "1466:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:12"
																		},
																		"nativeSrc": "1466:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:12"
																		},
																		"nativeSrc": "1435:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:12"
																},
																"nativeSrc": "1431:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:12"
															},
															"nativeSrc": "1428:52:12",
															"nodeType": "YulIf",
															"src": "1428:52:12"
														},
														{
															"nativeSrc": "1489:39:12",
															"nodeType": "YulAssignment",
															"src": "1489:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1518:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1518:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1499:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1499:18:12"
																},
																"nativeSrc": "1499:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1499:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:12"
																}
															]
														},
														{
															"nativeSrc": "1537:42:12",
															"nodeType": "YulAssignment",
															"src": "1537:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1564:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1564:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1575:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1575:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1560:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1560:3:12"
																		},
																		"nativeSrc": "1560:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1560:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1547:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1547:12:12"
																},
																"nativeSrc": "1547:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1547:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1537:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1331:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1376:9:12",
														"nodeType": "YulTypedName",
														"src": "1376:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1387:7:12",
														"nodeType": "YulTypedName",
														"src": "1387:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1399:6:12",
														"nodeType": "YulTypedName",
														"src": "1399:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1407:6:12",
														"nodeType": "YulTypedName",
														"src": "1407:6:12",
														"type": ""
													}
												],
												"src": "1331:254:12"
											},
											{
												"body": {
													"nativeSrc": "1691:76:12",
													"nodeType": "YulBlock",
													"src": "1691:76:12",
													"statements": [
														{
															"nativeSrc": "1701:26:12",
															"nodeType": "YulAssignment",
															"src": "1701:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1713:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1713:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1724:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1724:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1709:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1709:3:12"
																},
																"nativeSrc": "1709:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1709:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1701:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1701:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1743:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1743:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1754:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1754:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:12"
																},
																"nativeSrc": "1736:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1736:25:12"
															},
															"nativeSrc": "1736:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1736:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1590:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1660:9:12",
														"nodeType": "YulTypedName",
														"src": "1660:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1671:6:12",
														"nodeType": "YulTypedName",
														"src": "1671:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1682:4:12",
														"nodeType": "YulTypedName",
														"src": "1682:4:12",
														"type": ""
													}
												],
												"src": "1590:177:12"
											},
											{
												"body": {
													"nativeSrc": "1876:224:12",
													"nodeType": "YulBlock",
													"src": "1876:224:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1922:16:12",
																"nodeType": "YulBlock",
																"src": "1922:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1931:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1934:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1934:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1924:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:12"
																			},
																			"nativeSrc": "1924:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1924:12:12"
																		},
																		"nativeSrc": "1924:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1897:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1897:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1906:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1906:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1893:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1893:3:12"
																		},
																		"nativeSrc": "1893:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1918:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1889:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1889:3:12"
																},
																"nativeSrc": "1889:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1889:32:12"
															},
															"nativeSrc": "1886:52:12",
															"nodeType": "YulIf",
															"src": "1886:52:12"
														},
														{
															"nativeSrc": "1947:39:12",
															"nodeType": "YulAssignment",
															"src": "1947:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1976:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1976:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1957:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1957:18:12"
																},
																"nativeSrc": "1957:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1957:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:12"
																}
															]
														},
														{
															"nativeSrc": "1995:48:12",
															"nodeType": "YulAssignment",
															"src": "1995:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2028:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2028:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2039:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2039:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2024:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:12"
																		},
																		"nativeSrc": "2024:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2005:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2005:18:12"
																},
																"nativeSrc": "2005:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2005:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1995:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1995:6:12"
																}
															]
														},
														{
															"nativeSrc": "2052:42:12",
															"nodeType": "YulAssignment",
															"src": "2052:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2079:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2079:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2090:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2090:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2075:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2075:3:12"
																		},
																		"nativeSrc": "2075:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2075:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2062:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2062:12:12"
																},
																"nativeSrc": "2062:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2062:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2052:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1772:328:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1826:9:12",
														"nodeType": "YulTypedName",
														"src": "1826:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1837:7:12",
														"nodeType": "YulTypedName",
														"src": "1837:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1849:6:12",
														"nodeType": "YulTypedName",
														"src": "1849:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1857:6:12",
														"nodeType": "YulTypedName",
														"src": "1857:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1865:6:12",
														"nodeType": "YulTypedName",
														"src": "1865:6:12",
														"type": ""
													}
												],
												"src": "1772:328:12"
											},
											{
												"body": {
													"nativeSrc": "2175:110:12",
													"nodeType": "YulBlock",
													"src": "2175:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2221:16:12",
																"nodeType": "YulBlock",
																"src": "2221:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2230:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2230:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2223:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:12"
																			},
																			"nativeSrc": "2223:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:12:12"
																		},
																		"nativeSrc": "2223:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2196:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2196:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2205:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2205:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:12"
																		},
																		"nativeSrc": "2192:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2192:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2217:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2217:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2188:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:12"
																},
																"nativeSrc": "2188:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2188:32:12"
															},
															"nativeSrc": "2185:52:12",
															"nodeType": "YulIf",
															"src": "2185:52:12"
														},
														{
															"nativeSrc": "2246:33:12",
															"nodeType": "YulAssignment",
															"src": "2246:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2269:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2269:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2256:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2256:12:12"
																},
																"nativeSrc": "2256:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2256:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2105:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2141:9:12",
														"nodeType": "YulTypedName",
														"src": "2141:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2152:7:12",
														"nodeType": "YulTypedName",
														"src": "2152:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2164:6:12",
														"nodeType": "YulTypedName",
														"src": "2164:6:12",
														"type": ""
													}
												],
												"src": "2105:180:12"
											},
											{
												"body": {
													"nativeSrc": "2391:76:12",
													"nodeType": "YulBlock",
													"src": "2391:76:12",
													"statements": [
														{
															"nativeSrc": "2401:26:12",
															"nodeType": "YulAssignment",
															"src": "2401:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2413:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2413:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2424:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2424:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2409:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:3:12"
																},
																"nativeSrc": "2409:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2401:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2401:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2443:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2443:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2454:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2436:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:12"
																},
																"nativeSrc": "2436:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2436:25:12"
															},
															"nativeSrc": "2436:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2436:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2290:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2360:9:12",
														"nodeType": "YulTypedName",
														"src": "2360:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2371:6:12",
														"nodeType": "YulTypedName",
														"src": "2371:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2382:4:12",
														"nodeType": "YulTypedName",
														"src": "2382:4:12",
														"type": ""
													}
												],
												"src": "2290:177:12"
											},
											{
												"body": {
													"nativeSrc": "2559:167:12",
													"nodeType": "YulBlock",
													"src": "2559:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2605:16:12",
																"nodeType": "YulBlock",
																"src": "2605:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2614:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2614:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2617:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2607:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2607:6:12"
																			},
																			"nativeSrc": "2607:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2607:12:12"
																		},
																		"nativeSrc": "2607:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2607:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2580:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2580:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2589:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2589:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2576:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:12"
																		},
																		"nativeSrc": "2576:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2601:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2601:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2572:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2572:3:12"
																},
																"nativeSrc": "2572:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2572:32:12"
															},
															"nativeSrc": "2569:52:12",
															"nodeType": "YulIf",
															"src": "2569:52:12"
														},
														{
															"nativeSrc": "2630:33:12",
															"nodeType": "YulAssignment",
															"src": "2630:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2653:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2653:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2640:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2640:12:12"
																},
																"nativeSrc": "2640:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2640:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2630:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:12"
																}
															]
														},
														{
															"nativeSrc": "2672:48:12",
															"nodeType": "YulAssignment",
															"src": "2672:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2705:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2705:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2716:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:12"
																		},
																		"nativeSrc": "2701:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2682:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2682:18:12"
																},
																"nativeSrc": "2682:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2682:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2672:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2472:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2517:9:12",
														"nodeType": "YulTypedName",
														"src": "2517:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2528:7:12",
														"nodeType": "YulTypedName",
														"src": "2528:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2540:6:12",
														"nodeType": "YulTypedName",
														"src": "2540:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2548:6:12",
														"nodeType": "YulTypedName",
														"src": "2548:6:12",
														"type": ""
													}
												],
												"src": "2472:254:12"
											},
											{
												"body": {
													"nativeSrc": "2828:87:12",
													"nodeType": "YulBlock",
													"src": "2828:87:12",
													"statements": [
														{
															"nativeSrc": "2838:26:12",
															"nodeType": "YulAssignment",
															"src": "2838:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2850:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2850:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2861:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2861:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2846:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2846:3:12"
																},
																"nativeSrc": "2846:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2846:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2838:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2838:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2880:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2880:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2895:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2903:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2891:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:12"
																		},
																		"nativeSrc": "2891:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2891:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2873:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:12"
																},
																"nativeSrc": "2873:36:12",
																"nodeType": "YulFunctionCall",
																"src": "2873:36:12"
															},
															"nativeSrc": "2873:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "2873:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2731:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2797:9:12",
														"nodeType": "YulTypedName",
														"src": "2797:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2808:6:12",
														"nodeType": "YulTypedName",
														"src": "2808:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2819:4:12",
														"nodeType": "YulTypedName",
														"src": "2819:4:12",
														"type": ""
													}
												],
												"src": "2731:184:12"
											},
											{
												"body": {
													"nativeSrc": "2990:116:12",
													"nodeType": "YulBlock",
													"src": "2990:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3036:16:12",
																"nodeType": "YulBlock",
																"src": "3036:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3045:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3045:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3048:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3048:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3038:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3038:6:12"
																			},
																			"nativeSrc": "3038:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3038:12:12"
																		},
																		"nativeSrc": "3038:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3038:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3011:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3011:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3020:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3020:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3007:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3007:3:12"
																		},
																		"nativeSrc": "3007:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3007:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3032:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3032:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3003:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3003:3:12"
																},
																"nativeSrc": "3003:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3003:32:12"
															},
															"nativeSrc": "3000:52:12",
															"nodeType": "YulIf",
															"src": "3000:52:12"
														},
														{
															"nativeSrc": "3061:39:12",
															"nodeType": "YulAssignment",
															"src": "3061:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3090:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3090:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3071:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3071:18:12"
																},
																"nativeSrc": "3071:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3071:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3061:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3061:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2920:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2956:9:12",
														"nodeType": "YulTypedName",
														"src": "2956:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2967:7:12",
														"nodeType": "YulTypedName",
														"src": "2967:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2979:6:12",
														"nodeType": "YulTypedName",
														"src": "2979:6:12",
														"type": ""
													}
												],
												"src": "2920:186:12"
											},
											{
												"body": {
													"nativeSrc": "3198:173:12",
													"nodeType": "YulBlock",
													"src": "3198:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3244:16:12",
																"nodeType": "YulBlock",
																"src": "3244:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3253:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3253:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3256:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3256:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3246:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3246:6:12"
																			},
																			"nativeSrc": "3246:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3246:12:12"
																		},
																		"nativeSrc": "3246:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3246:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3219:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3219:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3228:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3215:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:12"
																		},
																		"nativeSrc": "3215:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3215:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3240:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3240:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3211:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3211:3:12"
																},
																"nativeSrc": "3211:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3211:32:12"
															},
															"nativeSrc": "3208:52:12",
															"nodeType": "YulIf",
															"src": "3208:52:12"
														},
														{
															"nativeSrc": "3269:39:12",
															"nodeType": "YulAssignment",
															"src": "3269:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3298:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3298:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3279:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3279:18:12"
																},
																"nativeSrc": "3279:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3279:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3269:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:12"
																}
															]
														},
														{
															"nativeSrc": "3317:48:12",
															"nodeType": "YulAssignment",
															"src": "3317:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3350:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3350:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3361:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3361:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3346:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3346:3:12"
																		},
																		"nativeSrc": "3346:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3346:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3327:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3327:18:12"
																},
																"nativeSrc": "3327:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3327:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3317:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3317:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3111:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3156:9:12",
														"nodeType": "YulTypedName",
														"src": "3156:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3167:7:12",
														"nodeType": "YulTypedName",
														"src": "3167:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3179:6:12",
														"nodeType": "YulTypedName",
														"src": "3179:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3187:6:12",
														"nodeType": "YulTypedName",
														"src": "3187:6:12",
														"type": ""
													}
												],
												"src": "3111:260:12"
											},
											{
												"body": {
													"nativeSrc": "3431:325:12",
													"nodeType": "YulBlock",
													"src": "3431:325:12",
													"statements": [
														{
															"nativeSrc": "3441:22:12",
															"nodeType": "YulAssignment",
															"src": "3441:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3455:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3455:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3458:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3458:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3451:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3451:3:12"
																},
																"nativeSrc": "3451:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3451:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3441:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:12"
																}
															]
														},
														{
															"nativeSrc": "3472:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3472:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3502:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3502:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3508:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:12"
																},
																"nativeSrc": "3498:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3498:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3476:18:12",
																	"nodeType": "YulTypedName",
																	"src": "3476:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3549:31:12",
																"nodeType": "YulBlock",
																"src": "3549:31:12",
																"statements": [
																	{
																		"nativeSrc": "3551:27:12",
																		"nodeType": "YulAssignment",
																		"src": "3551:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3565:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3565:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3573:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3573:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3561:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3561:3:12"
																			},
																			"nativeSrc": "3561:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3561:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3551:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3551:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3529:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3529:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3522:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:12"
																},
																"nativeSrc": "3522:26:12",
																"nodeType": "YulFunctionCall",
																"src": "3522:26:12"
															},
															"nativeSrc": "3519:61:12",
															"nodeType": "YulIf",
															"src": "3519:61:12"
														},
														{
															"body": {
																"nativeSrc": "3639:111:12",
																"nodeType": "YulBlock",
																"src": "3639:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3660:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3660:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3667:3:12",
																							"nodeType": "YulLiteral",
																							"src": "3667:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3672:10:12",
																							"nodeType": "YulLiteral",
																							"src": "3672:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3663:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3663:3:12"
																					},
																					"nativeSrc": "3663:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3663:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3653:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3653:6:12"
																			},
																			"nativeSrc": "3653:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3653:31:12"
																		},
																		"nativeSrc": "3653:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3653:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3704:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3704:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3707:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3707:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3697:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3697:6:12"
																			},
																			"nativeSrc": "3697:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3697:15:12"
																		},
																		"nativeSrc": "3697:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3697:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3732:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3732:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3735:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3735:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3725:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3725:6:12"
																			},
																			"nativeSrc": "3725:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3725:15:12"
																		},
																		"nativeSrc": "3725:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3725:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3595:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3595:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3618:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3618:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3626:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3626:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3615:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3615:2:12"
																		},
																		"nativeSrc": "3615:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3615:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3592:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3592:2:12"
																},
																"nativeSrc": "3592:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3592:38:12"
															},
															"nativeSrc": "3589:161:12",
															"nodeType": "YulIf",
															"src": "3589:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3376:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3411:4:12",
														"nodeType": "YulTypedName",
														"src": "3411:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3420:6:12",
														"nodeType": "YulTypedName",
														"src": "3420:6:12",
														"type": ""
													}
												],
												"src": "3376:380:12"
											},
											{
												"body": {
													"nativeSrc": "3935:237:12",
													"nodeType": "YulBlock",
													"src": "3935:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3952:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3952:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3963:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3945:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3945:6:12"
																},
																"nativeSrc": "3945:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3945:21:12"
															},
															"nativeSrc": "3945:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3945:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3986:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3986:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3997:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3997:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3982:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:12"
																		},
																		"nativeSrc": "3982:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4002:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4002:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3975:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3975:6:12"
																},
																"nativeSrc": "3975:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3975:30:12"
															},
															"nativeSrc": "3975:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3975:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4025:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4025:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4036:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4021:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4021:3:12"
																		},
																		"nativeSrc": "4021:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4021:18:12"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "4041:34:12",
																		"nodeType": "YulLiteral",
																		"src": "4041:34:12",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4014:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4014:6:12"
																},
																"nativeSrc": "4014:62:12",
																"nodeType": "YulFunctionCall",
																"src": "4014:62:12"
															},
															"nativeSrc": "4014:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "4014:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4096:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4096:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4107:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4107:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4092:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4092:3:12"
																		},
																		"nativeSrc": "4092:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4092:18:12"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "4112:17:12",
																		"nodeType": "YulLiteral",
																		"src": "4112:17:12",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4085:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4085:6:12"
																},
																"nativeSrc": "4085:45:12",
																"nodeType": "YulFunctionCall",
																"src": "4085:45:12"
															},
															"nativeSrc": "4085:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "4085:45:12"
														},
														{
															"nativeSrc": "4139:27:12",
															"nodeType": "YulAssignment",
															"src": "4139:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4151:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4151:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4162:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4162:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4147:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:12"
																},
																"nativeSrc": "4147:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4147:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4139:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4139:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3761:411:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3912:9:12",
														"nodeType": "YulTypedName",
														"src": "3912:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3926:4:12",
														"nodeType": "YulTypedName",
														"src": "3926:4:12",
														"type": ""
													}
												],
												"src": "3761:411:12"
											},
											{
												"body": {
													"nativeSrc": "4209:95:12",
													"nodeType": "YulBlock",
													"src": "4209:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4226:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4226:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4233:3:12",
																				"nodeType": "YulLiteral",
																				"src": "4233:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4238:10:12",
																				"nodeType": "YulLiteral",
																				"src": "4238:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4229:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:12"
																		},
																		"nativeSrc": "4229:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4229:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4219:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4219:6:12"
																},
																"nativeSrc": "4219:31:12",
																"nodeType": "YulFunctionCall",
																"src": "4219:31:12"
															},
															"nativeSrc": "4219:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "4219:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4266:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4269:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4269:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4259:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:12"
																},
																"nativeSrc": "4259:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4259:15:12"
															},
															"nativeSrc": "4259:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4259:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4290:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4290:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4293:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4293:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4283:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:12"
																},
																"nativeSrc": "4283:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4283:15:12"
															},
															"nativeSrc": "4283:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4283:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4177:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4177:127:12"
											},
											{
												"body": {
													"nativeSrc": "4357:77:12",
													"nodeType": "YulBlock",
													"src": "4357:77:12",
													"statements": [
														{
															"nativeSrc": "4367:16:12",
															"nodeType": "YulAssignment",
															"src": "4367:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4378:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4378:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4381:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4381:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4374:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:12"
																},
																"nativeSrc": "4374:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4374:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4367:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4367:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4406:22:12",
																"nodeType": "YulBlock",
																"src": "4406:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4408:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4408:16:12"
																			},
																			"nativeSrc": "4408:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4408:18:12"
																		},
																		"nativeSrc": "4408:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4408:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4398:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4398:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4401:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4401:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4395:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4395:2:12"
																},
																"nativeSrc": "4395:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4395:10:12"
															},
															"nativeSrc": "4392:36:12",
															"nodeType": "YulIf",
															"src": "4392:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4309:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4340:1:12",
														"nodeType": "YulTypedName",
														"src": "4340:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4343:1:12",
														"nodeType": "YulTypedName",
														"src": "4343:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4349:3:12",
														"nodeType": "YulTypedName",
														"src": "4349:3:12",
														"type": ""
													}
												],
												"src": "4309:125:12"
											},
											{
												"body": {
													"nativeSrc": "4613:227:12",
													"nodeType": "YulBlock",
													"src": "4613:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4630:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4630:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4641:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4641:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4623:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:12"
																},
																"nativeSrc": "4623:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4623:21:12"
															},
															"nativeSrc": "4623:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4623:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4664:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4675:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4660:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:12"
																		},
																		"nativeSrc": "4660:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4660:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4680:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4680:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4653:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4653:6:12"
																},
																"nativeSrc": "4653:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4653:30:12"
															},
															"nativeSrc": "4653:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4653:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4703:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4703:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4714:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4714:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4699:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4699:3:12"
																		},
																		"nativeSrc": "4699:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4699:18:12"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "4719:34:12",
																		"nodeType": "YulLiteral",
																		"src": "4719:34:12",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4692:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:12"
																},
																"nativeSrc": "4692:62:12",
																"nodeType": "YulFunctionCall",
																"src": "4692:62:12"
															},
															"nativeSrc": "4692:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "4692:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4774:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4774:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4785:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4785:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4770:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4770:3:12"
																		},
																		"nativeSrc": "4770:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4770:18:12"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "4790:7:12",
																		"nodeType": "YulLiteral",
																		"src": "4790:7:12",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4763:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:12"
																},
																"nativeSrc": "4763:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4763:35:12"
															},
															"nativeSrc": "4763:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4763:35:12"
														},
														{
															"nativeSrc": "4807:27:12",
															"nodeType": "YulAssignment",
															"src": "4807:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4819:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4819:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4830:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4830:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4815:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4815:3:12"
																},
																"nativeSrc": "4815:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4815:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4807:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4807:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4439:401:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4590:9:12",
														"nodeType": "YulTypedName",
														"src": "4590:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4604:4:12",
														"nodeType": "YulTypedName",
														"src": "4604:4:12",
														"type": ""
													}
												],
												"src": "4439:401:12"
											},
											{
												"body": {
													"nativeSrc": "5019:226:12",
													"nodeType": "YulBlock",
													"src": "5019:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5036:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5047:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5029:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:12"
																},
																"nativeSrc": "5029:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5029:21:12"
															},
															"nativeSrc": "5029:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5029:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5070:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5070:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5081:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5081:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5066:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5066:3:12"
																		},
																		"nativeSrc": "5066:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5066:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5086:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5059:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5059:6:12"
																},
																"nativeSrc": "5059:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5059:30:12"
															},
															"nativeSrc": "5059:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5059:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5109:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5120:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5120:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5105:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:12"
																		},
																		"nativeSrc": "5105:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "5125:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5125:34:12",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5098:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:12"
																},
																"nativeSrc": "5098:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5098:62:12"
															},
															"nativeSrc": "5098:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5098:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5180:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5180:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5191:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5191:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5176:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5176:3:12"
																		},
																		"nativeSrc": "5176:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5176:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "5196:6:12",
																		"nodeType": "YulLiteral",
																		"src": "5196:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5169:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5169:6:12"
																},
																"nativeSrc": "5169:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5169:34:12"
															},
															"nativeSrc": "5169:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5169:34:12"
														},
														{
															"nativeSrc": "5212:27:12",
															"nodeType": "YulAssignment",
															"src": "5212:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5224:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5235:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5235:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5220:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5220:3:12"
																},
																"nativeSrc": "5220:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5220:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5212:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5212:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4845:400:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4996:9:12",
														"nodeType": "YulTypedName",
														"src": "4996:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5010:4:12",
														"nodeType": "YulTypedName",
														"src": "5010:4:12",
														"type": ""
													}
												],
												"src": "4845:400:12"
											},
											{
												"body": {
													"nativeSrc": "5424:224:12",
													"nodeType": "YulBlock",
													"src": "5424:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5441:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5441:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5452:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5452:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5434:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:12"
																},
																"nativeSrc": "5434:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5434:21:12"
															},
															"nativeSrc": "5434:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5434:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5475:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5475:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5486:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5486:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5471:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5471:3:12"
																		},
																		"nativeSrc": "5471:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5471:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5491:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5491:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5464:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:12"
																},
																"nativeSrc": "5464:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5464:30:12"
															},
															"nativeSrc": "5464:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5464:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5514:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5514:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5525:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5525:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5510:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:12"
																		},
																		"nativeSrc": "5510:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5510:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "5530:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5530:34:12",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5503:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5503:6:12"
																},
																"nativeSrc": "5503:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5503:62:12"
															},
															"nativeSrc": "5503:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5503:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5585:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5585:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5596:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5596:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5581:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5581:3:12"
																		},
																		"nativeSrc": "5581:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5581:18:12"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "5601:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5601:4:12",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5574:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5574:6:12"
																},
																"nativeSrc": "5574:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5574:32:12"
															},
															"nativeSrc": "5574:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "5574:32:12"
														},
														{
															"nativeSrc": "5615:27:12",
															"nodeType": "YulAssignment",
															"src": "5615:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5627:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5627:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5638:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5638:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5623:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:12"
																},
																"nativeSrc": "5623:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5623:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5615:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5615:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5250:398:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5401:9:12",
														"nodeType": "YulTypedName",
														"src": "5401:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5415:4:12",
														"nodeType": "YulTypedName",
														"src": "5415:4:12",
														"type": ""
													}
												],
												"src": "5250:398:12"
											},
											{
												"body": {
													"nativeSrc": "5827:179:12",
													"nodeType": "YulBlock",
													"src": "5827:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5844:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5844:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5855:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5837:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5837:6:12"
																},
																"nativeSrc": "5837:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5837:21:12"
															},
															"nativeSrc": "5837:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5837:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5878:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5878:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5889:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5889:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5874:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:12"
																		},
																		"nativeSrc": "5874:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5874:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5894:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5894:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5867:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:12"
																},
																"nativeSrc": "5867:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5867:30:12"
															},
															"nativeSrc": "5867:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5867:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5917:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5917:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5928:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5928:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5913:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5913:3:12"
																		},
																		"nativeSrc": "5913:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5913:18:12"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "5933:31:12",
																		"nodeType": "YulLiteral",
																		"src": "5933:31:12",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5906:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5906:6:12"
																},
																"nativeSrc": "5906:59:12",
																"nodeType": "YulFunctionCall",
																"src": "5906:59:12"
															},
															"nativeSrc": "5906:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "5906:59:12"
														},
														{
															"nativeSrc": "5974:26:12",
															"nodeType": "YulAssignment",
															"src": "5974:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5986:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5986:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5997:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5997:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5982:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:12"
																},
																"nativeSrc": "5982:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5982:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5974:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5974:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5653:353:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5804:9:12",
														"nodeType": "YulTypedName",
														"src": "5804:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5818:4:12",
														"nodeType": "YulTypedName",
														"src": "5818:4:12",
														"type": ""
													}
												],
												"src": "5653:353:12"
											},
											{
												"body": {
													"nativeSrc": "6185:227:12",
													"nodeType": "YulBlock",
													"src": "6185:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6202:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6202:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6213:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6213:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6195:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:12"
																},
																"nativeSrc": "6195:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6195:21:12"
															},
															"nativeSrc": "6195:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6195:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6236:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6236:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6247:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6247:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6232:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6232:3:12"
																		},
																		"nativeSrc": "6232:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6232:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6252:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6252:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6225:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6225:6:12"
																},
																"nativeSrc": "6225:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6225:30:12"
															},
															"nativeSrc": "6225:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6225:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6275:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6275:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6286:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6286:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6271:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6271:3:12"
																		},
																		"nativeSrc": "6271:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6271:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "6291:34:12",
																		"nodeType": "YulLiteral",
																		"src": "6291:34:12",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:12"
																},
																"nativeSrc": "6264:62:12",
																"nodeType": "YulFunctionCall",
																"src": "6264:62:12"
															},
															"nativeSrc": "6264:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "6264:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6346:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6346:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6357:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6357:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6342:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6342:3:12"
																		},
																		"nativeSrc": "6342:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6342:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "6362:7:12",
																		"nodeType": "YulLiteral",
																		"src": "6362:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6335:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6335:6:12"
																},
																"nativeSrc": "6335:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6335:35:12"
															},
															"nativeSrc": "6335:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6335:35:12"
														},
														{
															"nativeSrc": "6379:27:12",
															"nodeType": "YulAssignment",
															"src": "6379:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6391:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6391:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6402:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6402:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6387:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6387:3:12"
																},
																"nativeSrc": "6387:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6387:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6379:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6379:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6011:401:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6162:9:12",
														"nodeType": "YulTypedName",
														"src": "6162:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6176:4:12",
														"nodeType": "YulTypedName",
														"src": "6176:4:12",
														"type": ""
													}
												],
												"src": "6011:401:12"
											},
											{
												"body": {
													"nativeSrc": "6591:225:12",
													"nodeType": "YulBlock",
													"src": "6591:225:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6608:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6608:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6619:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6619:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6601:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:12"
																},
																"nativeSrc": "6601:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6601:21:12"
															},
															"nativeSrc": "6601:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6601:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6642:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6653:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6638:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:12"
																		},
																		"nativeSrc": "6638:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6658:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:12",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6631:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:12"
																},
																"nativeSrc": "6631:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6631:30:12"
															},
															"nativeSrc": "6631:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6631:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6681:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6681:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6692:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6692:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6677:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6677:3:12"
																		},
																		"nativeSrc": "6677:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6677:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "6697:34:12",
																		"nodeType": "YulLiteral",
																		"src": "6697:34:12",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6670:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:12"
																},
																"nativeSrc": "6670:62:12",
																"nodeType": "YulFunctionCall",
																"src": "6670:62:12"
															},
															"nativeSrc": "6670:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "6670:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6752:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6752:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6763:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6763:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6748:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6748:3:12"
																		},
																		"nativeSrc": "6748:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6748:18:12"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "6768:5:12",
																		"nodeType": "YulLiteral",
																		"src": "6768:5:12",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6741:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:12"
																},
																"nativeSrc": "6741:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6741:33:12"
															},
															"nativeSrc": "6741:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "6741:33:12"
														},
														{
															"nativeSrc": "6783:27:12",
															"nodeType": "YulAssignment",
															"src": "6783:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6795:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6795:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6806:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6806:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:12"
																},
																"nativeSrc": "6791:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6791:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6783:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6783:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6417:399:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6568:9:12",
														"nodeType": "YulTypedName",
														"src": "6568:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6582:4:12",
														"nodeType": "YulTypedName",
														"src": "6582:4:12",
														"type": ""
													}
												],
												"src": "6417:399:12"
											},
											{
												"body": {
													"nativeSrc": "6995:228:12",
													"nodeType": "YulBlock",
													"src": "6995:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7012:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7023:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7023:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7005:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7005:6:12"
																},
																"nativeSrc": "7005:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7005:21:12"
															},
															"nativeSrc": "7005:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7005:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7046:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7046:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7057:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7057:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7042:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7042:3:12"
																		},
																		"nativeSrc": "7042:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7042:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7062:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7035:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7035:6:12"
																},
																"nativeSrc": "7035:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7035:30:12"
															},
															"nativeSrc": "7035:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7035:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7085:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7085:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7096:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7096:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7081:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:12"
																		},
																		"nativeSrc": "7081:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7081:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "7101:34:12",
																		"nodeType": "YulLiteral",
																		"src": "7101:34:12",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7074:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:12"
																},
																"nativeSrc": "7074:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7074:62:12"
															},
															"nativeSrc": "7074:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "7074:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7156:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7156:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7167:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7167:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7152:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7152:3:12"
																		},
																		"nativeSrc": "7152:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7152:18:12"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7172:8:12",
																		"nodeType": "YulLiteral",
																		"src": "7172:8:12",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7145:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7145:6:12"
																},
																"nativeSrc": "7145:36:12",
																"nodeType": "YulFunctionCall",
																"src": "7145:36:12"
															},
															"nativeSrc": "7145:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "7145:36:12"
														},
														{
															"nativeSrc": "7190:27:12",
															"nodeType": "YulAssignment",
															"src": "7190:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7202:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7202:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7213:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7213:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7198:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7198:3:12"
																},
																"nativeSrc": "7198:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7198:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7190:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7190:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6821:402:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6972:9:12",
														"nodeType": "YulTypedName",
														"src": "6972:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6986:4:12",
														"nodeType": "YulTypedName",
														"src": "6986:4:12",
														"type": ""
													}
												],
												"src": "6821:402:12"
											},
											{
												"body": {
													"nativeSrc": "7402:223:12",
													"nodeType": "YulBlock",
													"src": "7402:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7419:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7419:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7430:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7430:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7412:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7412:6:12"
																},
																"nativeSrc": "7412:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7412:21:12"
															},
															"nativeSrc": "7412:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7412:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7453:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7453:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7464:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7464:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7449:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7449:3:12"
																		},
																		"nativeSrc": "7449:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7449:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7469:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7469:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7442:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7442:6:12"
																},
																"nativeSrc": "7442:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7442:30:12"
															},
															"nativeSrc": "7442:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7442:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7492:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7492:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7503:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7503:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7488:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7488:3:12"
																		},
																		"nativeSrc": "7488:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7488:18:12"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "7508:34:12",
																		"nodeType": "YulLiteral",
																		"src": "7508:34:12",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7481:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7481:6:12"
																},
																"nativeSrc": "7481:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7481:62:12"
															},
															"nativeSrc": "7481:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "7481:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7563:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7563:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7574:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7574:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7559:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7559:3:12"
																		},
																		"nativeSrc": "7559:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7559:18:12"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "7579:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7579:3:12",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7552:6:12"
																},
																"nativeSrc": "7552:31:12",
																"nodeType": "YulFunctionCall",
																"src": "7552:31:12"
															},
															"nativeSrc": "7552:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "7552:31:12"
														},
														{
															"nativeSrc": "7592:27:12",
															"nodeType": "YulAssignment",
															"src": "7592:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7604:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7604:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7615:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7615:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7600:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7600:3:12"
																},
																"nativeSrc": "7600:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7600:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7592:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7592:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7228:397:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7379:9:12",
														"nodeType": "YulTypedName",
														"src": "7379:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7393:4:12",
														"nodeType": "YulTypedName",
														"src": "7393:4:12",
														"type": ""
													}
												],
												"src": "7228:397:12"
											},
											{
												"body": {
													"nativeSrc": "7804:224:12",
													"nodeType": "YulBlock",
													"src": "7804:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7821:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7821:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7832:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7832:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7814:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:12"
																},
																"nativeSrc": "7814:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7814:21:12"
															},
															"nativeSrc": "7814:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7814:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7855:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7855:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7866:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7866:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7851:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7851:3:12"
																		},
																		"nativeSrc": "7851:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7851:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7871:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7871:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7844:6:12"
																},
																"nativeSrc": "7844:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7844:30:12"
															},
															"nativeSrc": "7844:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7844:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7894:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7894:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7905:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7905:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7890:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7890:3:12"
																		},
																		"nativeSrc": "7890:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7890:18:12"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "7910:34:12",
																		"nodeType": "YulLiteral",
																		"src": "7910:34:12",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7883:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7883:6:12"
																},
																"nativeSrc": "7883:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7883:62:12"
															},
															"nativeSrc": "7883:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "7883:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7965:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7965:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7976:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7976:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7961:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7961:3:12"
																		},
																		"nativeSrc": "7961:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7961:18:12"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "7981:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7981:4:12",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7954:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7954:6:12"
																},
																"nativeSrc": "7954:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7954:32:12"
															},
															"nativeSrc": "7954:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "7954:32:12"
														},
														{
															"nativeSrc": "7995:27:12",
															"nodeType": "YulAssignment",
															"src": "7995:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8007:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8007:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8018:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8018:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8003:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8003:3:12"
																},
																"nativeSrc": "8003:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8003:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7995:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7995:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7630:398:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7781:9:12",
														"nodeType": "YulTypedName",
														"src": "7781:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7795:4:12",
														"nodeType": "YulTypedName",
														"src": "7795:4:12",
														"type": ""
													}
												],
												"src": "7630:398:12"
											},
											{
												"body": {
													"nativeSrc": "8422:423:12",
													"nodeType": "YulBlock",
													"src": "8422:423:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8439:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8439:3:12"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "8444:25:12",
																		"nodeType": "YulLiteral",
																		"src": "8444:25:12",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:12"
																},
																"nativeSrc": "8432:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8432:38:12"
															},
															"nativeSrc": "8432:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "8432:38:12"
														},
														{
															"nativeSrc": "8479:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8479:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8499:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8499:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8493:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8493:5:12"
																},
																"nativeSrc": "8493:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8493:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8483:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8483:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8554:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8554:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8562:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8562:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8550:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8550:3:12"
																		},
																		"nativeSrc": "8550:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8550:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8573:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8573:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8578:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8578:2:12",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8569:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8569:3:12"
																		},
																		"nativeSrc": "8569:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8569:12:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8583:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8583:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8515:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "8515:34:12"
																},
																"nativeSrc": "8515:75:12",
																"nodeType": "YulFunctionCall",
																"src": "8515:75:12"
															},
															"nativeSrc": "8515:75:12",
															"nodeType": "YulExpressionStatement",
															"src": "8515:75:12"
														},
														{
															"nativeSrc": "8599:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8599:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8613:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8613:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8618:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8618:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8609:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8609:3:12"
																},
																"nativeSrc": "8609:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8609:16:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8603:2:12",
																	"nodeType": "YulTypedName",
																	"src": "8603:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8645:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8645:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8649:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8649:2:12",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8641:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8641:3:12"
																		},
																		"nativeSrc": "8641:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8641:11:12"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "8654:19:12",
																		"nodeType": "YulLiteral",
																		"src": "8654:19:12",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8634:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8634:6:12"
																},
																"nativeSrc": "8634:40:12",
																"nodeType": "YulFunctionCall",
																"src": "8634:40:12"
															},
															"nativeSrc": "8634:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "8634:40:12"
														},
														{
															"nativeSrc": "8683:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8683:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8705:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8705:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8699:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8699:5:12"
																},
																"nativeSrc": "8699:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8699:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "8687:8:12",
																	"nodeType": "YulTypedName",
																	"src": "8687:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8760:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8760:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8768:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8768:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8756:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8756:3:12"
																		},
																		"nativeSrc": "8756:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8756:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8779:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8779:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8783:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8783:2:12",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8775:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8775:3:12"
																		},
																		"nativeSrc": "8775:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8775:11:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "8788:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "8788:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8721:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "8721:34:12"
																},
																"nativeSrc": "8721:76:12",
																"nodeType": "YulFunctionCall",
																"src": "8721:76:12"
															},
															"nativeSrc": "8721:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "8721:76:12"
														},
														{
															"nativeSrc": "8806:33:12",
															"nodeType": "YulAssignment",
															"src": "8806:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8821:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "8821:2:12"
																			},
																			{
																				"name": "length_1",
																				"nativeSrc": "8825:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "8825:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8817:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8817:3:12"
																		},
																		"nativeSrc": "8817:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8817:17:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8836:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8813:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8813:3:12"
																},
																"nativeSrc": "8813:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8813:26:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8806:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8806:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8033:812:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8390:3:12",
														"nodeType": "YulTypedName",
														"src": "8390:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8395:6:12",
														"nodeType": "YulTypedName",
														"src": "8395:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8403:6:12",
														"nodeType": "YulTypedName",
														"src": "8403:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8414:3:12",
														"nodeType": "YulTypedName",
														"src": "8414:3:12",
														"type": ""
													}
												],
												"src": "8033:812:12"
											},
											{
												"body": {
													"nativeSrc": "8902:116:12",
													"nodeType": "YulBlock",
													"src": "8902:116:12",
													"statements": [
														{
															"nativeSrc": "8912:20:12",
															"nodeType": "YulAssignment",
															"src": "8912:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8927:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8927:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8930:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8930:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8923:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8923:3:12"
																},
																"nativeSrc": "8923:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8923:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8912:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8912:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8990:22:12",
																"nodeType": "YulBlock",
																"src": "8990:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8992:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8992:16:12"
																			},
																			"nativeSrc": "8992:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8992:18:12"
																		},
																		"nativeSrc": "8992:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8992:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8961:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "8961:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8954:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8954:6:12"
																				},
																				"nativeSrc": "8954:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8954:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8968:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "8968:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8975:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "8975:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8984:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "8984:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8971:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8971:3:12"
																						},
																						"nativeSrc": "8971:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8971:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8965:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "8965:2:12"
																				},
																				"nativeSrc": "8965:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8965:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8951:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8951:2:12"
																		},
																		"nativeSrc": "8951:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8951:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8944:6:12"
																},
																"nativeSrc": "8944:45:12",
																"nodeType": "YulFunctionCall",
																"src": "8944:45:12"
															},
															"nativeSrc": "8941:71:12",
															"nodeType": "YulIf",
															"src": "8941:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8850:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8881:1:12",
														"nodeType": "YulTypedName",
														"src": "8881:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8884:1:12",
														"nodeType": "YulTypedName",
														"src": "8884:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8890:7:12",
														"nodeType": "YulTypedName",
														"src": "8890:7:12",
														"type": ""
													}
												],
												"src": "8850:168:12"
											},
											{
												"body": {
													"nativeSrc": "9055:95:12",
													"nodeType": "YulBlock",
													"src": "9055:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9072:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9072:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9079:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9079:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9084:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9084:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9075:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:12"
																		},
																		"nativeSrc": "9075:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9075:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9065:6:12"
																},
																"nativeSrc": "9065:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9065:31:12"
															},
															"nativeSrc": "9065:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9065:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9112:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9112:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9115:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9115:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9105:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9105:6:12"
																},
																"nativeSrc": "9105:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9105:15:12"
															},
															"nativeSrc": "9105:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9105:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9136:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9136:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9139:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9139:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9129:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9129:6:12"
																},
																"nativeSrc": "9129:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9129:15:12"
															},
															"nativeSrc": "9129:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9129:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9023:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9023:127:12"
											},
											{
												"body": {
													"nativeSrc": "9187:95:12",
													"nodeType": "YulBlock",
													"src": "9187:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9204:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9204:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9211:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9211:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9216:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9216:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9207:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:12"
																		},
																		"nativeSrc": "9207:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9207:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9197:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:12"
																},
																"nativeSrc": "9197:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9197:31:12"
															},
															"nativeSrc": "9197:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9197:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9244:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9244:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9247:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9247:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9237:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9237:6:12"
																},
																"nativeSrc": "9237:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9237:15:12"
															},
															"nativeSrc": "9237:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9237:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9268:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9268:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9271:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9271:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9261:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:12"
																},
																"nativeSrc": "9261:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9261:15:12"
															},
															"nativeSrc": "9261:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9261:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9155:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9155:127:12"
											},
											{
												"body": {
													"nativeSrc": "9334:89:12",
													"nodeType": "YulBlock",
													"src": "9334:89:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9361:22:12",
																"nodeType": "YulBlock",
																"src": "9361:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9363:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9363:16:12"
																			},
																			"nativeSrc": "9363:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9363:18:12"
																		},
																		"nativeSrc": "9363:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9363:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9354:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9354:5:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9347:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:12"
																},
																"nativeSrc": "9347:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9347:13:12"
															},
															"nativeSrc": "9344:39:12",
															"nodeType": "YulIf",
															"src": "9344:39:12"
														},
														{
															"nativeSrc": "9392:25:12",
															"nodeType": "YulAssignment",
															"src": "9392:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9403:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9414:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9414:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9410:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9410:3:12"
																		},
																		"nativeSrc": "9410:6:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9410:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9399:3:12"
																},
																"nativeSrc": "9399:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9399:18:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9392:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9392:3:12"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "9287:136:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9316:5:12",
														"nodeType": "YulTypedName",
														"src": "9316:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9326:3:12",
														"nodeType": "YulTypedName",
														"src": "9326:3:12",
														"type": ""
													}
												],
												"src": "9287:136:12"
											},
											{
												"body": {
													"nativeSrc": "9602:182:12",
													"nodeType": "YulBlock",
													"src": "9602:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9619:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9619:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9630:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9630:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9612:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9612:6:12"
																},
																"nativeSrc": "9612:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9612:21:12"
															},
															"nativeSrc": "9612:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9612:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9653:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9653:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9664:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9664:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9649:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9649:3:12"
																		},
																		"nativeSrc": "9649:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9649:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9669:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9669:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9642:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9642:6:12"
																},
																"nativeSrc": "9642:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9642:30:12"
															},
															"nativeSrc": "9642:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9642:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9692:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9692:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9703:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9703:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9688:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9688:3:12"
																		},
																		"nativeSrc": "9688:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9688:18:12"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "9708:34:12",
																		"nodeType": "YulLiteral",
																		"src": "9708:34:12",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9681:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9681:6:12"
																},
																"nativeSrc": "9681:62:12",
																"nodeType": "YulFunctionCall",
																"src": "9681:62:12"
															},
															"nativeSrc": "9681:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "9681:62:12"
														},
														{
															"nativeSrc": "9752:26:12",
															"nodeType": "YulAssignment",
															"src": "9752:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9764:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9764:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9775:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9775:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9760:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9760:3:12"
																},
																"nativeSrc": "9760:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9760:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9752:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9752:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9428:356:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9579:9:12",
														"nodeType": "YulTypedName",
														"src": "9579:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9593:4:12",
														"nodeType": "YulTypedName",
														"src": "9593:4:12",
														"type": ""
													}
												],
												"src": "9428:356:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xE328400C EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x13E PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xE4F JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x17F PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x17F PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x17F PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x17F PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x30C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xED1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0xED1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x398 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x398 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3AF DUP2 DUP6 DUP6 PUSH2 0x5EB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C6 DUP6 DUP3 DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x3D1 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3F6 DUP2 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 PUSH2 0x935 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x484 DUP3 DUP3 PUSH2 0x9BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3AF DUP2 DUP6 DUP6 PUSH2 0x49A DUP4 DUP4 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH32 0xA5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB PUSH2 0x50C DUP2 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 PUSH2 0xA20 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x523 DUP3 DUP7 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH2 0x3D1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5EB JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3AF DUP2 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5B7 DUP2 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x719 DUP5 DUP5 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x780 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x471 JUMP JUMPDEST PUSH2 0x780 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x780 JUMP JUMPDEST PUSH2 0x932 DUP2 CALLER PUSH2 0xB50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x93F DUP3 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x976 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x9C4 DUP3 DUP3 PUSH2 0x4A9 JUMP JUMPDEST ISZERO PUSH2 0x484 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB5A DUP3 DUP3 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH2 0xB67 DUP2 PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0xB72 DUP4 PUSH1 0x20 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB83 SWAP3 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x471 SWAP2 PUSH1 0x4 ADD PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x30C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xBC9 DUP4 PUSH1 0x2 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xBD4 SWAP1 PUSH1 0x2 PUSH2 0xF1D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xBEC PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC16 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xC30 JUMPI PUSH2 0xC30 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0xC80 DUP5 PUSH1 0x2 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xC8B SWAP1 PUSH1 0x1 PUSH2 0xF1D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD02 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xCBF JUMPI PUSH2 0xCBF PUSH2 0xFCF JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xCFB DUP2 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP PUSH2 0xC8E JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x471 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD68 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD51 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD81 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xDBF DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE08 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE31 DUP5 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP PUSH2 0xE3F PUSH1 0x20 DUP6 ADD PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE77 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xE87 PUSH1 0x20 DUP5 ADD PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD51 DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEC3 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE87 PUSH1 0x20 DUP5 ADD PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xEE5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF03 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30C PUSH2 0xF09 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 DUP4 MLOAD PUSH2 0xF67 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0xF98 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xD7F JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x30C JUMPI PUSH2 0x30C PUSH2 0xF09 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH2 0xFF1 JUMPI PUSH2 0xFF1 PUSH2 0xF09 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH29 0x5F183362E6ABFE0A2896EF6358BC8A228BBA9B74843A4F4EF1F33C849F 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "186:878:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:12;;463:22;445:41;;433:2;418:18;2732:202:0;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;3255:106::-;3342:12;;3255:106;;;1736:25:12;;;1724:2;1709:18;3255:106:2;1590:177:12;5203:256:2;;;;;;:::i;:::-;;:::i;4504:129:0:-;;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;:22;;;;4504:129;4929:145;;;;;;:::i;:::-;;:::i;:::-;;3104:91:2;;;3186:2;2873:36:12;;2861:2;2846:18;3104:91:2;2731:184:12;6038:214:0;;;;;;:::i;:::-;;:::i;5854:234:2:-;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;3021:145:0;;;;;;:::i;:::-;;:::i;2369:102:2:-;;;:::i;949:113:11:-;;;;;;:::i;:::-;;:::i;2153:49:0:-;;2198:4;2153:49;;6575:427:2;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;5354:147:0:-;;;;;;:::i;:::-;;:::i;3987:149:2:-;;;;;;:::i;:::-;;:::i;240:66:11:-;;280:26;240:66;;2732:202:0;2817:4;-1:-1:-1;;;;;;2840:47:0;;-1:-1:-1;;;2840:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:7;;;2891:36:0;2833:94;2732:202;-1:-1:-1;;2732:202:0:o;2158:98:2:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:2;;4444:197;-1:-1:-1;;;4444:197:2:o;5203:256::-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;4929:145:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:0;;719:10:5;6133:23:0;6125:83;;;;-1:-1:-1;;;6125:83:0;;3963:2:12;6125:83:0;;;3945:21:12;4002:2;3982:18;;;3975:30;4041:34;4021:18;;;4014:62;-1:-1:-1;;;4092:18:12;;;4085:45;4147:19;;6125:83:0;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:2:-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3021:145:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;949:113:11:-;280:26;2631:16:0;2642:4;2631:10;:16::i;:::-;1036:19:11::1;1042:4;1048:6;1036:5;:19::i;6575:427:2:-:0;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;4641:2:12;6784:85:2;;;4623:21:12;4680:2;4660:18;;;4653:30;4719:34;4699:18;;;4692:62;-1:-1:-1;;;4770:18:12;;;4763:35;4815:19;;6784:85:2;4439:401:12;6784:85:2;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;5354:147:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3987:149:2:-:0;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;5047:2:12;10550:68:2;;;5029:21:12;5086:2;5066:18;;;5059:30;5125:34;5105:18;;;5098:62;-1:-1:-1;;;5176:18:12;;;5169:34;5220:19;;10550:68:2;4845:400:12;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;5452:2:12;10628:68:2;;;5434:21:12;5491:2;5471:18;;;5464:30;5530:34;5510:18;;;5503:62;-1:-1:-1;;;5581:18:12;;;5574:32;5623:19;;10628:68:2;5250:398:12;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1736:25:12;;;10758:32:2;;1709:18:12;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;5855:2:12;11297:68:2;;;5837:21:12;5894:2;5874:18;;;5867:30;5933:31;5913:18;;;5906:59;5982:18;;11297:68:2;5653:353:12;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;6213:2:12;7544:68:2;;;6195:21:12;6252:2;6232:18;;;6225:30;6291:34;6271:18;;;6264:62;-1:-1:-1;;;6342:18:12;;;6335:35;6387:19;;7544:68:2;6011:401:12;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;6619:2:12;7622:64:2;;;6601:21:12;6658:2;6638:18;;;6631:30;6697:34;6677:18;;;6670:62;-1:-1:-1;;;6748:18:12;;;6741:33;6791:19;;7622:64:2;6417:399:12;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;7023:2:12;7793:72:2;;;7005:21:12;7062:2;7042:18;;;7035:30;7101:34;7081:18;;;7074:62;-1:-1:-1;;;7152:18:12;;;7145:36;7198:19;;7793:72:2;6821:402:12;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1736:25:12;;;8114:13:2;;8163:26;;1709:18:12;8163:26:2;;;;;;;8200:37;4929:145:0;3460:103;3526:30;3537:4;719:10:5;3526::0;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:5;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8168:40;719:10:5;;8112:12:0;;8168:40;;8144:5;8168:40;7991:234;;:::o;9375:659:2:-;-1:-1:-1;;;;;9458:21:2;;9450:67;;;;-1:-1:-1;;;9450:67:2;;7430:2:12;9450:67:2;;;7412:21:12;7469:2;7449:18;;;7442:30;7508:34;7488:18;;;7481:62;-1:-1:-1;;;7559:18:12;;;7552:31;7600:19;;9450:67:2;7228:397:12;9450:67:2;-1:-1:-1;;;;;9613:18:2;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:2;;7832:2:12;9641:71:2;;;7814:21:12;7871:2;7851:18;;;7844:30;7910:34;7890:18;;;7883:62;-1:-1:-1;;;7961:18:12;;;7954:32;8003:19;;9641:71:2;7630:398:12;9641:71:2;-1:-1:-1;;;;;9746:18:2;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1736:25:12;;;9746:9:2;;:18;9931:37;;1709:18:12;9931:37:2;;;;;;;4929:145:0;;;:::o;3844:479::-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;2407:149:6:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:6;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:6;;1918:47;;-1:-1:-1;;;1975:6:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:6;;;;;;;;;-1:-1:-1;;;2000:6:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:6;;;;;;;;-1:-1:-1;2030:9:6;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:6;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:6;;;;;;;;-1:-1:-1;2141:1:6;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:6;;2162:55;;;;-1:-1:-1;;;2162:55:6;;9630:2:12;2162:55:6;;;9612:21:12;;;9649:18;;;9642:30;9708:34;9688:18;;;9681:62;9760:18;;2162:55:6;9428:356:12;2162:55:6;2241:6;1818:437;-1:-1:-1;;;1818:437:6:o;14:286:12:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:12;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:12;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:12;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:12:o;1153:173::-;1221:20;;-1:-1:-1;;;;;1270:31:12;;1260:42;;1250:70;;1316:1;1313;1306:12;1250:70;1153:173;;;:::o;1331:254::-;1399:6;1407;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;1499:29;1518:9;1499:29;:::i;:::-;1489:39;1575:2;1560:18;;;;1547:32;;-1:-1:-1;;;1331:254:12:o;1772:328::-;1849:6;1857;1865;1918:2;1906:9;1897:7;1893:23;1889:32;1886:52;;;1934:1;1931;1924:12;1886:52;1957:29;1976:9;1957:29;:::i;:::-;1947:39;;2005:38;2039:2;2028:9;2024:18;2005:38;:::i;:::-;1995:48;;2090:2;2079:9;2075:18;2062:32;2052:42;;1772:328;;;;;:::o;2105:180::-;2164:6;2217:2;2205:9;2196:7;2192:23;2188:32;2185:52;;;2233:1;2230;2223:12;2185:52;-1:-1:-1;2256:23:12;;2105:180;-1:-1:-1;2105:180:12:o;2472:254::-;2540:6;2548;2601:2;2589:9;2580:7;2576:23;2572:32;2569:52;;;2617:1;2614;2607:12;2569:52;2653:9;2640:23;2630:33;;2682:38;2716:2;2705:9;2701:18;2682:38;:::i;:::-;2672:48;;2472:254;;;;;:::o;2920:186::-;2979:6;3032:2;3020:9;3011:7;3007:23;3003:32;3000:52;;;3048:1;3045;3038:12;3000:52;3071:29;3090:9;3071:29;:::i;3111:260::-;3179:6;3187;3240:2;3228:9;3219:7;3215:23;3211:32;3208:52;;;3256:1;3253;3246:12;3208:52;3279:29;3298:9;3279:29;:::i;:::-;3269:39;;3327:38;3361:2;3350:9;3346:18;3327:38;:::i;3376:380::-;3455:1;3451:12;;;;3498;;;3519:61;;3573:4;3565:6;3561:17;3551:27;;3519:61;3626:2;3618:6;3615:14;3595:18;3592:38;3589:161;;3672:10;3667:3;3663:20;3660:1;3653:31;3707:4;3704:1;3697:15;3735:4;3732:1;3725:15;3589:161;;3376:380;;;:::o;4177:127::-;4238:10;4233:3;4229:20;4226:1;4219:31;4269:4;4266:1;4259:15;4293:4;4290:1;4283:15;4309:125;4374:9;;;4395:10;;;4392:36;;;4408:18;;:::i;8033:812::-;8444:25;8439:3;8432:38;8414:3;8499:6;8493:13;8515:75;8583:6;8578:2;8573:3;8569:12;8562:4;8554:6;8550:17;8515:75;:::i;:::-;-1:-1:-1;;;8649:2:12;8609:16;;;8641:11;;;8634:40;8699:13;;8721:76;8699:13;8783:2;8775:11;;8768:4;8756:17;;8721:76;:::i;:::-;8817:17;8836:2;8813:26;;8033:812;-1:-1:-1;;;;8033:812:12:o;8850:168::-;8923:9;;;8954;;8971:15;;;8965:22;;8951:37;8941:71;;8992:18;;:::i;9023:127::-;9084:10;9079:3;9075:20;9072:1;9065:31;9115:4;9112:1;9105:15;9139:4;9136:1;9129:15;9155:127;9216:10;9211:3;9207:20;9204:1;9197:31;9247:4;9244:1;9237:15;9271:4;9268:1;9261:15;9287:136;9326:3;9354:5;9344:39;;9363:18;;:::i;:::-;-1:-1:-1;;;9399:18:12;;9287:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "828400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "304",
								"MULTISIG_ROLE()": "304",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24654",
								"balanceOf(address)": "2560",
								"burn(address,uint256)": "infinite",
								"decimals()": "243",
								"decreaseAllowance(address,uint256)": "26956",
								"getRoleAdmin(bytes32)": "2464",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2696",
								"increaseAllowance(address,uint256)": "27078",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "29086",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "447",
								"symbol()": "infinite",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "51074",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 186,
									"end": 1064,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 352,
									"end": 711,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 711,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 352,
									"end": 711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 352,
									"end": 711,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 352,
									"end": 711,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 352,
									"end": 711,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 352,
									"end": 711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 352,
									"end": 711,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 352,
									"end": 711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "233630B6B2B137B937"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "232621"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 432,
									"end": 460,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 432,
									"end": 460,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 424,
									"end": 489,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 489,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3198,
									"end": 3200,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 489,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3180,
									"end": 3201,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3237,
									"end": 3239,
									"name": "PUSH",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 3217,
									"end": 3235,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3217,
									"end": 3235,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3217,
									"end": 3235,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3210,
									"end": 3240,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3276,
									"end": 3302,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C6964206D756C746973696720616464726573730000000000000000"
								},
								{
									"begin": 3256,
									"end": 3274,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3256,
									"end": 3274,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3256,
									"end": 3274,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3249,
									"end": 3303,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3320,
									"end": 3338,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 3320,
									"end": 3338,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 424,
									"end": 489,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 508,
									"end": 554,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2198,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 553,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 508,
									"end": 518,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 508,
									"end": 554,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 508,
									"end": 554,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 508,
									"end": 554,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 564,
									"end": 605,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 280,
									"end": 306,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB"
								},
								{
									"begin": 590,
									"end": 604,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 564,
									"end": 605,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 564,
									"end": 605,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 564,
									"end": 605,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 630,
									"end": 644,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 652,
									"end": 654,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 652,
									"end": 666,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 652,
									"end": 666,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 652,
									"end": 666,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 646,
									"end": 666,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 646,
									"end": 666,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 646,
									"end": 649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 646,
									"end": 666,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 646,
									"end": 666,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 646,
									"end": 666,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 646,
									"end": 666,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 624,
									"end": 629,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 624,
									"end": 667,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 624,
									"end": 667,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 677,
									"end": 697,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 677,
									"end": 704,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 677,
									"end": 704,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 677,
									"end": 704,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 700,
									"end": 704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 677,
									"end": 704,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 677,
									"end": 704,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 677,
									"end": 704,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 7678,
									"end": 7682,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7684,
									"end": 7691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 7670,
									"end": 7692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7714,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7740,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7781,
									"end": 7788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7775,
									"end": 7779,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 752,
									"end": 943,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 752,
									"end": 943,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 845,
									"end": 865,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 845,
									"end": 865,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 845,
									"end": 865,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 845,
									"end": 865,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 844,
									"end": 865,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 836,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 836,
									"end": 898,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 836,
									"end": 898,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 836,
									"end": 898,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 836,
									"end": 898,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 836,
									"end": 898,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5235,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 898,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 836,
									"end": 898,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 836,
									"end": 898,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5215,
									"end": 5236,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5272,
									"end": 5274,
									"name": "PUSH",
									"source": 12,
									"value": "1C"
								},
								{
									"begin": 5252,
									"end": 5270,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 5252,
									"end": 5270,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5252,
									"end": 5270,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5245,
									"end": 5275,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5311,
									"end": 5341,
									"name": "PUSH",
									"source": 12,
									"value": "4D696E74696E672064697361626C6564207065726D616E656E746C7900000000"
								},
								{
									"begin": 5291,
									"end": 5309,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 5291,
									"end": 5309,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5291,
									"end": 5309,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5284,
									"end": 5342,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5359,
									"end": 5377,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 5359,
									"end": 5377,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 836,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 5031,
									"end": 5383,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 836,
									"end": 898,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 836,
									"end": 898,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 908,
									"end": 936,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 920,
									"end": 927,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 929,
									"end": 935,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 908,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 908,
									"end": 936,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3107,
									"end": 3111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3136,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5590,
									"end": 5592,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5572,
									"end": 5593,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5629,
									"end": 5631,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5609,
									"end": 5627,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 5609,
									"end": 5627,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5609,
									"end": 5627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5602,
									"end": 5632,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5668,
									"end": 5701,
									"name": "PUSH",
									"source": 12,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 5648,
									"end": 5666,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 5648,
									"end": 5666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5648,
									"end": 5666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5641,
									"end": 5702,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5719,
									"end": 5737,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 5719,
									"end": 5737,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 5388,
									"end": 5743,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6024,
									"end": 6049,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6024,
									"end": 6049,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6024,
									"end": 6049,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6015,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 9028,
									"end": 9029,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9032,
									"end": 9039,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9041,
									"end": 9047,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2841,
									"end": 2867,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2239,
									"end": 2246,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2233,
									"end": 2247,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2322,
									"end": 2348,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2388,
									"end": 2389,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2229,
									"end": 2232,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2489,
									"end": 2495,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2570,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2634,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 2625,
									"end": 2649,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2621,
									"end": 2658,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2617,
									"end": 2659,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2602,
									"end": 2660,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2721,
									"end": 2722,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2705,
									"end": 2719,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2701,
									"end": 2723,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2695,
									"end": 2699,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2724,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3349,
									"end": 3476,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3349,
									"end": 3476,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3420,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 3405,
									"end": 3408,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 3401,
									"end": 3421,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3398,
									"end": 3399,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3391,
									"end": 3422,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3441,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 3438,
									"end": 3439,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3431,
									"end": 3446,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3469,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3462,
									"end": 3463,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3455,
									"end": 3470,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3897,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3481,
									"end": 3897,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3570,
									"end": 3571,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3607,
									"end": 3612,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3570,
									"end": 3571,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3642,
									"end": 3649,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3632,
									"end": 3640,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3629,
									"end": 3650,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3701,
									"end": 3705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3697,
									"end": 3698,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3699,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3689,
									"end": 3706,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3683,
									"end": 3687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3680,
									"end": 3707,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3677,
									"end": 3730,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3677,
									"end": 3730,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3677,
									"end": 3730,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3728,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3710,
									"end": 3728,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3710,
									"end": 3728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3728,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3710,
									"end": 3728,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3760,
									"end": 3767,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3758,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3746,
									"end": 3768,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3743,
									"end": 3798,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3743,
									"end": 3798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3743,
									"end": 3798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3796,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3796,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3796,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3796,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3743,
									"end": 3798,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3743,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3881,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3881,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3881,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3859,
									"end": 3881,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3819,
									"end": 3834,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3819,
									"end": 3834,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3819,
									"end": 3834,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3819,
									"end": 3834,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3621,
									"end": 3891,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3625,
									"end": 3628,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3897,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3897,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3897,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3902,
									"end": 4708,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 3902,
									"end": 4708,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3951,
									"end": 3956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3981,
									"end": 3989,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3971,
									"end": 4051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 3971,
									"end": 4051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4022,
									"end": 4023,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4036,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 4036,
									"end": 4041,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3971,
									"end": 4051,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 3971,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4070,
									"end": 4074,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4060,
									"end": 4136,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4107,
									"end": 4108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4121,
									"end": 4126,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 4121,
									"end": 4126,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4136,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4060,
									"end": 4136,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4152,
									"end": 4156,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4170,
									"end": 4171,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4165,
									"end": 4224,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4165,
									"end": 4224,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4165,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4165,
									"end": 4224,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4238,
									"end": 4239,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4233,
									"end": 4363,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4233,
									"end": 4363,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4233,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 4233,
									"end": 4363,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4145,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 4145,
									"end": 4363,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4165,
									"end": 4224,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4165,
									"end": 4224,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4195,
									"end": 4196,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4186,
									"end": 4196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4186,
									"end": 4196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4209,
									"end": 4214,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4209,
									"end": 4214,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 4209,
									"end": 4214,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4233,
									"end": 4363,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 4233,
									"end": 4363,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4270,
									"end": 4273,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 4260,
									"end": 4268,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4274,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4254,
									"end": 4297,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4254,
									"end": 4297,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 4254,
									"end": 4297,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4277,
									"end": 4295,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 4277,
									"end": 4295,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4277,
									"end": 4295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4277,
									"end": 4295,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 4277,
									"end": 4295,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4333,
									"end": 4334,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4319,
									"end": 4335,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4319,
									"end": 4335,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4348,
									"end": 4353,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 4348,
									"end": 4353,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4145,
									"end": 4363,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 4145,
									"end": 4363,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4145,
									"end": 4363,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4447,
									"end": 4449,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4437,
									"end": 4445,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4434,
									"end": 4450,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4428,
									"end": 4431,
									"name": "PUSH",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 4422,
									"end": 4426,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4419,
									"end": 4432,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4415,
									"end": 4451,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4409,
									"end": 4411,
									"name": "PUSH",
									"source": 12,
									"value": "4E"
								},
								{
									"begin": 4399,
									"end": 4407,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4396,
									"end": 4412,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4391,
									"end": 4393,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 4385,
									"end": 4389,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4382,
									"end": 4394,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4378,
									"end": 4413,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4375,
									"end": 4452,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4531,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4531,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4372,
									"end": 4531,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4484,
									"end": 4503,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4503,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4503,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 4516,
									"end": 4521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 4516,
									"end": 4521,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4531,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4372,
									"end": 4531,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4563,
									"end": 4597,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 4588,
									"end": 4596,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4582,
									"end": 4586,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4563,
									"end": 4597,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 4563,
									"end": 4597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4563,
									"end": 4597,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 4563,
									"end": 4597,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4633,
									"end": 4639,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4629,
									"end": 4630,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 4631,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4621,
									"end": 4640,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4619,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4609,
									"end": 4641,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4606,
									"end": 4664,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4606,
									"end": 4664,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 4606,
									"end": 4664,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4644,
									"end": 4662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4682,
									"end": 4702,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4682,
									"end": 4702,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3902,
									"end": 4708,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3902,
									"end": 4708,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4853,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 4713,
									"end": 4853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4771,
									"end": 4776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4800,
									"end": 4847,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 4841,
									"end": 4845,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 4831,
									"end": 4839,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4827,
									"end": 4846,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4821,
									"end": 4825,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4800,
									"end": 4847,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 4800,
									"end": 4847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4858,
									"end": 5026,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 4858,
									"end": 5026,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4931,
									"end": 4940,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4931,
									"end": 4940,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4931,
									"end": 4940,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4962,
									"end": 4971,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4962,
									"end": 4971,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4979,
									"end": 4994,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4979,
									"end": 4994,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4979,
									"end": 4994,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4973,
									"end": 4995,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4959,
									"end": 4996,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4949,
									"end": 5020,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 4949,
									"end": 5020,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5000,
									"end": 5018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 5000,
									"end": 5018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5748,
									"end": 5873,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 5748,
									"end": 5873,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5813,
									"end": 5822,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5813,
									"end": 5822,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5813,
									"end": 5822,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5834,
									"end": 5844,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5834,
									"end": 5844,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5834,
									"end": 5844,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5831,
									"end": 5867,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5831,
									"end": 5867,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5831,
									"end": 5867,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5847,
									"end": 5865,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5847,
									"end": 5865,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 5847,
									"end": 5865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5878,
									"end": 6055,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 5878,
									"end": 6055,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 1064,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b7c5f183362e6abfe0a2896ef6358bc8a228bba9b74843a4f4ef1f33c849fe964736f6c63430008180033",
									".code": [
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "A457C2D7"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "A457C2D7"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "E328400C"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "9DC29FAC"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "39509351"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 186,
											"end": 1064,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1724,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1590,
											"end": 1767,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2873,
											"end": 2909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2863,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2731,
											"end": 2915,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 949,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 949,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 240,
											"end": 306,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 240,
											"end": 306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 240,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 11,
											"value": "A5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB"
										},
										{
											"begin": 240,
											"end": 306,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 240,
											"end": 306,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5053,
											"end": 5057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5059,
											"end": 5066,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5042,
											"end": 5067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3945,
											"end": 3966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 3982,
											"end": 4000,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3982,
											"end": 4000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3982,
											"end": 4000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3975,
											"end": 4005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4076,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4092,
											"end": 4110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4085,
											"end": 4130,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4147,
											"end": 4166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6219,
											"end": 6245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 949,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 11,
											"value": "A5A0B70B385FF7611CD3840916BD08B10829E5BF9E6637CF79DD9A427FC0E2AB"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1042,
											"end": 1046,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1048,
											"end": 1054,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1036,
											"end": 1055,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4653,
											"end": 4683,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4753,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4754,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4763,
											"end": 4798,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4815,
											"end": 4834,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4815,
											"end": 4834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4439,
											"end": 4840,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5480,
											"end": 5484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5468,
											"end": 5494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5047,
											"end": 5049,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5029,
											"end": 5050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5066,
											"end": 5084,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5059,
											"end": 5089,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5159,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5160,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5169,
											"end": 5203,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5220,
											"end": 5239,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5220,
											"end": 5239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4845,
											"end": 5245,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5452,
											"end": 5454,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5494,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5565,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5581,
											"end": 5599,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5581,
											"end": 5599,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5581,
											"end": 5599,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5623,
											"end": 5642,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5623,
											"end": 5642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5250,
											"end": 5648,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5855,
											"end": 5857,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5896,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 5874,
											"end": 5892,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5874,
											"end": 5892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 5897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5933,
											"end": 5964,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5906,
											"end": 5965,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5653,
											"end": 6006,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6195,
											"end": 6216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6254,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6255,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6325,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6326,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6342,
											"end": 6360,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6342,
											"end": 6360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6342,
											"end": 6360,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6335,
											"end": 6370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6406,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6387,
											"end": 6406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6011,
											"end": 6412,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6621,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6601,
											"end": 6622,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6658,
											"end": 6660,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6661,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6697,
											"end": 6731,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6670,
											"end": 6732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6774,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6791,
											"end": 6810,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6791,
											"end": 6810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6417,
											"end": 6816,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7005,
											"end": 7026,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7062,
											"end": 7064,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7035,
											"end": 7065,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7135,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7081,
											"end": 7099,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7081,
											"end": 7099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7081,
											"end": 7099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7074,
											"end": 7136,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7152,
											"end": 7170,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7152,
											"end": 7170,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7145,
											"end": 7181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6821,
											"end": 7223,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3526,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3526,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7670,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8074,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7412,
											"end": 7433,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7472,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7508,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7481,
											"end": 7543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7559,
											"end": 7577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7552,
											"end": 7583,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7619,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7600,
											"end": 7619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7228,
											"end": 7625,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 7834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7814,
											"end": 7835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7871,
											"end": 7873,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7874,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7910,
											"end": 7944,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7979,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7961,
											"end": 7979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 7979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8022,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8003,
											"end": 8022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7630,
											"end": 8028,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3932,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 4115,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 4214,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4022,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3970,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9632,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9649,
											"end": 9667,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9649,
											"end": 9667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9649,
											"end": 9667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9642,
											"end": 9672,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 9742,
											"name": "PUSH",
											"source": 12,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9681,
											"end": 9743,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 9428,
											"end": 9784,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 497,
											"end": 747,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 497,
											"end": 747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 582,
											"end": 583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 705,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 592,
											"end": 705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 603,
											"end": 604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 600,
											"end": 613,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 592,
											"end": 705,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 592,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 592,
											"end": 705,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 682,
											"end": 693,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 682,
											"end": 693,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 682,
											"end": 693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 694,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 663,
											"end": 674,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 663,
											"end": 674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 663,
											"end": 674,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 656,
											"end": 695,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 592,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 592,
											"end": 705,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 592,
											"end": 705,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 592,
											"end": 705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 739,
											"end": 740,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 737,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 721,
											"end": 737,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 714,
											"end": 741,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 497,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1148,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 752,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 901,
											"end": 903,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 883,
											"end": 904,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 864,
											"end": 868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 927,
											"end": 940,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 969,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 949,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 992,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1061,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1057,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1031,
											"end": 1037,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1027,
											"end": 1042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 992,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 992,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 992,
											"end": 1071,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 992,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1111,
											"end": 1126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1107,
											"end": 1136,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1092,
											"end": 1137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1092,
											"end": 1137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1092,
											"end": 1137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1092,
											"end": 1137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 752,
											"end": 1148,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 752,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1326,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1153,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1241,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1241,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1301,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 1250,
											"end": 1320,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1306,
											"end": 1318,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1320,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 1250,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1326,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1585,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1331,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1499,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1528,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 1499,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1528,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1578,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1560,
											"end": 1578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1560,
											"end": 1578,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1560,
											"end": 1578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1579,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1579,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 2100,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1772,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1904,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1893,
											"end": 1916,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1921,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1938,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 1886,
											"end": 1938,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1936,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1938,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 1886,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1957,
											"end": 1986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 1986,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 1957,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 1986,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 1986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2039,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2005,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2043,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2005,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1995,
											"end": 2043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1995,
											"end": 2043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2094,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 2100,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 2100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 2100,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 2100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 2100,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2285,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 2105,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2203,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2215,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2220,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2235,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2185,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2726,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2472,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2540,
											"end": 2546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2599,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2604,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2621,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2569,
											"end": 2621,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2607,
											"end": 2619,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2621,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2569,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2630,
											"end": 2663,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2630,
											"end": 2663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2682,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 2716,
											"end": 2718,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2714,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2719,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2682,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2682,
											"end": 2720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2682,
											"end": 2720,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 2682,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2726,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2726,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2920,
											"end": 3106,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2920,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3034,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3011,
											"end": 3018,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3007,
											"end": 3030,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3003,
											"end": 3035,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3052,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3000,
											"end": 3052,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3038,
											"end": 3050,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3052,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3000,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 3090,
											"end": 3099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 3071,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3111,
											"end": 3371,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3111,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3242,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3226,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3238,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3211,
											"end": 3243,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3260,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3208,
											"end": 3260,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3256,
											"end": 3257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3258,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3260,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3208,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3279,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3279,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 3279,
											"end": 3308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3279,
											"end": 3308,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3279,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3269,
											"end": 3308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3269,
											"end": 3308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 3327,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3756,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3376,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3498,
											"end": 3510,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3519,
											"end": 3580,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3577,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3578,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3578,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3580,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3519,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3628,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3624,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3615,
											"end": 3629,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3589,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 3589,
											"end": 3750,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3672,
											"end": 3682,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 3667,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3663,
											"end": 3683,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3704,
											"end": 3705,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3697,
											"end": 3712,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3739,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3732,
											"end": 3733,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3740,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3589,
											"end": 3750,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 3589,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3589,
											"end": 3750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4177,
											"end": 4304,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4177,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4238,
											"end": 4248,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 4233,
											"end": 4236,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4250,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4259,
											"end": 4274,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4293,
											"end": 4297,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4290,
											"end": 4291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4298,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4309,
											"end": 4434,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 4309,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4395,
											"end": 4405,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4392,
											"end": 4428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4408,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4408,
											"end": 4426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8033,
											"end": 8845,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 8033,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8444,
											"end": 8469,
											"name": "PUSH",
											"source": 12,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 8439,
											"end": 8442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8470,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8414,
											"end": 8417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8505,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 8583,
											"end": 8589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 8573,
											"end": 8576,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8569,
											"end": 8581,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8566,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8560,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8567,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 8515,
											"end": 8590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8590,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 8515,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8649,
											"end": 8651,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 8609,
											"end": 8625,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8625,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8609,
											"end": 8625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8634,
											"end": 8674,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8712,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8712,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8721,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 8699,
											"end": 8712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8783,
											"end": 8785,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 8775,
											"end": 8786,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8775,
											"end": 8786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8768,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8773,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8756,
											"end": 8773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8721,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 8721,
											"end": 8797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8721,
											"end": 8797,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 8721,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8817,
											"end": 8834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 8813,
											"end": 8839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8839,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8033,
											"end": 8845,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8033,
											"end": 8845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8850,
											"end": 9018,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 8850,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8954,
											"end": 8963,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8954,
											"end": 8963,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 8986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 8986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 8986,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8987,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8987,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8951,
											"end": 8988,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 8941,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 8941,
											"end": 9012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 8992,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 8992,
											"end": 9010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9023,
											"end": 9150,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 9023,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9084,
											"end": 9094,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9079,
											"end": 9082,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9065,
											"end": 9096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9115,
											"end": 9119,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 9112,
											"end": 9113,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9105,
											"end": 9120,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9139,
											"end": 9143,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9136,
											"end": 9137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9155,
											"end": 9282,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 9155,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9216,
											"end": 9226,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9211,
											"end": 9214,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9207,
											"end": 9227,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9205,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9228,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9251,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9244,
											"end": 9245,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9237,
											"end": 9252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9271,
											"end": 9275,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9276,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9423,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 9287,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9359,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9344,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 9344,
											"end": 9383,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 9363,
											"end": 9381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
								"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"@openzeppelin/contracts@4.9.3/utils/Strings.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/Math.sol",
								"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol",
								"contracts/FlameBorn Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MULTISIG_ROLE()": "e328400c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"multisigWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTISIG_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlameBorn Token.sol\":\"FlamebornToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.9.3/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts@4.9.3/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/FlameBorn Token.sol\":{\"keccak256\":\"0xff63a35a786829fb0ca9936515722819ac4015f3104f6c2514d7f9a68c21823e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4536ea7225188ae103ccac8ed18aa5177ec470a7b69608245a19671a45f76ee\",\"dweb:/ipfs/QmWD1oYZp1fo3Cbin8Mgcp2cFPJbieP3y3AVZ3ExcEQDMV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 404,
								"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 410,
								"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 412,
								"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 414,
								"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 416,
								"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 2351,
								"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
								"label": "_initialMintComplete",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/FlameBorn Token.sol:FlamebornToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.9.3/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							1100
						],
						"ERC165": [
							1353
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1365
						],
						"Math": [
							2231
						],
						"SignedMath": [
							2336
						],
						"Strings": [
							1329
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1101,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1330,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1354,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1967:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1100,
										"src": "1967:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1967:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1976:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1976:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1976:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1992:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1353,
										"src": "1992:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								1353,
								1365,
								388,
								1100
							],
							"name": "AccessControl",
							"nameLocation": "1950:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2056:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2031:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2031:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2081:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2073:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2073:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2012:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "2005:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2140:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2103:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"2122:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "2122:8:0"
											},
											"referencedDeclaration": 19,
											"src": "2122:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2177:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2153:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2198:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2621:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2631:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2631:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2657:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2209:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2598:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:0"
									},
									"src": "2589:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2823:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2840:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2860:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2855:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2876:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2855:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2840:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2915:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2891:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1352,
															"src": "2891:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2891:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2840:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2833:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2671:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2741:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2799:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2766:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2759:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2759:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2817:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:6:0"
									},
									"scope": 315,
									"src": "2732:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "3113:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3143:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3130:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3130:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "3123:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2940:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3030:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3089:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:6:0"
									},
									"scope": 315,
									"src": "3021:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3516:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "3543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3543:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3526:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3526:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3172:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3469:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3480:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:0"
									},
									"scope": 315,
									"src": "3460:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3917:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3931:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3940:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3932:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3927:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3956:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4064:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4135:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1329,
																								"src": "4115:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1329_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4123:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1303,
																							"src": "4115:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4115:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4169:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4242:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4234:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4234:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4234:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4249:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1329,
																								"src": "4214:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1329_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4222:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1283,
																							"src": "4214:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4214:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4022:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4026:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4022:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4022:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3994:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3994:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3994:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3970:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3970:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3970:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3569:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3853:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3872:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3864:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:0"
									},
									"scope": 315,
									"src": "3844:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4587:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4611:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4604:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4617:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4604:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4597:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4329:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4513:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:0"
									},
									"scope": 315,
									"src": "4504:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5032:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5053:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "5042:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "5042:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4639:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5012:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"5003:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5003:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4994:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4956:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4948:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4947:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5032:0:0"
									},
									"scope": 315,
									"src": "4929:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5458:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5468:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5468:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5080:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5438:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5429:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5429:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5429:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5363:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5382:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5374:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:0"
									},
									"scope": 315,
									"src": "5354:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6115:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "6144:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6144:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6133:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6158:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "6125:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6219:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6219:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5507:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6047:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6060:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6074:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:0:0"
									},
									"scope": 315,
									"src": "6038:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "7005:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "7015:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "7015:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6258:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6946:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6965:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6957:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7005:0:0"
									},
									"scope": 315,
									"src": "6937:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7245:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7263:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7255:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7283:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7255:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7311:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7318:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7324:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7311:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7336:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7311:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7311:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7383:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7402:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7360:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7355:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "7053:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7181:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7217:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7209:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7194:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7245:0:0"
									},
									"scope": 315,
									"src": "7172:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7655:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7669:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7678:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7670:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7665:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7694:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7708:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7715:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7708:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7721:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7708:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7729:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7708:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7740:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7708:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7708:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7781:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1090,
																			"src": "7790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7763:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7758:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7425:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7596:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7606:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:0"
									},
									"scope": 315,
									"src": "7587:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "8060:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "8082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "8074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8074:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "8070:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "8098:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "8112:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "8119:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8112:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8125:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "8112:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8112:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8112:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "8112:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1090,
																			"src": "8195:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8195:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8168:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8168:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8163:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7826:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8000:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8012:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:0"
									},
									"scope": 315,
									"src": "7991:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1932:6295:0",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "108:8120:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.9.3/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1100
						],
						"ERC20": [
							975
						],
						"IERC20": [
							1053
						],
						"IERC20Metadata": [
							1078
						]
					},
					"id": 976,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 976,
							"sourceUnit": 1054,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 976,
							"sourceUnit": 1079,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 976,
							"sourceUnit": 1101,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 395,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1100,
										"src": "1550:7:2"
									},
									"id": 396,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 397,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1053,
										"src": "1559:6:2"
									},
									"id": 398,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 399,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "1567:14:2"
									},
									"id": 400,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 975,
							"linearizedBaseContracts": [
								975,
								1078,
								1053,
								1100
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 403,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 401,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 402,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 409,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 405,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 408,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 406,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 407,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 412,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 411,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 414,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 413,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 415,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 424,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 425,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 429,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 433,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 975,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 440,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 414,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 439,
												"id": 441,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 436,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 975,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1071
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 450,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 416,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 446,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 975,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1077
									],
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 459,
												"id": 461,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 456,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 457,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 975,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1002
									],
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 470,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 412,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 471,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 466,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 975,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 482,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 484,
													"indexExpression": {
														"id": 483,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 485,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 478,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 975,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1020
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 498,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 500,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 497,
												"id": 510,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 494,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 975,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1030
									],
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 523,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 525,
														"indexExpression": {
															"id": 524,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 527,
													"indexExpression": {
														"id": 526,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 522,
												"id": 528,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 519,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 975,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1040
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 554,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 541,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 543,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 540,
												"id": 553,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 975,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1052
									],
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 586,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 564,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 975,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 598,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 600,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 607,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 608,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 610,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 603,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 597,
												"id": 615,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 975,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													628
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 657,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 627,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 629,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 657,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 632,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"arguments": [
														{
															"id": 635,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 634,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 640,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 641,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 654,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 649,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 650,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 646,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 653,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 626,
												"id": 656,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 975,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 669,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 670,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 679,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"baseExpression": {
														"id": 696,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 698,
													"indexExpression": {
														"id": 697,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 702,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 721,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 707,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 709,
																"indexExpression": {
																	"id": 708,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 710,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 711,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 714,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 715,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 717,
																"indexExpression": {
																	"id": 716,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 718,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 720,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 723,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 722,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 728,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 975,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 744,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 745,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 754,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 762,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 763,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 772,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 766,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 768,
																"indexExpression": {
																	"id": 767,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 769,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 771,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 774,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 782,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 975,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"baseExpression": {
														"id": 821,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 823,
													"indexExpression": {
														"id": 822,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 826,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 827,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 844,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 832,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 834,
																"indexExpression": {
																	"id": 833,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 835,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 836,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 839,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 840,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 841,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 843,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 846,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 847,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 854,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 975,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 875,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 876,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 894,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 897,
															"indexExpression": {
																"id": 895,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 898,
														"indexExpression": {
															"id": 896,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 899,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 903,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 975,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"arguments": [
														{
															"id": 922,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 921,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 926,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 928,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 927,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 934,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 935,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 916,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 933,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 939,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 948,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 941,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 912,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 942,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 914,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 943,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 920,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 944,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 940,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 947,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 975,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 975,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 975,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 976,
							"src": "1532:11312:2",
							"usedErrors": [],
							"usedEvents": [
								987,
								996
							]
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1053
						]
					},
					"id": 1054,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 977,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 978,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1053,
							"linearizedBaseContracts": [
								1053
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 987,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 996,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 1053,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 1053,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 1053,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 1053,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 1053,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 1053,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1054,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								987,
								996
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1053
						],
						"IERC20Metadata": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1055,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1079,
							"sourceUnit": 1054,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1058,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1053,
										"src": "305:6:4"
									},
									"id": 1059,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1057,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078,
								1053
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1062,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 1078,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1068,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 1078,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1074,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 1078,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1079,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								987,
								996
							]
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1100
						]
					},
					"id": 1101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1081,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1100,
							"linearizedBaseContracts": [
								1100
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1086,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1085,
												"id": 1088,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1100,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1095,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1097,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1100,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1101,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.9.3/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2231
						],
						"SignedMath": [
							2336
						],
						"Strings": [
							1329
						]
					},
					"id": 1330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1102,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1330,
							"sourceUnit": 2232,
							"src": "126:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1330,
							"sourceUnit": 2337,
							"src": "152:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1105,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1329,
							"linearizedBaseContracts": [
								1329
							],
							"name": "Strings",
							"nameLocation": "228:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1108,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1329,
									"src": "242:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1106,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1107,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1111,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1329,
									"src": "302:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1109,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "518:625:6",
										"statements": [
											{
												"id": 1157,
												"nodeType": "UncheckedBlock",
												"src": "528:609:6",
												"statements": [
													{
														"assignments": [
															1120
														],
														"declarations": [
															{
																"constant": false,
																"id": 1120,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1157,
																"src": "552:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1119,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1127,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1123,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "580:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1121,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "569:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2231_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2068,
																	"src": "569:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:6"
													},
													{
														"assignments": [
															1129
														],
														"declarations": [
															{
																"constant": false,
																"id": 1129,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1157,
																"src": "604:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1128,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1134,
														"initialValue": {
															"arguments": [
																{
																	"id": 1132,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "638:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:6"
													},
													{
														"assignments": [
															1136
														],
														"declarations": [
															{
																"constant": false,
																"id": 1136,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1157,
																"src": "659:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1135,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1137,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:6"
													},
													{
														"AST": {
															"nativeSrc": "740:67:6",
															"nodeType": "YulBlock",
															"src": "740:67:6",
															"statements": [
																{
																	"nativeSrc": "758:35:6",
																	"nodeType": "YulAssignment",
																	"src": "758:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:6",
																						"nodeType": "YulLiteral",
																						"src": "781:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:6"
																				},
																				"nativeSrc": "777:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:6"
																		},
																		"nativeSrc": "765:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1129,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1120,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1136,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:6",
																"valueSize": 1
															}
														],
														"id": 1138,
														"nodeType": "InlineAssembly",
														"src": "731:76:6"
													},
													{
														"body": {
															"id": 1153,
															"nodeType": "Block",
															"src": "833:267:6",
															"statements": [
																{
																	"expression": {
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:6",
																		"subExpression": {
																			"id": 1140,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1136,
																			"src": "851:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1142,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:6",
																		"nodeType": "YulBlock",
																		"src": "934:84:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:6",
																											"nodeType": "YulLiteral",
																											"src": "985:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:6"
																									},
																									"nativeSrc": "974:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:6"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:6",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:6"
																							},
																							"nativeSrc": "969:30:6",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:6"
																					},
																					"nativeSrc": "956:44:6",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:6"
																				},
																				"nativeSrc": "956:44:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1108,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1136,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1114,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1143,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:6"
																},
																{
																	"expression": {
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1144,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "1035:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1147,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "1068:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1152,
																	"nodeType": "IfStatement",
																	"src": "1064:21:6",
																	"trueBody": {
																		"id": 1151,
																		"nodeType": "Break",
																		"src": "1080:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1154,
														"nodeType": "WhileStatement",
														"src": "820:280:6"
													},
													{
														"expression": {
															"id": 1155,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "1120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1118,
														"id": 1156,
														"nodeType": "Return",
														"src": "1113:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "503:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:6"
									},
									"scope": 1329,
									"src": "447:696:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1313:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1171,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "1354:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:6",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1180,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1162,
																					"src": "1400:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1178,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2336,
																					"src": "1385:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2336_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:6",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2335,
																				"src": "1385:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1177,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1159,
																			1187
																		],
																		"referencedDeclaration": 1159,
																		"src": "1376:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1169,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1167,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1185,
												"nodeType": "Return",
												"src": "1323:86:6"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1261:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1161,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1298:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:6"
									},
									"scope": 1329,
									"src": "1243:173:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "1595:100:6",
										"statements": [
											{
												"id": 1205,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1196,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "1648:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1199,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1190,
																				"src": "1667:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1197,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2231,
																				"src": "1655:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2231_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2191,
																			"src": "1655:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1195,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1207,
																	1283,
																	1303
																],
																"referencedDeclaration": 1283,
																"src": "1636:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1194,
														"id": 1204,
														"nodeType": "Return",
														"src": "1629:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:6"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1580:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:6"
									},
									"scope": 1329,
									"src": "1521:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "1908:347:6",
										"statements": [
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "1918:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1217,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1222,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "1954:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:6"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1228,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "1975:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1230,
														"indexExpression": {
															"hexValue": "30",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:6"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1234,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2000:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1236,
														"indexExpression": {
															"hexValue": "31",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:6"
											},
											{
												"body": {
													"id": 1268,
													"nodeType": "Block",
													"src": "2070:83:6",
													"statements": [
														{
															"expression": {
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1254,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "2084:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1256,
																	"indexExpression": {
																		"id": 1255,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "2091:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1257,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2096:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1261,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1258,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "2105:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:6"
														},
														{
															"expression": {
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "2131:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1267,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1248,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "2058:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"initializationExpression": {
													"assignments": [
														1241
													],
													"declarations": [
														{
															"constant": false,
															"id": 1241,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1269,
															"src": "2030:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1240,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1247,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1243,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2046:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:6",
														"subExpression": {
															"id": 1251,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "2067:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1271,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "2170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1279,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1277,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1216,
												"id": 1281,
												"nodeType": "Return",
												"src": "2227:21:6"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1839:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:6"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1893:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:6"
									},
									"scope": 1329,
									"src": "1818:437:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2480:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1296,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "2525:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1294,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1292,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1299,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2533:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1291,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1207,
															1283,
															1303
														],
														"referencedDeclaration": 1283,
														"src": "2497:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1301,
												"nodeType": "Return",
												"src": "2490:59:6"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2428:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:6"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"scope": 1329,
									"src": "2407:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "2711:66:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1316,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "2744:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1314,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1313,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1322,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "2767:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1320,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1319,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1312,
												"id": 1326,
												"nodeType": "Return",
												"src": "2721:49:6"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "2648:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "2665:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "2705:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:6"
									},
									"scope": 1329,
									"src": "2633:144:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1330,
							"src": "220:2559:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1353
						],
						"IERC165": [
							1365
						]
					},
					"id": 1354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1354,
							"sourceUnit": 1366,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1334,
										"name": "IERC165",
										"nameLocations": [
											"754:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "754:7:7"
									},
									"id": 1335,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1333,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1353,
							"linearizedBaseContracts": [
								1353,
								1365
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1364
									],
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1344,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1365_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1365_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1345,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1365",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1350,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1353,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1354,
							"src": "726:260:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1365
						]
					},
					"id": 1366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1356,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1365,
							"linearizedBaseContracts": [
								1365
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1365,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1366,
							"src": "405:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@4.9.3/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2231
						]
					},
					"id": 2232,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1368,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2231,
							"linearizedBaseContracts": [
								2231
							],
							"name": "Math",
							"nameLocation": "210:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1372,
									"members": [
										{
											"id": 1369,
											"name": "Down",
											"nameLocation": "245:4:9",
											"nodeType": "EnumValue",
											"src": "245:4:9"
										},
										{
											"id": 1370,
											"name": "Up",
											"nameLocation": "287:2:9",
											"nodeType": "EnumValue",
											"src": "287:2:9"
										},
										{
											"id": 1371,
											"name": "Zero",
											"nameLocation": "318:4:9",
											"nodeType": "EnumValue",
											"src": "318:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:9",
									"nodeType": "EnumDefinition",
									"src": "221:122:9"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "480:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1382,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "497:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1383,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "501:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1386,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "509:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:9",
													"trueExpression": {
														"id": 1385,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1388,
												"nodeType": "Return",
												"src": "490:20:9"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "426:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "437:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:9"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "471:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:9"
									},
									"scope": 2231,
									"src": "413:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "655:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1400,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "672:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1401,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "684:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:9",
													"trueExpression": {
														"id": 1403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "680:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1406,
												"nodeType": "Return",
												"src": "665:20:9"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "646:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:9"
									},
									"scope": 2231,
									"src": "588:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "876:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1418,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1419,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "935:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1421,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1422,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "941:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1423,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1425,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1429,
												"nodeType": "Return",
												"src": "923:28:9"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "822:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:9"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "867:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:9"
									},
									"scope": 2231,
									"src": "805:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "1228:123:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1441,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "1316:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1445,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1434,
																			"src": "1330:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1448,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1449,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "1339:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1440,
												"id": 1454,
												"nodeType": "Return",
												"src": "1309:35:9"
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1174:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1185:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:9"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1219:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:9"
									},
									"scope": 2231,
									"src": "1157:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1765:4115:9",
										"statements": [
											{
												"id": 1577,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:9",
												"statements": [
													{
														"assignments": [
															1469
														],
														"declarations": [
															{
																"constant": false,
																"id": 1469,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "2096:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1468,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1470,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:9"
													},
													{
														"assignments": [
															1472
														],
														"declarations": [
															{
																"constant": false,
																"id": 1472,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "2168:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1471,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1473,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:9"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:9",
															"nodeType": "YulBlock",
															"src": "2248:157:9",
															"statements": [
																{
																	"nativeSrc": "2266:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:9"
																				},
																				"nativeSrc": "2289:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:9"
																		},
																		"nativeSrc": "2276:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:9",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:9",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:9"
																		},
																		"nativeSrc": "2322:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:9",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:9"
																				},
																				"nativeSrc": "2361:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:9"
																				},
																				"nativeSrc": "2377:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:9"
																		},
																		"nativeSrc": "2357:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1472,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1459,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1459,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1461,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1461,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:9",
																"valueSize": 1
															}
														],
														"id": 1474,
														"nodeType": "InlineAssembly",
														"src": "2239:166:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1475,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "2486:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1483,
														"nodeType": "IfStatement",
														"src": "2482:368:9",
														"trueBody": {
															"id": 1482,
															"nodeType": "Block",
															"src": "2498:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1478,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "2816:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1479,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "2824:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1467,
																	"id": 1481,
																	"nodeType": "Return",
																	"src": "2809:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1485,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "2960:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1486,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "2974:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1484,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1490,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:9"
													},
													{
														"assignments": [
															1492
														],
														"declarations": [
															{
																"constant": false,
																"id": 1492,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "3261:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1491,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1493,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:9"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:9",
															"nodeType": "YulBlock",
															"src": "3301:291:9",
															"statements": [
																{
																	"nativeSrc": "3370:38:9",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:9"
																		},
																		"nativeSrc": "3383:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:9",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:9"
																				},
																				"nativeSrc": "3510:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:9"
																		},
																		"nativeSrc": "3499:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:9",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:9"
																		},
																		"nativeSrc": "3557:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1463,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1472,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1472,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1492,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1492,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1492,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1459,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1461,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:9",
																"valueSize": 1
															}
														],
														"id": 1494,
														"nodeType": "InlineAssembly",
														"src": "3292:300:9"
													},
													{
														"assignments": [
															1496
														],
														"declarations": [
															{
																"constant": false,
																"id": 1496,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "3899:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1495,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1504,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1497,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "3914:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:9",
																			"subExpression": {
																				"id": 1498,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "3930:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1502,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:9"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:9",
															"nodeType": "YulBlock",
															"src": "3969:362:9",
															"statements": [
																{
																	"nativeSrc": "4034:37:9",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:9"
																		},
																		"nativeSrc": "4049:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:9",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:9"
																		},
																		"nativeSrc": "4147:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:9",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:9"
																						},
																						"nativeSrc": "4294:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:9"
																				},
																				"nativeSrc": "4290:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:9"
																		},
																		"nativeSrc": "4286:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1463,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1463,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1496,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1496,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1496,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1496,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1496,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:9",
																"valueSize": 1
															}
														],
														"id": 1505,
														"nodeType": "InlineAssembly",
														"src": "3960:371:9"
													},
													{
														"expression": {
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1506,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "4397:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1507,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "4406:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1508,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "4414:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1511,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:9"
													},
													{
														"assignments": [
															1513
														],
														"declarations": [
															{
																"constant": false,
																"id": 1513,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "4736:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1512,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1520,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1515,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "4759:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:9"
													},
													{
														"expression": {
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1521,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "4992:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1523,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "5007:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1524,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "5021:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1528,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:9"
													},
													{
														"expression": {
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1529,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5061:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1531,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "5076:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1532,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "5090:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1536,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:9"
													},
													{
														"expression": {
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1537,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5131:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1539,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "5146:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1540,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "5160:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1544,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:9"
													},
													{
														"expression": {
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1545,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5201:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1547,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "5216:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1548,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "5230:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1552,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:9"
													},
													{
														"expression": {
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1553,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5271:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1555,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "5286:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1556,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "5300:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1560,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:9"
													},
													{
														"expression": {
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1561,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5342:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1563,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "5357:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1564,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "5371:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1568,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:9"
													},
													{
														"expression": {
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1569,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "5812:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1570,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "5821:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1571,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "5829:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1574,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:9"
													},
													{
														"expression": {
															"id": 1575,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "5857:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1467,
														"id": 1576,
														"nodeType": "Return",
														"src": "5850:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1683:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1694:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1705:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:9"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1749:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:9"
									},
									"scope": 2231,
									"src": "1667:4213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "6122:189:9",
										"statements": [
											{
												"assignments": [
													1595
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "6132:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"arguments": [
														{
															"id": 1597,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "6156:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1598,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "6159:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1599,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "6162:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1596,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1579,
															1623
														],
														"referencedDeclaration": 1579,
														"src": "6149:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1372",
															"typeString": "enum Math.Rounding"
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1602,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "6188:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1372",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1603,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "6200:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1372_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:9",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1370,
															"src": "6200:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1372",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1607,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "6222:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1608,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "6225:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1609,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "6228:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1606,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1619,
												"nodeType": "IfStatement",
												"src": "6184:98:9",
												"trueBody": {
													"id": 1618,
													"nodeType": "Block",
													"src": "6246:36:9",
													"statements": [
														{
															"expression": {
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1614,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "6260:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1617,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1620,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1595,
													"src": "6298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1621,
												"nodeType": "Return",
												"src": "6291:13:9"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "6028:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "6039:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "6050:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "6071:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1372",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1587,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1372,
														"src": "6071:8:9"
													},
													"referencedDeclaration": 1372,
													"src": "6071:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1372",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:9"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "6113:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:9"
									},
									"scope": 2231,
									"src": "6012:299:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "6587:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1631,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "6601:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "6597:45:9",
												"trueBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "6609:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1630,
															"id": 1635,
															"nodeType": "Return",
															"src": "6623:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "7321:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1642,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "7349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1641,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1903,
																			1939
																		],
																		"referencedDeclaration": 1903,
																		"src": "7344:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1646,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:9"
											},
											{
												"id": 1733,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:9",
												"statements": [
													{
														"expression": {
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1649,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "7782:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1650,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "7792:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1651,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "7801:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1652,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "7805:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1655,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1659,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:9"
													},
													{
														"expression": {
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1660,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "7831:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1661,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "7841:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1662,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "7850:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1663,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "7854:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1666,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1670,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:9"
													},
													{
														"expression": {
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1671,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "7880:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1672,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "7890:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1673,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "7899:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1674,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "7903:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1677,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1681,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:9"
													},
													{
														"expression": {
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1682,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "7929:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1683,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "7939:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1684,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "7948:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1685,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "7952:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1688,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1692,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:9"
													},
													{
														"expression": {
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1693,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "7978:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1694,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "7988:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1695,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "7997:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1696,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "8001:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1699,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1703,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:9"
													},
													{
														"expression": {
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1704,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "8027:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1705,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "8037:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1706,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "8046:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1707,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "8050:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1710,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1714,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:9"
													},
													{
														"expression": {
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1715,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "8076:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1716,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "8086:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1717,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "8095:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1718,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "8099:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1721,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1725,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1727,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "8136:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1728,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "8144:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1729,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "8148:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1726,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "8132:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1630,
														"id": 1732,
														"nodeType": "Return",
														"src": "8125:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "6544:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:9"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "6578:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:9"
									},
									"scope": 2231,
									"src": "6530:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "8348:161:9",
										"statements": [
											{
												"id": 1769,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:9",
												"statements": [
													{
														"assignments": [
															1747
														],
														"declarations": [
															{
																"constant": false,
																"id": 1747,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1769,
																"src": "8382:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1751,
														"initialValue": {
															"arguments": [
																{
																	"id": 1749,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "8404:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1748,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1735,
																	1771
																],
																"referencedDeclaration": 1735,
																"src": "8399:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "8427:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1372",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1753,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1741,
																					"src": "8437:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1754,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "8449:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1372_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1755,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1370,
																					"src": "8449:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1757,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1747,
																						"src": "8464:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1758,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1747,
																						"src": "8473:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1760,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "8482:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1766,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1745,
														"id": 1768,
														"nodeType": "Return",
														"src": "8420:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "8286:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "8297:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1372",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1739,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1372,
														"src": "8297:8:9"
													},
													"referencedDeclaration": 1372,
													"src": "8297:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1372",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:9"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "8339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:9"
									},
									"scope": 2231,
									"src": "8272:237:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "8694:922:9",
										"statements": [
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1902,
														"src": "8704:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"hexValue": "30",
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:9"
											},
											{
												"id": 1899,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "8760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1797,
														"nodeType": "IfStatement",
														"src": "8756:99:9",
														"trueBody": {
															"id": 1796,
															"nodeType": "Block",
															"src": "8778:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "8796:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1791,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:9"
																},
																{
																	"expression": {
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1792,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "8827:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1795,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1798,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "8872:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1812,
														"nodeType": "IfStatement",
														"src": "8868:96:9",
														"trueBody": {
															"id": 1811,
															"nodeType": "Block",
															"src": "8889:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1803,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "8907:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1806,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:9"
																},
																{
																	"expression": {
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1807,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "8937:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1810,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "8981:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1827,
														"nodeType": "IfStatement",
														"src": "8977:96:9",
														"trueBody": {
															"id": 1826,
															"nodeType": "Block",
															"src": "8998:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1818,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "9016:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1821,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:9"
																},
																{
																	"expression": {
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1822,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "9046:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1825,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "9090:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1842,
														"nodeType": "IfStatement",
														"src": "9086:96:9",
														"trueBody": {
															"id": 1841,
															"nodeType": "Block",
															"src": "9107:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1833,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "9125:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1836,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:9"
																},
																{
																	"expression": {
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1837,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "9155:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1840,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1843,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "9199:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1857,
														"nodeType": "IfStatement",
														"src": "9195:93:9",
														"trueBody": {
															"id": 1856,
															"nodeType": "Block",
															"src": "9215:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "9233:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1851,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:9"
																},
																{
																	"expression": {
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1852,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "9262:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1855,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1858,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "9305:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1872,
														"nodeType": "IfStatement",
														"src": "9301:93:9",
														"trueBody": {
															"id": 1871,
															"nodeType": "Block",
															"src": "9321:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1863,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "9339:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1866,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:9"
																},
																{
																	"expression": {
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1867,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "9368:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1870,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1873,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "9411:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "9407:93:9",
														"trueBody": {
															"id": 1886,
															"nodeType": "Block",
															"src": "9427:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1878,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "9445:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1881,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:9"
																},
																{
																	"expression": {
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1882,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "9474:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1885,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1888,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "9517:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1898,
														"nodeType": "IfStatement",
														"src": "9513:64:9",
														"trueBody": {
															"id": 1897,
															"nodeType": "Block",
															"src": "9533:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "9551:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1896,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1900,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1780,
													"src": "9603:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1778,
												"id": 1901,
												"nodeType": "Return",
												"src": "9596:13:9"
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "8647:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:9"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "8685:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:9"
									},
									"scope": 2231,
									"src": "8633:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "9849:165:9",
										"statements": [
											{
												"id": 1937,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:9",
												"statements": [
													{
														"assignments": [
															1915
														],
														"declarations": [
															{
																"constant": false,
																"id": 1915,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1937,
																"src": "9883:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1914,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1919,
														"initialValue": {
															"arguments": [
																{
																	"id": 1917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1906,
																	"src": "9905:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1916,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1903,
																	1939
																],
																"referencedDeclaration": 1903,
																"src": "9900:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1920,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "9932:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1372",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1921,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1909,
																					"src": "9942:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1922,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "9954:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1372_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1370,
																					"src": "9954:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1925,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1926,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1915,
																						"src": "9974:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1928,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "9983:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1913,
														"id": 1936,
														"nodeType": "Return",
														"src": "9925:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "9783:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "9798:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1372",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1908,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1907,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1372,
														"src": "9798:8:9"
													},
													"referencedDeclaration": 1372,
													"src": "9798:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1372",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:9"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "9840:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:9"
									},
									"scope": 2231,
									"src": "9769:245:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "10201:854:9",
										"statements": [
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2067,
														"src": "10211:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1950,
												"initialValue": {
													"hexValue": "30",
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:9"
											},
											{
												"id": 2064,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1951,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "10267:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1967,
														"nodeType": "IfStatement",
														"src": "10263:103:9",
														"trueBody": {
															"id": 1966,
															"nodeType": "Block",
															"src": "10286:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1956,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "10304:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1961,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:9"
																},
																{
																	"expression": {
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1962,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "10339:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1965,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1968,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "10383:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1984,
														"nodeType": "IfStatement",
														"src": "10379:103:9",
														"trueBody": {
															"id": 1983,
															"nodeType": "Block",
															"src": "10402:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1973,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "10420:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1978,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:9"
																},
																{
																	"expression": {
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1979,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "10455:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1982,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1985,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "10499:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2001,
														"nodeType": "IfStatement",
														"src": "10495:103:9",
														"trueBody": {
															"id": 2000,
															"nodeType": "Block",
															"src": "10518:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1990,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "10536:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1995,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:9"
																},
																{
																	"expression": {
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1996,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "10571:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1999,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2002,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "10615:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2018,
														"nodeType": "IfStatement",
														"src": "10611:100:9",
														"trueBody": {
															"id": 2017,
															"nodeType": "Block",
															"src": "10633:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2007,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "10651:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2012,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:9"
																},
																{
																	"expression": {
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2013,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "10685:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2016,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2019,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "10728:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2035,
														"nodeType": "IfStatement",
														"src": "10724:100:9",
														"trueBody": {
															"id": 2034,
															"nodeType": "Block",
															"src": "10746:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2024,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "10764:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:9"
																},
																{
																	"expression": {
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2030,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "10798:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2033,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2036,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "10841:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2052,
														"nodeType": "IfStatement",
														"src": "10837:100:9",
														"trueBody": {
															"id": 2051,
															"nodeType": "Block",
															"src": "10859:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2041,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "10877:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2046,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:9"
																},
																{
																	"expression": {
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "10911:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2050,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2053,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "10954:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2063,
														"nodeType": "IfStatement",
														"src": "10950:66:9",
														"trueBody": {
															"id": 2062,
															"nodeType": "Block",
															"src": "10972:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2058,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "10990:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2061,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2065,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1948,
													"src": "11042:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 2066,
												"nodeType": "Return",
												"src": "11035:13:9"
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "10154:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:9"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "10192:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:9"
									},
									"scope": 2231,
									"src": "10139:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "11290:167:9",
										"statements": [
											{
												"id": 2102,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:9",
												"statements": [
													{
														"assignments": [
															2080
														],
														"declarations": [
															{
																"constant": false,
																"id": 2080,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2102,
																"src": "11324:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2079,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2084,
														"initialValue": {
															"arguments": [
																{
																	"id": 2082,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "11347:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2081,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2068,
																	2104
																],
																"referencedDeclaration": 2068,
																"src": "11341:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2085,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "11374:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1372",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2086,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2074,
																					"src": "11384:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2087,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "11396:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1372_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1370,
																					"src": "11396:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2090,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2091,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2080,
																						"src": "11417:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2093,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2071,
																					"src": "11426:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2078,
														"id": 2101,
														"nodeType": "Return",
														"src": "11367:73:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "11224:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "11239:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1372",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2073,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2072,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1372,
														"src": "11239:8:9"
													},
													"referencedDeclaration": 1372,
													"src": "11239:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1372",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:9"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "11281:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:9"
									},
									"scope": 2231,
									"src": "11209:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2190,
										"nodeType": "Block",
										"src": "11771:600:9",
										"statements": [
											{
												"assignments": [
													2113
												],
												"declarations": [
													{
														"constant": false,
														"id": 2113,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2190,
														"src": "11781:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2115,
												"initialValue": {
													"hexValue": "30",
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:9"
											},
											{
												"id": 2187,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "11837:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2130,
														"nodeType": "IfStatement",
														"src": "11833:98:9",
														"trueBody": {
															"id": 2129,
															"nodeType": "Block",
															"src": "11855:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2107,
																			"src": "11873:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2124,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:9"
																},
																{
																	"expression": {
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2125,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2113,
																			"src": "11904:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2128,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "11948:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2145,
														"nodeType": "IfStatement",
														"src": "11944:95:9",
														"trueBody": {
															"id": 2144,
															"nodeType": "Block",
															"src": "11965:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2136,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2107,
																			"src": "11983:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2139,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:9"
																},
																{
																	"expression": {
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2140,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2113,
																			"src": "12013:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2143,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "12056:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2160,
														"nodeType": "IfStatement",
														"src": "12052:95:9",
														"trueBody": {
															"id": 2159,
															"nodeType": "Block",
															"src": "12073:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2107,
																			"src": "12091:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2154,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:9"
																},
																{
																	"expression": {
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2113,
																			"src": "12121:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2158,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "12164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2175,
														"nodeType": "IfStatement",
														"src": "12160:95:9",
														"trueBody": {
															"id": 2174,
															"nodeType": "Block",
															"src": "12181:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2107,
																			"src": "12199:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2169,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:9"
																},
																{
																	"expression": {
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2170,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2113,
																			"src": "12229:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2173,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "12272:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2186,
														"nodeType": "IfStatement",
														"src": "12268:64:9",
														"trueBody": {
															"id": 2185,
															"nodeType": "Block",
															"src": "12288:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2113,
																			"src": "12306:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2184,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2188,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2113,
													"src": "12358:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2111,
												"id": 2189,
												"nodeType": "Return",
												"src": "12351:13:9"
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "11724:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:9"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "11762:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:9"
									},
									"scope": 2231,
									"src": "11708:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "12608:174:9",
										"statements": [
											{
												"id": 2228,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:9",
												"statements": [
													{
														"assignments": [
															2203
														],
														"declarations": [
															{
																"constant": false,
																"id": 2203,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2228,
																"src": "12642:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2207,
														"initialValue": {
															"arguments": [
																{
																	"id": 2205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "12666:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2204,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2191,
																	2230
																],
																"referencedDeclaration": 2191,
																"src": "12659:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "12693:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1372",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2209,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2197,
																					"src": "12703:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2210,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "12715:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1372_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1370,
																					"src": "12715:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1372",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2213,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2216,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2214,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2203,
																									"src": "12736:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2215,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2217,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2219,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2194,
																					"src": "12751:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2225,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2201,
														"id": 2227,
														"nodeType": "Return",
														"src": "12686:79:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2192,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "12542:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "12557:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1372",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2195,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1372,
														"src": "12557:8:9"
													},
													"referencedDeclaration": 1372,
													"src": "12557:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1372",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:9"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "12599:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:9"
									},
									"scope": 2231,
									"src": "12526:256:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2232,
							"src": "202:12582:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2336
						]
					},
					"id": 2337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2233,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2234,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2336,
							"linearizedBaseContracts": [
								2336
							],
							"name": "SignedMath",
							"nameLocation": "223:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "375:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2244,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "392:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2245,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "396:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2248,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2239,
														"src": "404:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:10",
													"trueExpression": {
														"id": 2247,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "400:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2243,
												"id": 2250,
												"nodeType": "Return",
												"src": "385:20:10"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "324:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2236,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "334:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2238,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:10"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "367:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2241,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:10"
									},
									"scope": 2336,
									"src": "311:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2269,
										"nodeType": "Block",
										"src": "554:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2262,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "571:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2263,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "575:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2266,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "583:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:10",
													"trueExpression": {
														"id": 2265,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2255,
														"src": "579:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2261,
												"id": 2268,
												"nodeType": "Return",
												"src": "564:20:10"
											}
										]
									},
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "503:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2254,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "513:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2256,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:10"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "546:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2259,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:10"
									},
									"scope": 2336,
									"src": "490:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "796:162:10",
										"statements": [
											{
												"assignments": [
													2281
												],
												"declarations": [
													{
														"constant": false,
														"id": 2281,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2313,
														"src": "858:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2280,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2294,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2282,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "870:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2283,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "874:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2285,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2286,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2273,
																				"src": "881:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2287,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "885:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2292,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2295,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "910:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2300,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2281,
																						"src": "930:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2299,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2298,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2296,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2305,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2273,
																				"src": "944:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2306,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2275,
																				"src": "948:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2308,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2310,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2279,
												"id": 2312,
												"nodeType": "Return",
												"src": "903:48:10"
											}
										]
									},
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "745:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2272,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "755:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2274,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:10"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "788:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2277,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:10"
									},
									"scope": 2336,
									"src": "728:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "1102:158:10",
										"statements": [
											{
												"id": 2333,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2324,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "1227:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:10",
																		"subExpression": {
																			"id": 2328,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "1241:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:10",
																	"trueExpression": {
																		"id": 2327,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2317,
																		"src": "1236:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2322,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2321,
														"id": 2332,
														"nodeType": "Return",
														"src": "1212:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "1060:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2316,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:10"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "1093:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:10"
									},
									"scope": 2336,
									"src": "1047:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2337,
							"src": "215:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:10"
				},
				"id": 10
			},
			"contracts/FlameBorn Token.sol": {
				"ast": {
					"absolutePath": "contracts/FlameBorn Token.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							1100
						],
						"ERC165": [
							1353
						],
						"ERC20": [
							975
						],
						"FlamebornToken": [
							2434
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1365
						],
						"IERC20": [
							1053
						],
						"IERC20Metadata": [
							1078
						],
						"Math": [
							2231
						],
						"SignedMath": [
							2336
						],
						"Strings": [
							1329
						]
					},
					"id": 2435,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
							"file": "@openzeppelin/contracts@4.9.3/access/AccessControl.sol",
							"id": 2339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2435,
							"sourceUnit": 316,
							"src": "58:64:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
							"id": 2340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2435,
							"sourceUnit": 976,
							"src": "123:61:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2341,
										"name": "ERC20",
										"nameLocations": [
											"213:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 975,
										"src": "213:5:11"
									},
									"id": 2342,
									"nodeType": "InheritanceSpecifier",
									"src": "213:5:11"
								},
								{
									"baseName": {
										"id": 2343,
										"name": "AccessControl",
										"nameLocations": [
											"220:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "220:13:11"
									},
									"id": 2344,
									"nodeType": "InheritanceSpecifier",
									"src": "220:13:11"
								}
							],
							"canonicalName": "FlamebornToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2434,
							"linearizedBaseContracts": [
								2434,
								315,
								1353,
								1365,
								388,
								975,
								1078,
								1053,
								1100
							],
							"name": "FlamebornToken",
							"nameLocation": "195:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e328400c",
									"id": 2349,
									"mutability": "constant",
									"name": "MULTISIG_ROLE",
									"nameLocation": "264:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2434,
									"src": "240:66:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2345,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d554c54495349475f524f4c45",
												"id": 2347,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "290:15:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab",
													"typeString": "literal_string \"MULTISIG_ROLE\""
												},
												"value": "MULTISIG_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a5a0b70b385ff7611cd3840916bd08b10829e5bf9e6637cf79dd9a427fc0e2ab",
													"typeString": "literal_string \"MULTISIG_ROLE\""
												}
											],
											"id": 2346,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "280:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "280:26:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2351,
									"mutability": "mutable",
									"name": "_initialMintComplete",
									"nameLocation": "325:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 2434,
									"src": "312:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2350,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "312:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "414:297:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2361,
																"name": "multisigWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "432:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "458:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "450:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2362,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "450:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "450:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "432:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d756c74697369672061646472657373",
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "462:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0400d57d7dcb81c8d59b1b1298f680cdaf2a06192e4d8bd9f5639fdb0cc41c0b",
																"typeString": "literal_string \"Invalid multisig address\""
															},
															"value": "Invalid multisig address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0400d57d7dcb81c8d59b1b1298f680cdaf2a06192e4d8bd9f5639fdb0cc41c0b",
																"typeString": "literal_string \"Invalid multisig address\""
															}
														],
														"id": 2360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "424:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2369,
												"nodeType": "ExpressionStatement",
												"src": "424:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2371,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "519:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2372,
															"name": "multisigWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "539:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2370,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "508:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "508:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "508:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2376,
															"name": "MULTISIG_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "575:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2377,
															"name": "multisigWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "590:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2375,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "564:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "564:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "564:41:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2381,
															"name": "multisigWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "630:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "646:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "652:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2384,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "656:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "656:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "652:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "646:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2380,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2417
														],
														"referencedDeclaration": 2417,
														"src": "624:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "624:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "624:43:11"
											},
											{
												"expression": {
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2390,
														"name": "_initialMintComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "677:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "700:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "677:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2393,
												"nodeType": "ExpressionStatement",
												"src": "677:27:11"
											}
										]
									},
									"id": 2395,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "466c616d65626f726e",
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "394:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_be2f90afef796eb576028337b5a598283c68088a0af4d646024500c17c05c115",
														"typeString": "literal_string \"Flameborn\""
													},
													"value": "Flameborn"
												},
												{
													"hexValue": "464c42",
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "407:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bb0dc3331b723f4dc9550898b9abb46f1376afb2911e6b6f3ed621013a62fa44",
														"typeString": "literal_string \"FLB\""
													},
													"value": "FLB"
												}
											],
											"id": 2358,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2355,
												"name": "ERC20",
												"nameLocations": [
													"388:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 975,
												"src": "388:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "388:25:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "multisigWallet",
												"nameLocation": "372:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "364:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:24:11"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:11"
									},
									"scope": 2434,
									"src": "352:359:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "826:117:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "844:21:11",
															"subExpression": {
																"id": 2404,
																"name": "_initialMintComplete",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "845:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e672064697361626c6564207065726d616e656e746c79",
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "867:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_016f54888592b810d33780a25b38354502ff07ac177c6263c30423664e07aa58",
																"typeString": "literal_string \"Minting disabled permanently\""
															},
															"value": "Minting disabled permanently"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_016f54888592b810d33780a25b38354502ff07ac177c6263c30423664e07aa58",
																"typeString": "literal_string \"Minting disabled permanently\""
															}
														],
														"id": 2403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "836:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2408,
												"nodeType": "ExpressionStatement",
												"src": "836:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2412,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "920:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2413,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "929:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2409,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "908:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FlamebornToken_$2434_$",
																"typeString": "type(contract super FlamebornToken)"
															}
														},
														"id": 2411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "914:5:11",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "908:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "908:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "908:28:11"
											}
										]
									},
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "761:5:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2401,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "817:8:11"
									},
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "775:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "767:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "792:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "784:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:33:11"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:0:11"
									},
									"scope": 2434,
									"src": "752:191:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "1026:36:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2428,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "1042:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2429,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "1048:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2427,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "1036:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2431,
												"nodeType": "ExpressionStatement",
												"src": "1036:19:11"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2424,
													"name": "MULTISIG_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2349,
													"src": "1011:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2423,
												"name": "onlyRole",
												"nameLocations": [
													"1002:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1002:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1002:23:11"
										}
									],
									"name": "burn",
									"nameLocation": "958:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "971:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "963:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "985:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "977:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:30:11"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:0:11"
									},
									"scope": 2434,
									"src": "949:113:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2435,
							"src": "186:878:11",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345,
								987,
								996
							]
						}
					],
					"src": "32:1032:11"
				},
				"id": 11
			}
		}
	}
}